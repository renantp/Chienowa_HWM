RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1223251604/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Tue Aug 23 10:01:04 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_control_setting
00000000                       25  	.EXTERN _g_timerSetting
00000000                       26  	.EXTERN _g_numberSetting
00000000                       27  	.EXTERN _g_io_status
00000000                       28  	.EXTERN _g_Tick
00000000                       29  	.EXTERN _g_commnunication_flag
00000000                       30  	.EXTERN _g_machine_mode
00000000                       31  	.EXTERN _g_systemTime
00000000                       32  	.EXTERN _g_csi_rev_end
00000000                       33  	.EXTERN _g_uart2_sendend
00000000                       34  	.EXTERN _g_uart3_sendend
00000000                       35  	.EXTERN _g_rx_data
00000000                       36  	.EXTERN _g_uart3_rx_data
00000000                       37  	.PUBLIC _g_adc_ch
00000000                       38  	.PUBLIC _g_e_status
00000000                       39  	.PUBLIC _ret_number_setting
00000000                       40  	.PUBLIC _led_st
00000000                       41  	.PUBLIC _flow_p
00000000                       42  	.PUBLIC _salt_h_p
00000000                       43  	.PUBLIC _g_eeprom_wren
00000000                       44  	.PUBLIC _send_data
00000000                       45  	.PUBLIC _receive_data
00000000                       46  	.PUBLIC _receive_setting
00000000                       47  	.PUBLIC _set
00000000                       48  	.PUBLIC _rx_data
00000000                       49  	.PUBLIC _data_f
00000000                       50  	.PUBLIC _data_f_test
00000000                       51  	.PUBLIC _g_control_buffer_f
00000000                       52  	.PUBLIC _g_control_buffer_u32
00000000                       53  	.PUBLIC _g_control_buffer_i32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _io_testsize
00000000                       65  	.PUBLIC _nostop_checkHandSensor
00000000                       66  	.EXTERN _ns_delay_ms
00000000                       67  	.PUBLIC _readHS
00000000                       68  	.EXTERN _delay_ms
00000000                       69  	.PUBLIC _main
00000000                       70  	.PUBLIC _R_MAIN_UserInit
00000000                       71  	.EXTERN _EEPROM_Init
00000000                       72  	.EXTERN _EE_SPI_Read
00000000                       73  	.EXTERN ___fpclassifyf
00000000                       74  	.EXTERN _manufactureReset
00000000                       75  	.EXTERN _R_UART2_Receive
00000000                       76  	.EXTERN _R_UART3_Receive
00000000                       77  	.EXTERN _sendRS485
00000000                       78  	.EXTERN _handSensorLED
00000000                       79  	.EXTERN _main_init_20211111
00000000                       80  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       81  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       82  	.EXTERN _realTimeResponse
00000000                       83  	.EXTERN _main_loop_20211111
00000000                       84  	.EXTERN _UpdateMachineStatus
00000000                       85  	.EXTERN _sendR485_7byte
00000000                       86  	.EXTERN _R_UART3_Stop
00000000                       87  	.EXTERN _R_UART3_Start
00000000                       88  	.EXTERN _crc8_4
00000000                       89  	.EXTERN _crc8_1
00000000                       90  	.EXTERN _R_WDT_Restart
00000000                       91  	.EXTERN _R_TAU0_Create
00000000                       92  	.EXTERN _R_SAU0_Create
00000000                       93  	.EXTERN _R_SAU1_Create
00000000                       94  	.EXTERN _R_UART1_Create
00000000                       95  	.EXTERN _R_UART2_Create
00000000                       96  	.EXTERN _R_UART3_Create
00000000                       97  	.EXTERN _R_RTC_Create
00000000                       98  	.EXTERN _R_PORT_Create_UserInit
00000000                       99  	.EXTERN _R_CSI01_Create
00000000                      100  	.EXTERN _R_CSI00_Create
00000000                      101  	.EXTERN _R_TAU0_Channel0_Start
00000000                      102  	.EXTERN _R_UART1_Start
00000000                      103  	.EXTERN _R_UART2_Start
00000000                      104  	.EXTERN _R_CSI00_Start
00000000                      105  	.EXTERN _R_ADC_Create
00000000                      106  	.EXTERN _R_ADC_Set_OperationOn
00000000                      107  	.EXTERN _R_ADC_Start
00000000                      108  	.EXTERN _R_DAC_Create
00000000                      109  	.EXTERN _R_DAC0_Start
00000000                      110  	.EXTERN _R_DAC1_Start
00000000                      111  
00000000                      112  	.SECTION .textf,TEXTF
00000000                      113  _nostop_checkHandSensor:
00000000                      114  	.STACK _nostop_checkHandSensor = 4
00000000                      115  	;***        1 : /***********************************************************************************************************************
00000000                      116  	;***        2 : * DISCLAIMER
00000000                      117  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      118  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      119  	;***        5 : * applicable laws, including copyright laws. 
00000000                      120  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      121  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      122  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      123  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      124  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      125  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      126  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                      127  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                      128  	;***       14 : * following link:
00000000                      129  	;***       15 : * http://www.renesas.com/disclaimer
00000000                      130  	;***       16 : *
00000000                      131  	;***       17 : * Copyright (C) 2011, 2021 Renesas Electronics Corporation. All rights reserved.
00000000                      132  	;***       18 : ***********************************************************************************************************************/
00000000                      133  	;***       19 : 
00000000                      134  	;***       20 : /***********************************************************************************************************************
00000000                      135  	;***       21 : * File Name    : r_main.c
00000000                      136  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.06.02 [08 Nov 2021]
00000000                      137  	;***       23 : * Device(s)    : R5F104ML
00000000                      138  	;***       24 : * Tool-Chain   : CCRL
00000000                      139  	;***       25 : * Description  : This file implements main function.
00000000                      140  	;***       26 : * Creation Date: 8/23/2022
00000000                      141  	;***       27 : ***********************************************************************************************************************/
00000000                      142  	;***       28 : 
00000000                      143  	;***       29 : /***********************************************************************************************************************
00000000                      144  	;***       30 : Includes
00000000                      145  	;***       31 : ***********************************************************************************************************************/
00000000                      146  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      147  	;***       33 : #include "r_cg_cgc.h"
00000000                      148  	;***       34 : #include "r_cg_port.h"
00000000                      149  	;***       35 : #include "r_cg_serial.h"
00000000                      150  	;***       36 : #include "r_cg_adc.h"
00000000                      151  	;***       37 : #include "r_cg_dac.h"
00000000                      152  	;***       38 : #include "r_cg_timer.h"
00000000                      153  	;***       39 : #include "r_cg_wdt.h"
00000000                      154  	;***       40 : #include "r_cg_rtc.h"
00000000                      155  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      156  	;***       42 : #include "EEPROM.h"
00000000                      157  	;***       43 : #include "usr_timer.h"
00000000                      158  	;***       44 : #include "usr_setting_sheet.h"
00000000                      159  	;***       45 : #include "crc8.h"
00000000                      160  	;***       46 : #include "hwm/hwm_main.h"
00000000                      161  	;***       47 : #include "r_cg_userdefine.h"
00000000                      162  	;***       48 : #include <math.h>
00000000                      163  	;***       49 : /* End user code. Do not edit comment generated here */
00000000                      164  	;***       50 : #include "r_cg_userdefine.h"
00000000                      165  	;***       51 : 
00000000                      166  	;***       52 : /***********************************************************************************************************************
00000000                      167  	;***       53 : Pragma directive
00000000                      168  	;***       54 : ***********************************************************************************************************************/
00000000                      169  	;***       55 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      170  	;***       56 : 
00000000                      171  	;***       57 : //#define TESTING_FIRMWARE
00000000                      172  	;***       58 : /* End user code. Do not edit comment generated here */
00000000                      173  	;***       59 : 
00000000                      174  	;***       60 : /***********************************************************************************************************************
00000000                      175  	;***       61 : Global variables and functions
00000000                      176  	;***       62 : ***********************************************************************************************************************/
00000000                      177  	;***       63 : /* Start user code for global. Do not edit comment generated here */
00000000                      178  	;***       64 : 
00000000                      179  	;***       65 : volatile int g_adc_ch = 0;
00000000                      180  	;***       66 : union EEPROM_status_u g_e_status;
00000000                      181  	;***       67 : struct Number_Setting_s ret_number_setting;
00000000                      182  	;***       68 : uint8_t led_st = 0xff;
00000000                      183  	;***       69 : uint8_t flow_p, salt_h_p;
00000000                      184  	;***       70 : uint8_t g_eeprom_wren;
00000000                      185  	;***       71 : uint8_t send_data[2] = { 0x23, 0xab };
00000000                      186  	;***       72 : uint8_t receive_data[2];
00000000                      187  	;***       73 : struct Number_Setting_s receive_setting;
00000000                      188  	;***       74 : union EEPROM_status_u set;
00000000                      189  	;***       75 : uint32_t rx_data[3];
00000000                      190  	;***       76 : float data_f;
00000000                      191  	;***       77 : union byte_to_float data_f_test;
00000000                      192  	;***       78 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      193  	;***       79 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      194  	;***       80 : struct UART_Buffer_i32_s g_control_buffer_i32;
00000000                      195  	;***       81 : 
00000000                      196  	;***       82 : union {
00000000                      197  	;***       83 : 	struct {
00000000                      198  	;***       84 : 		uint8_t up_signal;
00000000                      199  	;***       85 : 	};
00000000                      200  	;***       86 : 	uint8_t status;
00000000                      201  	;***       87 : } handsensor_status;
00000000                      202  	;***       88 : uint8_t g_handsensor_status[2];
00000000                      203  	;***       89 : void nostop_checkHandSensor(void) {
00000000                      204  	;***       90 : 	if (DETECT_U() == I_ON) {
00000000                      205  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 90
00000000 8D07                 206  	mov a, 0xFFF07
00000002 315300               207  	bt a.5, $.BB@LABEL@1_5
00000005                      208  .BB@LABEL@1_1:	; if_then_bb
00000005                      209  	;***       91 : 		if (ns_delay_ms(&g_Tick.tickHandSensor[0], 500)) {
00000005                      210  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000005 F6                   211  	clrw ax
00000006 14                   212  	movw de, ax
00000007 32F401               213  	movw bc, #0x01F4
0000000A 300000               214  	movw ax, #LOWW(_g_Tick+0x00098)
0000000D FC000000             215  	call !!_ns_delay_ms
00000011 F7                   216  	clrw bc
00000012 43                   217  	cmpw ax, bc
00000013 DD00                 218  	bz $.BB@LABEL@1_9
00000015                      219  .BB@LABEL@1_2:	; if_then_bb16
00000015                      220  	;***       92 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0 ? 1 : 0;
00000015                      221  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000015 D50000               222  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   223  	oneb a
00000019 61E8                 224  	skz
0000001B                      225  .BB@LABEL@1_3:	; bb22
0000001B F1                   226  	clrb a
0000001C                      227  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               228  	mov !LOWW(_g_handsensor_status), a
0000001F                      229  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
0000001F D7                   230  	ret
00000020                      231  .BB@LABEL@1_5:	; if_else_bb
00000020                      232  	;***       93 : 		}
00000020                      233  	;***       94 : 	} else if (DETECT_D() == I_ON) {
00000020                      234  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 94
00000020 8D07                 235  	mov a, 0xFFF07
00000022 314300               236  	bt a.4, $.BB@LABEL@1_7
00000025                      237  .BB@LABEL@1_6:	; if_then_bb43
00000025                      238  	;***       95 : 		g_handsensor_status[1] = 1;
00000025                      239  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 95
00000025 E50000               240  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   241  	ret
00000029                      242  .BB@LABEL@1_7:	; if_else_bb44
00000029                      243  	;***       96 : 	} else if (DETECT_U() == I_OFF) {
00000029                      244  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 96
00000029 8D07                 245  	mov a, 0xFFF07
0000002B 315300               246  	bt a.5, $.BB@LABEL@1_9
0000002E                      247  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      248  	;***       97 : 
0000002E                      249  	;***       98 : 	} else if (DETECT_D() == I_OFF) {
0000002E                      250  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
0000002E 8D07                 251  	mov a, 0xFFF07
00000030                      252  .BB@LABEL@1_9:	; return
00000030                      253  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000030 D7                   254  	ret
00000031                      255  _readHS:
00000031                      256  	.STACK _readHS = 4
00000031                      257  	;***       99 : 
00000031                      258  	;***      100 : 	}
00000031                      259  	;***      101 : }
00000031                      260  	;***      102 : uint8_t readHS(void) {
00000031                      261  	;***      103 : 	if (DETECT_U()) {
00000031                      262  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 103
00000031 8D07                 263  	mov a, 0xFFF07
00000033 315300               264  	bt a.5, $.BB@LABEL@2_2
00000036                      265  .BB@LABEL@2_1:	; bb33
00000036                      266  	;***      104 : 		delay_ms(2);
00000036                      267  	;***      105 : 		if (DETECT_U())
00000036                      268  	;***      106 : 			return 1;
00000036                      269  	;***      107 : 		return 0;
00000036                      270  	;***      108 : 	} else
00000036                      271  	;***      109 : 		return 0;
00000036                      272  	;***      110 : }
00000036                      273  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 110
00000036 F1                   274  	clrb a
00000037 D7                   275  	ret
00000038                      276  .BB@LABEL@2_2:	; if_then_bb
00000038                      277  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 104
00000038 F7                   278  	clrw bc
00000039 E6                   279  	onew ax
0000003A A1                   280  	incw ax
0000003B FC000000             281  	call !!_delay_ms
0000003F                      282  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 105
0000003F 8D07                 283  	mov a, 0xFFF07
00000041 315A                 284  	shr a, 0x05
00000043 5C01                 285  	and a, #0x01
00000045 D7                   286  	ret
00000046                      287  _main:
00000046                      288  	.STACK _main = 24
00000046                      289  	;***      111 : 
00000046                      290  	;***      112 : uint8_t this_size = sizeof(g_io_status);
00000046                      291  	;***      113 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      292  	;***      114 : uint8_t send_buf[7] = { 8, 1, 2, 3, 4, 5, 6 };
00000046                      293  	;***      115 : char g_crc[8];
00000046                      294  	;***      116 : uint32_t g_crc_32[8];
00000046                      295  	;***      117 : uint32_t data_crc[2] = { 30500, 60200 };
00000046                      296  	;***      118 : uint8_t rx_count;
00000046                      297  	;***      119 : uint8_t dac_out[2] = { 0xff, 0xff };
00000046                      298  	;***      120 : uint8_t io_testsize;
00000046                      299  	;***      121 : /* End user code. Do not edit comment generated here */
00000046                      300  	;***      122 : void R_MAIN_UserInit(void);
00000046                      301  	;***      123 : 
00000046                      302  	;***      124 : /***********************************************************************************************************************
00000046                      303  	;***      125 : * Function Name: main
00000046                      304  	;***      126 : * Description  : This function implements main function.
00000046                      305  	;***      127 : * Arguments    : None
00000046                      306  	;***      128 : * Return Value : None
00000046                      307  	;***      129 : ***********************************************************************************************************************/
00000046                      308  	;***      130 : void main(void)
00000046                      309  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
00000046 2010                 310  	subw sp, #0x10
00000048                      311  	;***      131 : {
00000048                      312  	;***      132 :     R_MAIN_UserInit();
00000048                      313  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000048 FE0000               314  	call $!_R_MAIN_UserInit
0000004B                      315  	;***      133 :     /* Start user code. Do not edit comment generated here */
0000004B                      316  	;***      134 : 
0000004B                      317  	;***      135 : 	//TODO: EEPROM Initialize and read Setting
0000004B                      318  	;***      136 : 	EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      319  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 136
0000004B F2                   320  	clrb c
0000004C 300000               321  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             322  	call !!_EEPROM_Init
00000053 F6                   323  	clrw ax
00000054                      324  	;***      137 : 	EE_SPI_Read((uint8_t*) &g_numberSetting, NUMBER_SETTING_ADDRESS,
00000054                      325  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 137
00000054 C1                   326  	push ax
00000055 5029                 327  	mov x, #0x29
00000057 C1                   328  	push ax
00000058 F7                   329  	clrw bc
00000059 300000               330  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             331  	call !!_EE_SPI_Read
00000060 1004                 332  	addw sp, #0x04
00000062 F6                   333  	clrw ax
00000063                      334  	;***      138 : 			numberSettingSize);
00000063                      335  	;***      139 : 	EE_SPI_Read((uint8_t*) &g_timerSetting, TIME_SETTING_ADDRESS,
00000063                      336  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
00000063 C1                   337  	push ax
00000064 50A1                 338  	mov x, #0xA1
00000066 C1                   339  	push ax
00000067 320008               340  	movw bc, #0x0800
0000006A 300000               341  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             342  	call !!_EE_SPI_Read
00000071 1004                 343  	addw sp, #0x04
00000073 F6                   344  	clrw ax
00000074                      345  	;***      140 : 			timeSettingSize);
00000074                      346  	;***      141 : 	EE_SPI_Read((uint8_t*) &g_control_setting.data,
00000074                      347  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
00000074 C1                   348  	push ax
00000075 A1                   349  	incw ax
00000076 C1                   350  	push ax
00000077 322900               351  	movw bc, #0x0029
0000007A 300000               352  	movw ax, #LOWW(_g_control_setting)
0000007D FC000000             353  	call !!_EE_SPI_Read
00000081 1004                 354  	addw sp, #0x04
00000083                      355  	;***      142 : 	NUMBER_SETTING_ADDRESS + numberSettingSize, sizeof(g_control_setting.data));
00000083                      356  	;***      143 : 	// Set to default valve
00000083                      357  	;***      144 : //	g_timerSetting.t1_initialWaterDrainageOperation_s > 180
00000083                      358  	;***      145 : 	io_testsize = sizeof(g_io_status);
00000083                      359  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
00000083 CF000010             360  	mov !LOWW(_io_testsize), #0x10
00000087                      361  	;***      146 : 	if (isnan(g_numberSetting.saltPumpVoltage)) {
00000087                      362  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 146
00000087 DB0000               363  	movw bc, !LOWW(_g_numberSetting+0x00026)
0000008A AF0000               364  	movw ax, !LOWW(_g_numberSetting+0x00024)
0000008D FC000000             365  	call !!___fpclassifyf
00000091 440200               366  	cmpw ax, #0x0002
00000094 61F8                 367  	sknz
00000096                      368  .BB@LABEL@3_1:	; if_then_bb
00000096                      369  	;***      147 : 		manufactureReset();
00000096                      370  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
00000096 FC000000             371  	call !!_manufactureReset
0000009A                      372  .BB@LABEL@3_2:	; if_break_bb
0000009A                      373  	;***      148 : 	}
0000009A                      374  	;***      149 : //	manufactureReset();
0000009A                      375  	;***      150 : 	_settingNumber = g_numberSetting;
0000009A                      376  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
0000009A 342A00               377  	movw de, #0x002A
0000009D 320000               378  	movw bc, #LOWW(_g_numberSetting)
000000A0 300000               379  	movw ax, #LOWW(__settingNumber)
000000A3 FC000000             380  	call !!_memcpy
000000A7                      381  	;***      151 : 	_settingTime = g_timerSetting;
000000A7                      382  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
000000A7 34A200               383  	movw de, #0x00A2
000000AA 320000               384  	movw bc, #LOWW(_g_timerSetting)
000000AD 300000               385  	movw ax, #LOWW(__settingTime)
000000B0 FC000000             386  	call !!_memcpy
000000B4                      387  	;***      152 : 	EEPROM_PROTECT_EN();
000000B4                      388  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 152
000000B4 71030E               389  	clr1 0xFFF0E.0
000000B7                      390  	;***      153 : 	//TODO: Start receive command from Raspberry Pi
000000B7                      391  	;***      154 : 	R_UART2_Receive(g_rx_data, 6);
000000B7                      392  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 154
000000B7 320600               393  	movw bc, #0x0006
000000BA 300000               394  	movw ax, #LOWW(_g_rx_data)
000000BD FC000000             395  	call !!_R_UART2_Receive
000000C1                      396  	;***      155 : 
000000C1                      397  	;***      156 : 	//TODO: Start receive data from RS485
000000C1                      398  	;***      157 : 	O_RS485_MODE_PIN = 1U;
000000C1                      399  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 157
000000C1 710200               400  	set1 0xFFF00.0
000000C4                      401  	;***      158 : 	R_UART3_Receive(g_uart3_rx_data, 7);
000000C4                      402  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 158
000000C4 320700               403  	movw bc, #0x0007
000000C7 300000               404  	movw ax, #LOWW(_g_uart3_rx_data)
000000CA FC000000             405  	call !!_R_UART3_Receive
000000CE F6                   406  	clrw ax
000000CF                      407  	;***      159 : 	uint8_t wts, vpcb, vpcb_v = 1;
000000CF                      408  	;***      160 : 	sendRS485(0xff, 82, 2, 12);
000000CF                      409  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 160
000000CF C1                   410  	push ax
000000D0 500C                 411  	mov x, #0x0C
000000D2 C1                   412  	push ax
000000D3 5202                 413  	mov c, #0x02
000000D5 3052FF               414  	movw ax, #0xFF52
000000D8 FC000000             415  	call !!_sendRS485
000000DC 1004                 416  	addw sp, #0x04
000000DE                      417  	;***      161 : 
000000DE                      418  	;***      162 : 	//TODO: Turn off Hand Sensor LED
000000DE                      419  	;***      163 : 	g_pre_color = BLUE;
000000DE                      420  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
000000DE CF000003             421  	mov !LOWW(_g_pre_color), #0x03
000000E2                      422  	;***      164 : 	handSensorLED(BLACK);
000000E2                      423  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 164
000000E2 F1                   424  	clrb a
000000E3 FC000000             425  	call !!_handSensorLED
000000E7 360000               426  	movw hl, #LOWW(_g_control_setting)
000000EA                      427  	;***      165 : 
000000EA                      428  	;***      166 : 	//TODO: Set default washing mode
000000EA                      429  	;***      167 : 	g_machine_mode = HAND_WASHING;
000000EA                      430  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 167
000000EA E50000               431  	oneb !LOWW(_g_machine_mode)
000000ED 319500               432  	bf [hl].1, $.BB@LABEL@3_4
000000F0                      433  .BB@LABEL@3_3:	; if_then_bb32
000000F0                      434  	;***      168 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000F0                      435  	;***      169 : 
000000F0                      436  	;***      170 : //TODO: Run Initialize Operation
000000F0                      437  	;***      171 : 	if (g_control_setting.raw.power_on == ON) {
000000F0                      438  	;***      172 : 		main_init_20211111();
000000F0                      439  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 172
000000F0 FC000000             440  	call !!_main_init_20211111
000000F4                      441  .BB@LABEL@3_4:	; if_break_bb33
000000F4 30A040               442  	movw ax, #0x40A0
000000F7                      443  	;***      173 : 	}
000000F7                      444  	;***      174 : 	//TODO: Output CVCC and Salt pump voltage
000000F7                      445  	;***      175 : 	CVCC_Current_Set(
000000F7                      446  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
000000F7 C1                   447  	push ax
000000F8 F6                   448  	clrw ax
000000F9 C1                   449  	push ax
000000FA DB0000               450  	movw bc, !LOWW(_g_numberSetting+0x00022)
000000FD AF0000               451  	movw ax, !LOWW(_g_numberSetting+0x00020)
00000100 FC000000             452  	call !!__COM_fdiv
00000104 14                   453  	movw de, ax
00000105 1004                 454  	addw sp, #0x04
00000107 307F43               455  	movw ax, #0x437F
0000010A C1                   456  	push ax
0000010B F6                   457  	clrw ax
0000010C C1                   458  	push ax
0000010D 15                   459  	movw ax, de
0000010E FC000000             460  	call !!__COM_fmul
00000112 1004                 461  	addw sp, #0x04
00000114 FC000000             462  	call !!__COM_ftoul
00000118 60                   463  	mov a, x
00000119 FC000000             464  	call !!_R_DAC0_Set_ConversionValue
0000011D 309B40               465  	movw ax, #0x409B
00000120                      466  	;***      176 : 			(uint8_t) (g_numberSetting.cvccCurrent/CVCC_MAX_VOLTAGE*255));
00000120                      467  	;***      177 : 	Salt_Analog_Set(
00000120                      468  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
00000120 C1                   469  	push ax
00000121 300C02               470  	movw ax, #0x020C
00000124 C1                   471  	push ax
00000125 DB0000               472  	movw bc, !LOWW(_g_numberSetting+0x00026)
00000128 AF0000               473  	movw ax, !LOWW(_g_numberSetting+0x00024)
0000012B FC000000             474  	call !!__COM_fdiv
0000012F 14                   475  	movw de, ax
00000130 1004                 476  	addw sp, #0x04
00000132 307F43               477  	movw ax, #0x437F
00000135 C1                   478  	push ax
00000136 F6                   479  	clrw ax
00000137 C1                   480  	push ax
00000138 15                   481  	movw ax, de
00000139 FC000000             482  	call !!__COM_fmul
0000013D 1004                 483  	addw sp, #0x04
0000013F FC000000             484  	call !!__COM_ftoul
00000143 60                   485  	mov a, x
00000144 FC000000             486  	call !!_R_DAC1_Set_ConversionValue
00000148 E1                   487  	oneb a
00000149 9802                 488  	mov [sp+0x02], a
0000014B 9801                 489  	mov [sp+0x01], a
0000014D 9800                 490  	mov [sp+0x00], a
0000014F                      491  .BB@LABEL@3_5:	; bb244
0000014F                      492  	;***      178 : 			(uint8_t) (g_numberSetting.saltPumpVoltage/SALT_PUMP_MAX_VOLTAGE*255));
0000014F                      493  	;***      179 : 
0000014F                      494  	;***      180 : 	while (1U) {
0000014F                      495  	;***      181 : 
0000014F                      496  	;***      182 : 		realTimeResponse();
0000014F                      497  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 182
0000014F FC000000             498  	call !!_realTimeResponse
00000153                      499  	;***      183 : 		main_loop_20211111();
00000153                      500  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
00000153 FC000000             501  	call !!_main_loop_20211111
00000157                      502  	;***      184 : 
00000157                      503  	;***      185 : 		handSensorLED(g_color);
00000157                      504  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 185
00000157 8F0000               505  	mov a, !LOWW(_g_color)
0000015A FC000000             506  	call !!_handSensorLED
0000015E                      507  	;***      186 : 		UpdateMachineStatus();
0000015E                      508  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 186
0000015E FC000000             509  	call !!_UpdateMachineStatus
00000162                      510  	;***      187 : //		if (g_uart2_fault == 1) {
00000162                      511  	;***      188 : //			R_UART2_Stop();
00000162                      512  	;***      189 : //			delay_ms(10);
00000162                      513  	;***      190 : //			R_UART2_Start();
00000162                      514  	;***      191 : //			g_uart2_fault = 0;
00000162                      515  	;***      192 : //		}
00000162                      516  	;***      193 : 
00000162                      517  	;***      194 : 		// Communication with WaterSoftener
00000162                      518  	;***      195 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_response_flag) {
00000162                      519  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 195
00000162 D50000               520  	cmp0 !LOWW(_g_commnunication_flag+0x00011)
00000165 DD00                 521  	bz $.BB@LABEL@3_7
00000167                      522  .BB@LABEL@3_6:	; if_then_bb49
00000167 F6                   523  	clrw ax
00000168                      524  	;***      196 : 			sendRS485(0xff, 82, 2, 5);
00000168                      525  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
00000168 C1                   526  	push ax
00000169 5005                 527  	mov x, #0x05
0000016B C1                   528  	push ax
0000016C 5202                 529  	mov c, #0x02
0000016E 3052FF               530  	movw ax, #0xFF52
00000171 FC000000             531  	call !!_sendRS485
00000175 1004                 532  	addw sp, #0x04
00000177                      533  	;***      197 : //    		rx_count++;
00000177                      534  	;***      198 : 			wts = 1; //Test flag = 1
00000177                      535  	;***      199 : 			g_commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
00000177                      536  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 199
00000177 F50000               537  	clrb !LOWW(_g_commnunication_flag+0x00011)
0000017A E1                   538  	oneb a
0000017B 9800                 539  	mov [sp+0x00], a
0000017D                      540  .BB@LABEL@3_7:	; if_break_bb50
0000017D                      541  	;***      200 : 		}
0000017D                      542  	;***      201 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1) {
0000017D                      543  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
0000017D 40000001             544  	cmp !LOWW(_g_commnunication_flag+0x00012), #0x01
00000181 DF00                 545  	bnz $.BB@LABEL@3_11
00000183                      546  .BB@LABEL@3_8:	; if_then_bb56
00000183                      547  	;***      202 : 			// Sand to Water softener SV state
00000183                      548  	;***      203 : 			sendRS485(0xff, 82, 24,
00000183                      549  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 203
00000183 360000               550  	movw hl, #LOWW(_g_io_status+0x00001)
00000186 E7                   551  	onew bc
00000187 318300               552  	bt [hl].0, $.BB@LABEL@3_10
0000018A                      553  .BB@LABEL@3_9:	; bb64
0000018A B3                   554  	decw bc
0000018B                      555  .BB@LABEL@3_10:	; bb66
0000018B F6                   556  	clrw ax
0000018C C1                   557  	push ax
0000018D C3                   558  	push bc
0000018E 5218                 559  	mov c, #0x18
00000190 3052FF               560  	movw ax, #0xFF52
00000193 FC000000             561  	call !!_sendRS485
00000197 1004                 562  	addw sp, #0x04
00000199                      563  	;***      204 : 					(uint32_t) g_io_status.refined.io.Valve.SV1 == 1 ? 1 : 0);
00000199                      564  	;***      205 : 			g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
00000199                      565  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 205
00000199 F50000               566  	clrb !LOWW(_g_commnunication_flag+0x00012)
0000019C                      567  .BB@LABEL@3_11:	; if_break_bb70
0000019C 8800                 568  	mov a, [sp+0x00]
0000019E                      569  	;***      206 : 		}
0000019E                      570  	;***      207 : 		// Test SV1 for Water Softener
0000019E                      571  	;***      208 : 		if (wts != 0) {
0000019E                      572  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
0000019E D1                   573  	cmp0 a
0000019F DF00                 574  	bnz $.BB@LABEL@3_13
000001A1                      575  .BB@LABEL@3_12:	; if_else_bb90
000001A1                      576  	;***      209 : 			if (ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)) {
000001A1                      577  	;***      210 : 				if (wts == 1) {
000001A1                      578  	;***      211 : 					O_SUPPLY_WATER_PIN_SV1 = ON;
000001A1                      579  	;***      212 : //					sendRS485(1, 82, 24,(uint32_t) 1);
000001A1                      580  	;***      213 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
000001A1                      581  	;***      214 : 					wts = 2;
000001A1                      582  	;***      215 : 				} else {
000001A1                      583  	;***      216 : 					O_SUPPLY_WATER_PIN_SV1 = OFF;
000001A1                      584  	;***      217 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
000001A1                      585  	;***      218 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
000001A1                      586  	;***      219 : 					wts = 0;
000001A1                      587  	;***      220 : 				}
000001A1                      588  	;***      221 : 			}
000001A1                      589  	;***      222 : 		} else {
000001A1                      590  	;***      223 : 			g_Tick.tickWaterSoftenerPCB = g_systemTime;
000001A1                      591  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 223
000001A1 AF0000               592  	movw ax, !LOWW(_g_systemTime+0x00002)
000001A4 BF0000               593  	movw !LOWW(_g_Tick+0x00052), ax
000001A7 AF0000               594  	movw ax, !LOWW(_g_systemTime)
000001AA BF0000               595  	movw !LOWW(_g_Tick+0x00050), ax
000001AD EF00                 596  	br $.BB@LABEL@3_17
000001AF                      597  .BB@LABEL@3_13:	; if_then_bb76
000001AF                      598  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 209
000001AF F6                   599  	clrw ax
000001B0 14                   600  	movw de, ax
000001B1 328813               601  	movw bc, #0x1388
000001B4 300000               602  	movw ax, #LOWW(_g_Tick+0x00050)
000001B7 FC000000             603  	call !!_ns_delay_ms
000001BB F7                   604  	clrw bc
000001BC 43                   605  	cmpw ax, bc
000001BD DD00                 606  	bz $.BB@LABEL@3_17
000001BF                      607  .BB@LABEL@3_14:	; if_then_bb81
000001BF 8800                 608  	mov a, [sp+0x00]
000001C1                      609  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
000001C1 91                   610  	dec a
000001C2 DF00                 611  	bnz $.BB@LABEL@3_16
000001C4                      612  .BB@LABEL@3_15:	; if_then_bb87
000001C4                      613  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001C4 717201               614  	set1 0xFFF01.7
000001C7 C80002               615  	mov [sp+0x00], #0x02
000001CA EF00                 616  	br $.BB@LABEL@3_17
000001CC                      617  .BB@LABEL@3_16:	; if_else_bb
000001CC                      618  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
000001CC 717301               619  	clr1 0xFFF01.7
000001CF F1                   620  	clrb a
000001D0 9800                 621  	mov [sp+0x00], a
000001D2                      622  .BB@LABEL@3_17:	; if_break_bb92
000001D2                      623  	;***      224 : 		}
000001D2                      624  	;***      225 : 
000001D2                      625  	;***      226 : 		//---------------------------------Valve PCB------------------------------------
000001D2                      626  	;***      227 : 		if (g_commnunication_flag.rs485_send_to_valve_response_flag == 1) {
000001D2                      627  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 227
000001D2 40000001             628  	cmp !LOWW(_g_commnunication_flag+0x00013), #0x01
000001D6 DF00                 629  	bnz $.BB@LABEL@3_19
000001D8                      630  .BB@LABEL@3_18:	; if_then_bb98
000001D8 AEF8                 631  	movw ax, sp
000001DA 040600               632  	addw ax, #0x0006
000001DD B804                 633  	movw [sp+0x04], ax
000001DF                      634  	;***      228 : 			// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
000001DF                      635  	;***      229 : 			// 0 - Stand alone 1 - Control Valve
000001DF                      636  	;***      230 : 			uint8_t _b[5] = { vpcb_v, g_uart3_sendend % 2, g_systemTime % 2, 0,
000001DF                      637  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
000001DF 340500               638  	movw de, #0x0005
000001E2 320000               639  	movw bc, #SMRLW(.STR@1)
000001E5 FC000000             640  	call !!_memcpy
000001E9 8802                 641  	mov a, [sp+0x02]
000001EB 9806                 642  	mov [sp+0x06], a
000001ED E1                   643  	oneb a
000001EE 5F0000               644  	and a, !LOWW(_g_uart3_sendend)
000001F1 9807                 645  	mov [sp+0x07], a
000001F3 AF0000               646  	movw ax, !LOWW(_g_systemTime+0x00002)
000001F6 AF0000               647  	movw ax, !LOWW(_g_systemTime)
000001F9 60                   648  	mov a, x
000001FA 5C01                 649  	and a, #0x01
000001FC 9808                 650  	mov [sp+0x08], a
000001FE A804                 651  	movw ax, [sp+0x04]
00000200 12                   652  	movw bc, ax
00000201                      653  	;***      231 : 					1 };
00000201                      654  	;***      232 : 			sendR485_7byte(0xff, 12, _b);
00000201                      655  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 232
00000201 300CFF               656  	movw ax, #0xFF0C
00000204 FC000000             657  	call !!_sendR485_7byte
00000208                      658  	;***      233 : 			vpcb++;
00000208                      659  	;***      234 : 			g_commnunication_flag.rs485_send_to_valve_response_flag = 0;
00000208                      660  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 234
00000208 F50000               661  	clrb !LOWW(_g_commnunication_flag+0x00013)
0000020B 8801                 662  	mov a, [sp+0x01]
0000020D                      663  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 233
0000020D 81                   664  	inc a
0000020E 9801                 665  	mov [sp+0x01], a
00000210 EF00                 666  	br $.BB@LABEL@3_21
00000212                      667  .BB@LABEL@3_19:	; if_else_bb116
00000212                      668  	;***      235 : 		} else if (g_commnunication_flag.rs485_get_valve_gesture_flag == 1) {
00000212                      669  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 235
00000212 40000001             670  	cmp !LOWW(_g_commnunication_flag+0x00014), #0x01
00000216 DF00                 671  	bnz $.BB@LABEL@3_21
00000218                      672  .BB@LABEL@3_20:	; if_then_bb122
00000218 AEF8                 673  	movw ax, sp
0000021A 040B00               674  	addw ax, #0x000B
0000021D B804                 675  	movw [sp+0x04], ax
0000021F                      676  	;***      236 : 			uint8_t _b[5] = { 0, 1, 0, 0, 1 };
0000021F                      677  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 236
0000021F 340500               678  	movw de, #0x0005
00000222 320000               679  	movw bc, #SMRLW(.STR@1730)
00000225 FC000000             680  	call !!_memcpy
00000229 A804                 681  	movw ax, [sp+0x04]
0000022B 12                   682  	movw bc, ax
0000022C                      683  	;***      237 : 			sendR485_7byte(0xff, 1, _b);
0000022C                      684  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 237
0000022C 3001FF               685  	movw ax, #0xFF01
0000022F FC000000             686  	call !!_sendR485_7byte
00000233                      687  	;***      238 : 			g_commnunication_flag.rs485_get_valve_gesture_flag = 0;
00000233                      688  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 238
00000233 F50000               689  	clrb !LOWW(_g_commnunication_flag+0x00014)
00000236                      690  .BB@LABEL@3_21:	; if_break_bb126
00000236 8801                 691  	mov a, [sp+0x01]
00000238                      692  	;***      239 : 		}
00000238                      693  	;***      240 : 
00000238                      694  	;***      241 : 		if (vpcb != 0) {
00000238                      695  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 241
00000238 D1                   696  	cmp0 a
00000239 DF00                 697  	bnz $.BB@LABEL@3_23
0000023B                      698  .BB@LABEL@3_22:	; if_else_bb150
0000023B                      699  	;***      242 : 			if (ns_delay_ms(&g_Tick.tickValvePCB, 5000)) {
0000023B                      700  	;***      243 : 				vpcb_v = vpcb_v == 1 ? 0 : 1;
0000023B                      701  	;***      244 : 				vpcb = 0;
0000023B                      702  	;***      245 : 			}
0000023B                      703  	;***      246 : 		} else {
0000023B                      704  	;***      247 : 			g_Tick.tickValvePCB = g_systemTime;
0000023B                      705  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
0000023B AF0000               706  	movw ax, !LOWW(_g_systemTime+0x00002)
0000023E BF0000               707  	movw !LOWW(_g_Tick+0x00056), ax
00000241 AF0000               708  	movw ax, !LOWW(_g_systemTime)
00000244 BF0000               709  	movw !LOWW(_g_Tick+0x00054), ax
00000247 EF00                 710  	br $.BB@LABEL@3_26
00000249                      711  .BB@LABEL@3_23:	; if_then_bb132
00000249                      712  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 242
00000249 F6                   713  	clrw ax
0000024A 14                   714  	movw de, ax
0000024B 328813               715  	movw bc, #0x1388
0000024E 300000               716  	movw ax, #LOWW(_g_Tick+0x00054)
00000251 FC000000             717  	call !!_ns_delay_ms
00000255 F7                   718  	clrw bc
00000256 43                   719  	cmpw ax, bc
00000257 DD00                 720  	bz $.BB@LABEL@3_26
00000259                      721  .BB@LABEL@3_24:	; if_then_bb137
00000259 8802                 722  	mov a, [sp+0x02]
0000025B                      723  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 243
0000025B 91                   724  	dec a
0000025C F1                   725  	clrb a
0000025D 9801                 726  	mov [sp+0x01], a
0000025F DF00                 727  	bnz $.BB@LABEL@3_28
00000261                      728  .BB@LABEL@3_25:	; if_then_bb137.if_break_bb152_crit_edge
00000261 9802                 729  	mov [sp+0x02], a
00000263                      730  .BB@LABEL@3_26:	; if_break_bb152
00000263                      731  	;***      248 : 		}
00000263                      732  	;***      249 : 
00000263                      733  	;***      250 : 		//RS485 fault check
00000263                      734  	;***      251 : 		if (g_commnunication_flag.rs485_fault == 1) {
00000263                      735  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 251
00000263 40000001             736  	cmp !LOWW(_g_commnunication_flag+0x00015), #0x01
00000267 DF00                 737  	bnz $.BB@LABEL@3_29
00000269                      738  .BB@LABEL@3_27:	; if_then_bb158
00000269                      739  	;***      252 : 			R_UART3_Stop();
00000269                      740  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
00000269 FC000000             741  	call !!_R_UART3_Stop
0000026D                      742  	;***      253 : 			g_commnunication_flag.rs485_fault++;
0000026D                      743  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 253
0000026D A00000               744  	inc !LOWW(_g_commnunication_flag+0x00015)
00000270                      745  	;***      254 : 			g_Tick.tickRS485 = g_systemTime;
00000270                      746  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 254
00000270 AF0000               747  	movw ax, !LOWW(_g_systemTime+0x00002)
00000273 BF0000               748  	movw !LOWW(_g_Tick+0x0005A), ax
00000276 AF0000               749  	movw ax, !LOWW(_g_systemTime)
00000279 BF0000               750  	movw !LOWW(_g_Tick+0x00058), ax
0000027C EF00                 751  	br $.BB@LABEL@3_32
0000027E                      752  .BB@LABEL@3_28:	; bb143
0000027E E1                   753  	oneb a
0000027F EF00                 754  	br $.BB@LABEL@3_25
00000281                      755  .BB@LABEL@3_29:	; if_else_bb162
00000281                      756  	;***      255 : 		} else if (g_commnunication_flag.rs485_fault == 2) {
00000281                      757  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 255
00000281 40000002             758  	cmp !LOWW(_g_commnunication_flag+0x00015), #0x02
00000285 DF00                 759  	bnz $.BB@LABEL@3_32
00000287                      760  .BB@LABEL@3_30:	; if_then_bb168
00000287                      761  	;***      256 : 			if (ns_delay_ms(&g_Tick.tickRS485, 500)) {
00000287                      762  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 256
00000287 F6                   763  	clrw ax
00000288 14                   764  	movw de, ax
00000289 32F401               765  	movw bc, #0x01F4
0000028C 300000               766  	movw ax, #LOWW(_g_Tick+0x00058)
0000028F FC000000             767  	call !!_ns_delay_ms
00000293 F7                   768  	clrw bc
00000294 43                   769  	cmpw ax, bc
00000295 DD00                 770  	bz $.BB@LABEL@3_32
00000297                      771  .BB@LABEL@3_31:	; if_then_bb173
00000297                      772  	;***      257 : 				R_UART3_Start();
00000297                      773  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 257
00000297 FC000000             774  	call !!_R_UART3_Start
0000029B                      775  	;***      258 : 				R_UART3_Receive(g_uart3_rx_data, 7);
0000029B                      776  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 258
0000029B 320700               777  	movw bc, #0x0007
0000029E 300000               778  	movw ax, #LOWW(_g_uart3_rx_data)
000002A1 FC000000             779  	call !!_R_UART3_Receive
000002A5                      780  	;***      259 : 				g_commnunication_flag.rs485_fault = 0;
000002A5                      781  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 259
000002A5 F50000               782  	clrb !LOWW(_g_commnunication_flag+0x00015)
000002A8                      783  .BB@LABEL@3_32:	; if_break_bb177
000002A8                      784  	;***      260 : 			}
000002A8                      785  	;***      261 : 		}
000002A8                      786  	;***      262 : //--------------------------------- Testing code---------------------------------------------------------------
000002A8                      787  	;***      263 : 
000002A8                      788  	;***      264 : 		flow_p = I_FLOW_PLUSE_PIN == 1 ? 1 : 0;
000002A8                      789  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 264
000002A8 8D00                 790  	mov a, 0xFFF00
000002AA 719C                 791  	mov1 CY, a.1
000002AC E1                   792  	oneb a
000002AD 61C8                 793  	skc
000002AF                      794  .BB@LABEL@3_33:	; bb185
000002AF F1                   795  	clrb a
000002B0                      796  .BB@LABEL@3_34:	; bb187
000002B0 9F0000               797  	mov !LOWW(_flow_p), a
000002B3                      798  	;***      265 : 		if (ns_delay_ms(&g_Tick.tickCustom[1], 60000)) {
000002B3                      799  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 265
000002B3 F6                   800  	clrw ax
000002B4 14                   801  	movw de, ax
000002B5 3260EA               802  	movw bc, #0xEA60
000002B8 300000               803  	movw ax, #LOWW(_g_Tick+0x000A4)
000002BB FC000000             804  	call !!_ns_delay_ms
000002BF                      805  	;***      266 : 
000002BF                      806  	;***      267 : 		}
000002BF                      807  	;***      268 : 
000002BF                      808  	;***      269 : 		if (ns_delay_ms(&g_Tick.tick1s, 1000)) {
000002BF                      809  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 269
000002BF F6                   810  	clrw ax
000002C0 14                   811  	movw de, ax
000002C1 32E803               812  	movw bc, #0x03E8
000002C4 300000               813  	movw ax, #LOWW(_g_Tick+0x00004)
000002C7 FC000000             814  	call !!_ns_delay_ms
000002CB F7                   815  	clrw bc
000002CC 43                   816  	cmpw ax, bc
000002CD DD00                 817  	bz $.BB@LABEL@3_38
000002CF                      818  .BB@LABEL@3_35:	; if_then_bb201
000002CF                      819  	;***      270 : //			rx_count++;
000002CF                      820  	;***      271 : //			O_PUMP_PRESS_PIN = ~O_PUMP_PRESS_PIN;
000002CF                      821  	;***      272 : 			led_st = led_st == 0 ? 0xff : 0x00;
000002CF                      822  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 272
000002CF D50000               823  	cmp0 !LOWW(_led_st)
000002D2 51FF                 824  	mov a, #0xFF
000002D4 61E8                 825  	skz
000002D6                      826  .BB@LABEL@3_36:	; bb207
000002D6 F1                   827  	clrb a
000002D7                      828  .BB@LABEL@3_37:	; bb209
000002D7 9F0000               829  	mov !LOWW(_led_st), a
000002DA                      830  	;***      273 : 			uint8_t state = g_uart2_sendend;
000002DA                      831  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 273
000002DA 8F0000               832  	mov a, !LOWW(_g_uart2_sendend)
000002DD                      833  	;***      274 : 			g_crc[6] = crc8_4((uint8_t*) &g_timerSetting,
000002DD                      834  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 274
000002DD 52A0                 835  	mov c, #0xA0
000002DF 300000               836  	movw ax, #LOWW(_g_timerSetting)
000002E2 FC000000             837  	call !!_crc8_4
000002E6 9F0000               838  	mov !LOWW(_g_crc+0x00006), a
000002E9                      839  	;***      275 : 					sizeof(struct Timer_Setting_s) - 2);
000002E9                      840  	;***      276 : 			g_crc[7] = crc8_1((uint8_t*) &g_timerSetting,
000002E9                      841  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 276
000002E9 52A0                 842  	mov c, #0xA0
000002EB 300000               843  	movw ax, #LOWW(_g_timerSetting)
000002EE FC000000             844  	call !!_crc8_1
000002F2 9F0000               845  	mov !LOWW(_g_crc+0x00007), a
000002F5                      846  .BB@LABEL@3_38:	; if_break_bb224
000002F5                      847  	;***      277 : 					sizeof(struct Timer_Setting_s) - 2);
000002F5                      848  	;***      278 : //			}
000002F5                      849  	;***      279 : 			if (led_st == 0x00) {
000002F5                      850  	;***      280 : 
000002F5                      851  	;***      281 : 			} else {
000002F5                      852  	;***      282 : 
000002F5                      853  	;***      283 : 
000002F5                      854  	;***      284 : 			}
000002F5                      855  	;***      285 : 		}
000002F5                      856  	;***      286 : 
000002F5                      857  	;***      287 : //--------------------------------End testing code---------------------------------------------------------
000002F5                      858  	;***      288 : 		if ((g_machine_state.mode == WATER_WASHING)
000002F5                      859  	;***      289 : 				|| (g_machine_state.mode == INDIE)) {
000002F5                      860  	;***      290 : 
000002F5                      861  	;***      291 : 		}
000002F5                      862  	;***      292 : 		R_WDT_Restart();
000002F5                      863  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 292
000002F5 FC000000             864  	call !!_R_WDT_Restart
000002F9 EE0000               865  	br $!.BB@LABEL@3_5
000002FC                      866  _R_MAIN_UserInit:
000002FC                      867  	.STACK _R_MAIN_UserInit = 4
000002FC                      868  	;***      293 : 	}
000002FC                      869  	;***      294 : 	/* End user code. Do not edit comment generated here */
000002FC                      870  	;***      295 : }
000002FC                      871  	;***      296 : 
000002FC                      872  	;***      297 : /***********************************************************************************************************************
000002FC                      873  	;***      298 : * Function Name: R_MAIN_UserInit
000002FC                      874  	;***      299 : * Description  : This function adds user code before implementing main function.
000002FC                      875  	;***      300 : * Arguments    : None
000002FC                      876  	;***      301 : * Return Value : None
000002FC                      877  	;***      302 : ***********************************************************************************************************************/
000002FC                      878  	;***      303 : void R_MAIN_UserInit(void)
000002FC                      879  	;***      304 : {
000002FC                      880  	;***      305 :     /* Start user code. Do not edit comment generated here */
000002FC                      881  	;***      306 : 	EI();
000002FC                      882  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 306
000002FC 717AFA               883  	ei
000002FF                      884  	;***      307 : 	R_TAU0_Create();
000002FF                      885  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 307
000002FF FC000000             886  	call !!_R_TAU0_Create
00000303                      887  	;***      308 : 	R_SAU0_Create();
00000303                      888  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 308
00000303 FC000000             889  	call !!_R_SAU0_Create
00000307                      890  	;***      309 : 	R_SAU1_Create();
00000307                      891  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 309
00000307 FC000000             892  	call !!_R_SAU1_Create
0000030B                      893  	;***      310 : 	R_UART1_Create();
0000030B                      894  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 310
0000030B FC000000             895  	call !!_R_UART1_Create
0000030F                      896  	;***      311 : 	R_UART2_Create();
0000030F                      897  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 311
0000030F FC000000             898  	call !!_R_UART2_Create
00000313                      899  	;***      312 : 	R_UART3_Create();
00000313                      900  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 312
00000313 FC000000             901  	call !!_R_UART3_Create
00000317                      902  	;***      313 : 	R_RTC_Create();
00000317                      903  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 313
00000317 FC000000             904  	call !!_R_RTC_Create
0000031B                      905  	;***      314 : 	R_PORT_Create_UserInit();
0000031B                      906  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 314
0000031B FC000000             907  	call !!_R_PORT_Create_UserInit
0000031F                      908  	;***      315 : 	R_CSI01_Create();
0000031F                      909  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 315
0000031F FC000000             910  	call !!_R_CSI01_Create
00000323                      911  	;***      316 : 	R_CSI00_Create();
00000323                      912  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 316
00000323 FC000000             913  	call !!_R_CSI00_Create
00000327                      914  	;***      317 : 
00000327                      915  	;***      318 : 	R_TAU0_Channel0_Start();
00000327                      916  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 318
00000327 FC000000             917  	call !!_R_TAU0_Channel0_Start
0000032B                      918  	;***      319 : 	R_UART3_Start();
0000032B                      919  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 319
0000032B FC000000             920  	call !!_R_UART3_Start
0000032F                      921  	;***      320 : 	R_UART1_Start();
0000032F                      922  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 320
0000032F FC000000             923  	call !!_R_UART1_Start
00000333                      924  	;***      321 : 	R_UART2_Start();
00000333                      925  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 321
00000333 FC000000             926  	call !!_R_UART2_Start
00000337                      927  	;***      322 : 	R_CSI00_Start();
00000337                      928  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 322
00000337 FC000000             929  	call !!_R_CSI00_Start
0000033B                      930  	;***      323 : //    R_CSI01_Start();
0000033B                      931  	;***      324 : 
0000033B                      932  	;***      325 : 	R_ADC_Create();
0000033B                      933  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 325
0000033B FC000000             934  	call !!_R_ADC_Create
0000033F                      935  	;***      326 : 	R_ADC_Set_OperationOn();
0000033F                      936  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 326
0000033F FC000000             937  	call !!_R_ADC_Set_OperationOn
00000343                      938  	;***      327 : 	R_ADC_Start();
00000343                      939  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 327
00000343 FC000000             940  	call !!_R_ADC_Start
00000347                      941  	;***      328 : 
00000347                      942  	;***      329 : 	R_DAC_Create();
00000347                      943  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 329
00000347 FC000000             944  	call !!_R_DAC_Create
0000034B                      945  	;***      330 : //	CVCC_Current_Set(0x0);
0000034B                      946  	;***      331 : //	Salt_Analog_Set(0x0);
0000034B                      947  	;***      332 : 	R_DAC0_Start();
0000034B                      948  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 332
0000034B FC000000             949  	call !!_R_DAC0_Start
0000034F                      950  	;***      333 : 	R_DAC1_Start();
0000034F                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 333
0000034F EC000000             952  	br !!_R_DAC1_Start
00000353                      953  	;***      334 : 	/* End user code. Do not edit comment generated here */
00000353                      954  	;***      335 : }
00000353                      955  	;***      336 : 
00000353                      956  	;***      337 : /* Start user code for adding. Do not edit comment generated here */
00000353                      957  	;***      338 : /* End user code. Do not edit comment generated here */
00000000                      958  	.SECTION .data,DATA
00000000                      959  	.ALIGN 2
00000000                      960  _g_adc_ch:
00000000 0000                 961  	.DS (2)
00000002                      962  _led_st:
00000002 FF                   963  	.DB 0xFF
00000003                      964  _send_data:
00000003 23                   965  	.DB 0x23,0xAB
00000004 AB              
00000005                      966  _this_size:
00000005 10                   967  	.DB 0x10
00000006                      968  _this_size_2:
00000006 10                   969  	.DB 0x10
00000007                      970  _send_buf:
00000007 08                   971  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                      972  	.ALIGN 2
0000000E                      973  _data_crc:
0000000E 24770000             974  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                      975  _dac_out:
00000016 FF                   976  	.DB 0xFF,0xFF
00000017 FF              
00000000                      977  	.SECTION .bss,BSS
00000000                      978  _g_e_status:
00000000                      979  	.DS (1)
00000001 00                   980  	.ALIGN 2
00000002                      981  _ret_number_setting:
00000002                      982  	.DS (42)
0000002C                      983  _flow_p:
0000002C                      984  	.DS (1)
0000002D                      985  _salt_h_p:
0000002D                      986  	.DS (1)
0000002E                      987  _g_eeprom_wren:
0000002E                      988  	.DS (1)
0000002F                      989  _receive_data:
0000002F                      990  	.DS (2)
00000031 00                   991  	.ALIGN 2
00000032                      992  _receive_setting:
00000032                      993  	.DS (42)
0000005C                      994  _set:
0000005C                      995  	.DS (1)
0000005D 00                   996  	.ALIGN 2
0000005E                      997  _rx_data:
0000005E                      998  	.DS (12)
0000006A                      999  	.ALIGN 2
0000006A                     1000  _data_f:
0000006A                     1001  	.DS (4)
0000006E                     1002  	.ALIGN 2
0000006E                     1003  _data_f_test:
0000006E                     1004  	.DS (4)
00000072                     1005  	.ALIGN 2
00000072                     1006  _g_control_buffer_f:
00000072                     1007  	.DS (6)
00000078                     1008  	.ALIGN 2
00000078                     1009  _g_control_buffer_u32:
00000078                     1010  	.DS (6)
0000007E                     1011  	.ALIGN 2
0000007E                     1012  _g_control_buffer_i32:
0000007E                     1013  	.DS (6)
00000084                     1014  _handsensor_status:
00000084                     1015  	.DS (1)
00000085                     1016  _g_handsensor_status:
00000085                     1017  	.DS (2)
00000087                     1018  _g_crc:
00000087                     1019  	.DS (8)
0000008F 00                  1020  	.ALIGN 2
00000090                     1021  _g_crc_32:
00000090                     1022  	.DS (32)
000000B0                     1023  _rx_count:
000000B0                     1024  	.DS (1)
000000B1                     1025  _io_testsize:
000000B1                     1026  	.DS (1)
00000000                     1027  	.SECTION .const,CONST
00000000                     1028  .STR@1:
00000000 00000000            1029  	.DS (4)
00000004 01                  1030  	.DB 0x01
00000005                     1031  .STR@1730:
00000005 00                  1032  	.DS (1)
00000006 01                  1033  	.DB 0x01
00000007 0000                1034  	.DS (2)
00000009 01                  1035  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               851 (00000353) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 178 (000000B2) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1223251604\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

