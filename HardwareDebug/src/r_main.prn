RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Wed Mar 09 09:37:13 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_test_control
00000000                       25  	.EXTERN _g_timerSetting
00000000                       26  	.EXTERN _g_numberSetting
00000000                       27  	.EXTERN _g_io_status
00000000                       28  	.EXTERN _g_Tick
00000000                       29  	.EXTERN _g_commnunication_flag
00000000                       30  	.EXTERN _g_machine_mode
00000000                       31  	.EXTERN _g_systemTime
00000000                       32  	.EXTERN _g_csi_rev_end
00000000                       33  	.EXTERN _g_uart2_fault
00000000                       34  	.EXTERN _g_uart2_sendend
00000000                       35  	.EXTERN _g_uart3_sendend
00000000                       36  	.EXTERN _g_rx_data
00000000                       37  	.EXTERN _g_uart3_rx_data
00000000                       38  	.PUBLIC _g_adc_ch
00000000                       39  	.PUBLIC _g_e_status
00000000                       40  	.PUBLIC _ret_number_setting
00000000                       41  	.PUBLIC _led_st
00000000                       42  	.PUBLIC _flow_p
00000000                       43  	.PUBLIC _salt_h_p
00000000                       44  	.PUBLIC _g_eeprom_wren
00000000                       45  	.PUBLIC _send_data
00000000                       46  	.PUBLIC _receive_data
00000000                       47  	.PUBLIC _receive_setting
00000000                       48  	.PUBLIC _set
00000000                       49  	.PUBLIC _rx_data
00000000                       50  	.PUBLIC _data_f
00000000                       51  	.PUBLIC _data_f_test
00000000                       52  	.PUBLIC _g_control_buffer_f
00000000                       53  	.PUBLIC _g_control_buffer_u32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _nostop_checkHandSensor
00000000                       65  	.EXTERN _ns_delay_ms
00000000                       66  	.PUBLIC _readHS
00000000                       67  	.EXTERN _delay_ms
00000000                       68  	.PUBLIC _main
00000000                       69  	.PUBLIC _R_MAIN_UserInit
00000000                       70  	.EXTERN _EEPROM_Init
00000000                       71  	.EXTERN _EE_SPI_Read
00000000                       72  	.EXTERN _R_UART2_Receive
00000000                       73  	.EXTERN _R_UART3_Receive
00000000                       74  	.EXTERN _sendRS485
00000000                       75  	.EXTERN _handSensorLED
00000000                       76  	.EXTERN _main_init_20211111
00000000                       77  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       78  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       79  	.EXTERN _realTimeResponse
00000000                       80  	.EXTERN _main_loop_20211111
00000000                       81  	.EXTERN _UpdateMachineStatus
00000000                       82  	.EXTERN _R_UART2_Stop
00000000                       83  	.EXTERN _R_UART2_Start
00000000                       84  	.EXTERN _sendR485_7byte
00000000                       85  	.EXTERN _R_UART3_Stop
00000000                       86  	.EXTERN _R_UART3_Start
00000000                       87  	.EXTERN _crc8_4
00000000                       88  	.EXTERN _crc8_1
00000000                       89  	.EXTERN _R_WDT_Restart
00000000                       90  	.EXTERN _R_TAU0_Create
00000000                       91  	.EXTERN _R_SAU0_Create
00000000                       92  	.EXTERN _R_SAU1_Create
00000000                       93  	.EXTERN _R_UART1_Create
00000000                       94  	.EXTERN _R_UART2_Create
00000000                       95  	.EXTERN _R_UART3_Create
00000000                       96  	.EXTERN _R_RTC_Create
00000000                       97  	.EXTERN _R_PORT_Create_UserInit
00000000                       98  	.EXTERN _R_CSI01_Create
00000000                       99  	.EXTERN _R_CSI00_Create
00000000                      100  	.EXTERN _R_TAU0_Channel0_Start
00000000                      101  	.EXTERN _R_UART1_Start
00000000                      102  	.EXTERN _R_CSI00_Start
00000000                      103  	.EXTERN _R_ADC_Create
00000000                      104  	.EXTERN _R_ADC_Set_OperationOn
00000000                      105  	.EXTERN _R_ADC_Start
00000000                      106  	.EXTERN _R_DAC_Create
00000000                      107  	.EXTERN _R_DAC0_Start
00000000                      108  	.EXTERN _R_DAC1_Start
00000000                      109  
00000000                      110  	.SECTION .textf,TEXTF
00000000                      111  _nostop_checkHandSensor:
00000000                      112  	.STACK _nostop_checkHandSensor = 4
00000000                      113  	;***        1 : /***********************************************************************************************************************
00000000                      114  	;***        2 :  * DISCLAIMER
00000000                      115  	;***        3 :  * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      116  	;***        4 :  * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      117  	;***        5 :  * applicable laws, including copyright laws.
00000000                      118  	;***        6 :  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      119  	;***        7 :  * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      120  	;***        8 :  * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      121  	;***        9 :  * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      122  	;***       10 :  * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      123  	;***       11 :  * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      124  	;***       12 :  * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability
00000000                      125  	;***       13 :  * of this software. By using this software, you agree to the additional terms and conditions found by accessing the
00000000                      126  	;***       14 :  * following link:
00000000                      127  	;***       15 :  * http://www.renesas.com/disclaimer
00000000                      128  	;***       16 :  *
00000000                      129  	;***       17 :  * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      130  	;***       18 :  ***********************************************************************************************************************/
00000000                      131  	;***       19 : 
00000000                      132  	;***       20 : /***********************************************************************************************************************
00000000                      133  	;***       21 :  * File Name    : r_main.c
00000000                      134  	;***       22 :  * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      135  	;***       23 :  * Device(s)    : R5F104ML
00000000                      136  	;***       24 :  * Tool-Chain   : CCRL
00000000                      137  	;***       25 :  * Description  : This file implements main function.
00000000                      138  	;***       26 :  * Creation Date: 30/11/2021
00000000                      139  	;***       27 :  ***********************************************************************************************************************/
00000000                      140  	;***       28 : 
00000000                      141  	;***       29 : /***********************************************************************************************************************
00000000                      142  	;***       30 :  Includes
00000000                      143  	;***       31 :  ***********************************************************************************************************************/
00000000                      144  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      145  	;***       33 : #include "r_cg_cgc.h"
00000000                      146  	;***       34 : #include "r_cg_port.h"
00000000                      147  	;***       35 : #include "r_cg_serial.h"
00000000                      148  	;***       36 : #include "r_cg_adc.h"
00000000                      149  	;***       37 : #include "r_cg_dac.h"
00000000                      150  	;***       38 : #include "r_cg_timer.h"
00000000                      151  	;***       39 : #include "r_cg_wdt.h"
00000000                      152  	;***       40 : #include "r_cg_rtc.h"
00000000                      153  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      154  	;***       42 : #include "EEPROM.h"
00000000                      155  	;***       43 : #include "usr_timer.h"
00000000                      156  	;***       44 : #include "usr_setting_sheet.h"
00000000                      157  	;***       45 : #include "crc8.h"
00000000                      158  	;***       46 : #include "hwm/hwm_main.h"
00000000                      159  	;***       47 : #include "r_cg_userdefine.h"
00000000                      160  	;***       48 : 
00000000                      161  	;***       49 : /***********************************************************************************************************************
00000000                      162  	;***       50 :  Pragma directive
00000000                      163  	;***       51 :  ***********************************************************************************************************************/
00000000                      164  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      165  	;***       53 : 
00000000                      166  	;***       54 : //#define TESTING_FIRMWARE
00000000                      167  	;***       55 : /* End user code. Do not edit comment generated here */
00000000                      168  	;***       56 : 
00000000                      169  	;***       57 : /***********************************************************************************************************************
00000000                      170  	;***       58 :  Global variables and functions
00000000                      171  	;***       59 :  ***********************************************************************************************************************/
00000000                      172  	;***       60 : /* Start user code for global. Do not edit comment generated here */
00000000                      173  	;***       61 : 
00000000                      174  	;***       62 : volatile int g_adc_ch = 0;
00000000                      175  	;***       63 : union EEPROM_status_u g_e_status;
00000000                      176  	;***       64 : struct Number_Setting_s ret_number_setting;
00000000                      177  	;***       65 : uint8_t led_st = 0xff;
00000000                      178  	;***       66 : uint8_t flow_p, salt_h_p;
00000000                      179  	;***       67 : uint8_t g_eeprom_wren;
00000000                      180  	;***       68 : uint8_t send_data[2] = { 0x23, 0xab };
00000000                      181  	;***       69 : uint8_t receive_data[2];
00000000                      182  	;***       70 : struct Number_Setting_s receive_setting;
00000000                      183  	;***       71 : union EEPROM_status_u set;
00000000                      184  	;***       72 : uint32_t rx_data[3];
00000000                      185  	;***       73 : float data_f;
00000000                      186  	;***       74 : union byte_to_float data_f_test;
00000000                      187  	;***       75 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      188  	;***       76 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      189  	;***       77 : 
00000000                      190  	;***       78 : union {
00000000                      191  	;***       79 : 	struct {
00000000                      192  	;***       80 : 		uint8_t up_signal;
00000000                      193  	;***       81 : 	};
00000000                      194  	;***       82 : 	uint8_t status;
00000000                      195  	;***       83 : } handsensor_status;
00000000                      196  	;***       84 : uint8_t g_handsensor_status[2];
00000000                      197  	;***       85 : void nostop_checkHandSensor(void) {
00000000                      198  	;***       86 : 	if (DETECT_U() == I_ON) {
00000000                      199  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 86
00000000 8D07                 200  	mov a, 0xFFF07
00000002 315300               201  	bt a.5, $.BB@LABEL@1_5
00000005                      202  .BB@LABEL@1_1:	; if_then_bb
00000005                      203  	;***       87 : 		if (ns_delay_ms(&g_Tick.tickHandSensor[0], 500)) {
00000005                      204  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000005 F6                   205  	clrw ax
00000006 14                   206  	movw de, ax
00000007 32F401               207  	movw bc, #0x01F4
0000000A 300000               208  	movw ax, #LOWW(_g_Tick+0x00090)
0000000D FC000000             209  	call !!_ns_delay_ms
00000011 F7                   210  	clrw bc
00000012 43                   211  	cmpw ax, bc
00000013 DD00                 212  	bz $.BB@LABEL@1_9
00000015                      213  .BB@LABEL@1_2:	; if_then_bb16
00000015                      214  	;***       88 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0 ? 1 : 0;
00000015                      215  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000015 D50000               216  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   217  	oneb a
00000019 61E8                 218  	skz
0000001B                      219  .BB@LABEL@1_3:	; bb22
0000001B F1                   220  	clrb a
0000001C                      221  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               222  	mov !LOWW(_g_handsensor_status), a
0000001F                      223  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
0000001F D7                   224  	ret
00000020                      225  .BB@LABEL@1_5:	; if_else_bb
00000020                      226  	;***       89 : 		}
00000020                      227  	;***       90 : 	} else if (DETECT_D() == I_ON) {
00000020                      228  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 90
00000020 8D07                 229  	mov a, 0xFFF07
00000022 314300               230  	bt a.4, $.BB@LABEL@1_7
00000025                      231  .BB@LABEL@1_6:	; if_then_bb43
00000025                      232  	;***       91 : 		g_handsensor_status[1] = 1;
00000025                      233  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000025 E50000               234  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   235  	ret
00000029                      236  .BB@LABEL@1_7:	; if_else_bb44
00000029                      237  	;***       92 : 	} else if (DETECT_U() == I_OFF) {
00000029                      238  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000029 8D07                 239  	mov a, 0xFFF07
0000002B 315300               240  	bt a.5, $.BB@LABEL@1_9
0000002E                      241  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      242  	;***       93 : 
0000002E                      243  	;***       94 : 	} else if (DETECT_D() == I_OFF) {
0000002E                      244  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 94
0000002E 8D07                 245  	mov a, 0xFFF07
00000030                      246  .BB@LABEL@1_9:	; return
00000030                      247  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
00000030 D7                   248  	ret
00000031                      249  _readHS:
00000031                      250  	.STACK _readHS = 4
00000031                      251  	;***       95 : 
00000031                      252  	;***       96 : 	}
00000031                      253  	;***       97 : }
00000031                      254  	;***       98 : uint8_t readHS(void) {
00000031                      255  	;***       99 : 	if (DETECT_U()) {
00000031                      256  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 99
00000031 8D07                 257  	mov a, 0xFFF07
00000033 315300               258  	bt a.5, $.BB@LABEL@2_2
00000036                      259  .BB@LABEL@2_1:	; bb33
00000036                      260  	;***      100 : 		delay_ms(2);
00000036                      261  	;***      101 : 		if (DETECT_U())
00000036                      262  	;***      102 : 			return 1;
00000036                      263  	;***      103 : 		return 0;
00000036                      264  	;***      104 : 	} else
00000036                      265  	;***      105 : 		return 0;
00000036                      266  	;***      106 : }
00000036                      267  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 106
00000036 F1                   268  	clrb a
00000037 D7                   269  	ret
00000038                      270  .BB@LABEL@2_2:	; if_then_bb
00000038                      271  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000038 F7                   272  	clrw bc
00000039 E6                   273  	onew ax
0000003A A1                   274  	incw ax
0000003B FC000000             275  	call !!_delay_ms
0000003F                      276  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
0000003F 8D07                 277  	mov a, 0xFFF07
00000041 315A                 278  	shr a, 0x05
00000043 5C01                 279  	and a, #0x01
00000045 D7                   280  	ret
00000046                      281  _main:
00000046                      282  	.STACK _main = 24
00000046                      283  	;***      107 : uint8_t this_size = sizeof(g_io_status);
00000046                      284  	;***      108 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      285  	;***      109 : uint8_t send_buf[7] = { 8, 1, 2, 3, 4, 5, 6 };
00000046                      286  	;***      110 : char g_crc[8];
00000046                      287  	;***      111 : uint32_t g_crc_32[8];
00000046                      288  	;***      112 : uint32_t data_crc[2] = { 30500, 60200 };
00000046                      289  	;***      113 : uint8_t rx_count;
00000046                      290  	;***      114 : uint8_t dac_out[2] = { 0xff, 0xff };
00000046                      291  	;***      115 : /* End user code. Do not edit comment generated here */
00000046                      292  	;***      116 : 
00000046                      293  	;***      117 : void R_MAIN_UserInit(void);
00000046                      294  	;***      118 : 
00000046                      295  	;***      119 : /***********************************************************************************************************************
00000046                      296  	;***      120 :  * Function Name: main
00000046                      297  	;***      121 :  * Description  : This function implements main function.
00000046                      298  	;***      122 :  * Arguments    : None
00000046                      299  	;***      123 :  * Return Value : None
00000046                      300  	;***      124 :  ***********************************************************************************************************************/
00000046                      301  	;***      125 : void main(void) {
00000046                      302  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 125
00000046 2010                 303  	subw sp, #0x10
00000048                      304  	;***      126 : 	R_MAIN_UserInit();
00000048                      305  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 126
00000048 FE0000               306  	call $!_R_MAIN_UserInit
0000004B                      307  	;***      127 : 	/* Start user code. Do not edit comment generated here */
0000004B                      308  	;***      128 : 
0000004B                      309  	;***      129 : 	//TODO: EEPROM Initialize and read Setting
0000004B                      310  	;***      130 : 	EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      311  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
0000004B F2                   312  	clrb c
0000004C 300000               313  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             314  	call !!_EEPROM_Init
00000053 F6                   315  	clrw ax
00000054                      316  	;***      131 : 	EE_SPI_Read((uint8_t*) &g_numberSetting, NUMBER_SETTING_ADDRESS,
00000054                      317  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
00000054 C1                   318  	push ax
00000055 5029                 319  	mov x, #0x29
00000057 C1                   320  	push ax
00000058 F7                   321  	clrw bc
00000059 300000               322  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             323  	call !!_EE_SPI_Read
00000060 1004                 324  	addw sp, #0x04
00000062 F6                   325  	clrw ax
00000063                      326  	;***      132 : 			numberSettingSize);
00000063                      327  	;***      133 : 	EE_SPI_Read((uint8_t*) &g_timerSetting, TIME_SETTING_ADDRESS,
00000063                      328  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
00000063 C1                   329  	push ax
00000064 5095                 330  	mov x, #0x95
00000066 C1                   331  	push ax
00000067 320008               332  	movw bc, #0x0800
0000006A 300000               333  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             334  	call !!_EE_SPI_Read
00000071 1004                 335  	addw sp, #0x04
00000073 F6                   336  	clrw ax
00000074                      337  	;***      134 : 			timeSettingSize);
00000074                      338  	;***      135 : 	EE_SPI_Read((uint8_t*) &g_test_control.data,
00000074                      339  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 135
00000074 C1                   340  	push ax
00000075 A1                   341  	incw ax
00000076 C1                   342  	push ax
00000077 322900               343  	movw bc, #0x0029
0000007A 300000               344  	movw ax, #LOWW(_g_test_control)
0000007D FC000000             345  	call !!_EE_SPI_Read
00000081 1004                 346  	addw sp, #0x04
00000083                      347  	;***      136 : 			NUMBER_SETTING_ADDRESS + numberSettingSize, sizeof(g_test_control.data));
00000083                      348  	;***      137 : 	_settingNumber = g_numberSetting;
00000083                      349  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 137
00000083 342A00               350  	movw de, #0x002A
00000086 320000               351  	movw bc, #LOWW(_g_numberSetting)
00000089 300000               352  	movw ax, #LOWW(__settingNumber)
0000008C FC000000             353  	call !!_memcpy
00000090                      354  	;***      138 : 	_settingTime = g_timerSetting;
00000090                      355  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 138
00000090 349600               356  	movw de, #0x0096
00000093 320000               357  	movw bc, #LOWW(_g_timerSetting)
00000096 300000               358  	movw ax, #LOWW(__settingTime)
00000099 FC000000             359  	call !!_memcpy
0000009D                      360  	;***      139 : 	EEPROM_PROTECT_EN();
0000009D                      361  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
0000009D 71030E               362  	clr1 0xFFF0E.0
000000A0                      363  	;***      140 : 	//TODO: Start receive command from Raspberry Pi
000000A0                      364  	;***      141 : 	R_UART2_Receive(g_rx_data, 6);
000000A0                      365  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
000000A0 320600               366  	movw bc, #0x0006
000000A3 300000               367  	movw ax, #LOWW(_g_rx_data)
000000A6 FC000000             368  	call !!_R_UART2_Receive
000000AA                      369  	;***      142 : 
000000AA                      370  	;***      143 : 	//TODO: Start receive data from RS485
000000AA                      371  	;***      144 : 	O_RS485_MODE_PIN = 0U;
000000AA                      372  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 144
000000AA 710300               373  	clr1 0xFFF00.0
000000AD                      374  	;***      145 : 	R_UART3_Receive(g_uart3_rx_data, 7);
000000AD                      375  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
000000AD 320700               376  	movw bc, #0x0007
000000B0 300000               377  	movw ax, #LOWW(_g_uart3_rx_data)
000000B3 FC000000             378  	call !!_R_UART3_Receive
000000B7 F6                   379  	clrw ax
000000B8                      380  	;***      146 : 	uint8_t wts, vpcb, vpcb_v = 1;
000000B8                      381  	;***      147 : 	sendRS485(0xff, 82, 2, 12);
000000B8                      382  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
000000B8 C1                   383  	push ax
000000B9 500C                 384  	mov x, #0x0C
000000BB C1                   385  	push ax
000000BC 5202                 386  	mov c, #0x02
000000BE 3052FF               387  	movw ax, #0xFF52
000000C1 FC000000             388  	call !!_sendRS485
000000C5 1004                 389  	addw sp, #0x04
000000C7                      390  	;***      148 : 
000000C7                      391  	;***      149 : 	//TODO: Turn off Hand Sensor LED
000000C7                      392  	;***      150 : 	g_pre_color = BLUE;
000000C7                      393  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
000000C7 CF000003             394  	mov !LOWW(_g_pre_color), #0x03
000000CB                      395  	;***      151 : 	handSensorLED(BLACK);
000000CB                      396  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
000000CB F1                   397  	clrb a
000000CC FC000000             398  	call !!_handSensorLED
000000D0 360000               399  	movw hl, #LOWW(_g_test_control)
000000D3                      400  	;***      152 : 
000000D3                      401  	;***      153 : 	//TODO: Set default washing mode
000000D3                      402  	;***      154 : 	g_machine_mode = HAND_WASHING;
000000D3                      403  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 154
000000D3 E50000               404  	oneb !LOWW(_g_machine_mode)
000000D6 319500               405  	bf [hl].1, $.BB@LABEL@3_2
000000D9                      406  .BB@LABEL@3_1:	; if_then_bb
000000D9                      407  	;***      155 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000D9                      408  	;***      156 : 
000000D9                      409  	;***      157 : //TODO: Run Initialize Operation
000000D9                      410  	;***      158 : 	if(g_test_control.raw.power_on == ON){
000000D9                      411  	;***      159 : 		main_init_20211111();
000000D9                      412  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 159
000000D9 FC000000             413  	call !!_main_init_20211111
000000DD                      414  .BB@LABEL@3_2:	; if_break_bb
000000DD 30A040               415  	movw ax, #0x40A0
000000E0                      416  	;***      160 : 	}
000000E0                      417  	;***      161 : 	//TODO: Output CVCC and Salt pump voltage
000000E0                      418  	;***      162 : 	CVCC_Current_Set((uint8_t) (g_numberSetting.cvccCurrent/CVCC_MAX_VOLTAGE*255));
000000E0                      419  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 162
000000E0 C1                   420  	push ax
000000E1 F6                   421  	clrw ax
000000E2 C1                   422  	push ax
000000E3 DB0000               423  	movw bc, !LOWW(_g_numberSetting+0x00022)
000000E6 AF0000               424  	movw ax, !LOWW(_g_numberSetting+0x00020)
000000E9 FC000000             425  	call !!__COM_fdiv
000000ED 14                   426  	movw de, ax
000000EE 1004                 427  	addw sp, #0x04
000000F0 307F43               428  	movw ax, #0x437F
000000F3 C1                   429  	push ax
000000F4 F6                   430  	clrw ax
000000F5 C1                   431  	push ax
000000F6 15                   432  	movw ax, de
000000F7 FC000000             433  	call !!__COM_fmul
000000FB 1004                 434  	addw sp, #0x04
000000FD FC000000             435  	call !!__COM_ftoul
00000101 60                   436  	mov a, x
00000102 FC000000             437  	call !!_R_DAC0_Set_ConversionValue
00000106 309B40               438  	movw ax, #0x409B
00000109                      439  	;***      163 : 	Salt_Analog_Set((uint8_t) (g_numberSetting.saltPumpVoltage/SALT_PUMP_MAX_VOLTAGE*255));
00000109                      440  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
00000109 C1                   441  	push ax
0000010A 300C02               442  	movw ax, #0x020C
0000010D C1                   443  	push ax
0000010E DB0000               444  	movw bc, !LOWW(_g_numberSetting+0x00026)
00000111 AF0000               445  	movw ax, !LOWW(_g_numberSetting+0x00024)
00000114 FC000000             446  	call !!__COM_fdiv
00000118 14                   447  	movw de, ax
00000119 1004                 448  	addw sp, #0x04
0000011B 307F43               449  	movw ax, #0x437F
0000011E C1                   450  	push ax
0000011F F6                   451  	clrw ax
00000120 C1                   452  	push ax
00000121 15                   453  	movw ax, de
00000122 FC000000             454  	call !!__COM_fmul
00000126 1004                 455  	addw sp, #0x04
00000128 FC000000             456  	call !!__COM_ftoul
0000012C 60                   457  	mov a, x
0000012D FC000000             458  	call !!_R_DAC1_Set_ConversionValue
00000131 E1                   459  	oneb a
00000132 9802                 460  	mov [sp+0x02], a
00000134 9801                 461  	mov [sp+0x01], a
00000136 9800                 462  	mov [sp+0x00], a
00000138                      463  .BB@LABEL@3_3:	; bb232
00000138                      464  	;***      164 : 
00000138                      465  	;***      165 : #ifdef TESTING_FIRMWARE
00000138                      466  	;***      166 : 	uint8_t state = OFF;
00000138                      467  	;***      167 : 	while (1) {
00000138                      468  	;***      168 : 		if (ns_delay_ms(&g_Tick.tickCustom[2], 500)) {
00000138                      469  	;***      169 : 			//    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
00000138                      470  	;***      170 : 			//					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
00000138                      471  	;***      171 : 			//				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
00000138                      472  	;***      172 : 			//						g_io_status.refined.FlowValue);
00000138                      473  	;***      173 : 			//			}
00000138                      474  	;***      174 : 			dac_out[0] += 13;
00000138                      475  	;***      175 : 			CVCC_Current_Set(dac_out[0]);
00000138                      476  	;***      176 : 			dac_out[1] += 13;
00000138                      477  	;***      177 : 			Salt_Analog_Set(dac_out[1]);
00000138                      478  	;***      178 : 		}
00000138                      479  	;***      179 : 		if (ns_delay_ms(&g_Tick.tickCustom[3], 1000)) {
00000138                      480  	;***      180 : 			O_HS_IDA_PIN = O_HS_ICL_PIN = O_SUPPLY_WATER_PIN_SV1 =
00000138                      481  	;***      181 : 			O_CTRL_OUT_PIN = O_SPOUT_WATER_PIN_SV2 = O_PUMP_SALT_PIN_SP1 =
00000138                      482  	;***      182 : 			O_ALK_PUMP_PIN_P2 = O_ACID_PUMP_PIN_P1 = O_PUMP_PRESS_PIN =
00000138                      483  	;***      183 : 			O_ALARM_OUT_PIN = O_NEUTRALIZE_PIN_SV7 =
00000138                      484  	;***      184 : 			O_DRAIN_ALK_PIN_SV6 = O_DRAIN_ACID_PIN_SV5 = O_SPOUT_ACID_PIN_SV3 =
00000138                      485  	;***      185 : 			O_SPOUT_ALK_PIN_SV4 = O_CVCC_ON_PIN = O_CVCC_ALARM_RS =
00000138                      486  	;***      186 : 			O_OPTION_2_PIN_SV8 = O_OPTION_3_PIN_SV9 = O_OPTION_1_BUZZER = state;
00000138                      487  	;***      187 : 			state = ~state;
00000138                      488  	;***      188 : 		}
00000138                      489  	;***      189 : 		R_WDT_Restart();
00000138                      490  	;***      190 : 	}
00000138                      491  	;***      191 : #endif
00000138                      492  	;***      192 : 	while (1U) {
00000138                      493  	;***      193 : 
00000138                      494  	;***      194 : 		realTimeResponse();
00000138                      495  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 194
00000138 FC000000             496  	call !!_realTimeResponse
0000013C                      497  	;***      195 : 		main_loop_20211111();
0000013C                      498  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 195
0000013C FC000000             499  	call !!_main_loop_20211111
00000140                      500  	;***      196 : 
00000140                      501  	;***      197 : 		handSensorLED(g_color);
00000140                      502  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 197
00000140 8F0000               503  	mov a, !LOWW(_g_color)
00000143 FC000000             504  	call !!_handSensorLED
00000147                      505  	;***      198 : 		UpdateMachineStatus();
00000147                      506  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 198
00000147 FC000000             507  	call !!_UpdateMachineStatus
0000014B                      508  	;***      199 : 		if (g_uart2_fault == 1) {
0000014B                      509  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 199
0000014B 40000001             510  	cmp !LOWW(_g_uart2_fault), #0x01
0000014F DF00                 511  	bnz $.BB@LABEL@3_5
00000151                      512  .BB@LABEL@3_4:	; if_then_bb36
00000151                      513  	;***      200 : 			R_UART2_Stop();
00000151                      514  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 200
00000151 FC000000             515  	call !!_R_UART2_Stop
00000155                      516  	;***      201 : 			delay_ms(10);
00000155                      517  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
00000155 F7                   518  	clrw bc
00000156 300A00               519  	movw ax, #0x000A
00000159 FC000000             520  	call !!_delay_ms
0000015D                      521  	;***      202 : 			R_UART2_Start();
0000015D                      522  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 202
0000015D FC000000             523  	call !!_R_UART2_Start
00000161                      524  	;***      203 : 			g_uart2_fault = 0;
00000161                      525  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 203
00000161 F50000               526  	clrb !LOWW(_g_uart2_fault)
00000164                      527  .BB@LABEL@3_5:	; if_break_bb37
00000164                      528  	;***      204 : 		}
00000164                      529  	;***      205 : 
00000164                      530  	;***      206 : 		// Communication with WaterSoftener
00000164                      531  	;***      207 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_response_flag) {
00000164                      532  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 207
00000164 D50000               533  	cmp0 !LOWW(_g_commnunication_flag+0x0000A)
00000167 DD00                 534  	bz $.BB@LABEL@3_7
00000169                      535  .BB@LABEL@3_6:	; if_then_bb43
00000169 F6                   536  	clrw ax
0000016A                      537  	;***      208 : 			sendRS485(0xff, 82, 2, 5);
0000016A                      538  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
0000016A C1                   539  	push ax
0000016B 5005                 540  	mov x, #0x05
0000016D C1                   541  	push ax
0000016E 5202                 542  	mov c, #0x02
00000170 3052FF               543  	movw ax, #0xFF52
00000173 FC000000             544  	call !!_sendRS485
00000177 1004                 545  	addw sp, #0x04
00000179                      546  	;***      209 : //    		rx_count++;
00000179                      547  	;***      210 : 			wts = 1; //Test flag = 1
00000179                      548  	;***      211 : 			g_commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
00000179                      549  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
00000179 F50000               550  	clrb !LOWW(_g_commnunication_flag+0x0000A)
0000017C E1                   551  	oneb a
0000017D 9800                 552  	mov [sp+0x00], a
0000017F                      553  .BB@LABEL@3_7:	; if_break_bb44
0000017F                      554  	;***      212 : 		}
0000017F                      555  	;***      213 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1) {
0000017F                      556  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 213
0000017F 40000001             557  	cmp !LOWW(_g_commnunication_flag+0x0000B), #0x01
00000183 DF00                 558  	bnz $.BB@LABEL@3_11
00000185                      559  .BB@LABEL@3_8:	; if_then_bb50
00000185                      560  	;***      214 : 			// Sand to Water softener SV state
00000185                      561  	;***      215 : 			sendRS485(0xff, 82, 24,
00000185                      562  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
00000185 360000               563  	movw hl, #LOWW(_g_io_status+0x00001)
00000188 E7                   564  	onew bc
00000189 318300               565  	bt [hl].0, $.BB@LABEL@3_10
0000018C                      566  .BB@LABEL@3_9:	; bb58
0000018C B3                   567  	decw bc
0000018D                      568  .BB@LABEL@3_10:	; bb59
0000018D F6                   569  	clrw ax
0000018E C1                   570  	push ax
0000018F C3                   571  	push bc
00000190 5218                 572  	mov c, #0x18
00000192 3052FF               573  	movw ax, #0xFF52
00000195 FC000000             574  	call !!_sendRS485
00000199 1004                 575  	addw sp, #0x04
0000019B                      576  	;***      216 : 					(uint32_t) g_io_status.refined.io.Valve.SV1 == 1 ? 1 : 0);
0000019B                      577  	;***      217 : 			g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
0000019B                      578  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 217
0000019B F50000               579  	clrb !LOWW(_g_commnunication_flag+0x0000B)
0000019E                      580  .BB@LABEL@3_11:	; if_break_bb63
0000019E 8800                 581  	mov a, [sp+0x00]
000001A0                      582  	;***      218 : 		}
000001A0                      583  	;***      219 : 		// Test SV1 for Water Softener
000001A0                      584  	;***      220 : 		if (wts != 0) {
000001A0                      585  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 220
000001A0 D1                   586  	cmp0 a
000001A1 DF00                 587  	bnz $.BB@LABEL@3_13
000001A3                      588  .BB@LABEL@3_12:	; if_else_bb83
000001A3                      589  	;***      221 : 			if (ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)) {
000001A3                      590  	;***      222 : 				if (wts == 1) {
000001A3                      591  	;***      223 : 					O_SUPPLY_WATER_PIN_SV1 = ON;
000001A3                      592  	;***      224 : //					sendRS485(1, 82, 24,(uint32_t) 1);
000001A3                      593  	;***      225 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
000001A3                      594  	;***      226 : 					wts = 2;
000001A3                      595  	;***      227 : 				} else {
000001A3                      596  	;***      228 : 					O_SUPPLY_WATER_PIN_SV1 = OFF;
000001A3                      597  	;***      229 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
000001A3                      598  	;***      230 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
000001A3                      599  	;***      231 : 					wts = 0;
000001A3                      600  	;***      232 : 				}
000001A3                      601  	;***      233 : 			}
000001A3                      602  	;***      234 : 		} else {
000001A3                      603  	;***      235 : 			g_Tick.tickWaterSoftenerPCB = g_systemTime;
000001A3                      604  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 235
000001A3 AF0000               605  	movw ax, !LOWW(_g_systemTime+0x00002)
000001A6 BF0000               606  	movw !LOWW(_g_Tick+0x00052), ax
000001A9 AF0000               607  	movw ax, !LOWW(_g_systemTime)
000001AC BF0000               608  	movw !LOWW(_g_Tick+0x00050), ax
000001AF EF00                 609  	br $.BB@LABEL@3_17
000001B1                      610  .BB@LABEL@3_13:	; if_then_bb69
000001B1                      611  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
000001B1 F6                   612  	clrw ax
000001B2 14                   613  	movw de, ax
000001B3 328813               614  	movw bc, #0x1388
000001B6 300000               615  	movw ax, #LOWW(_g_Tick+0x00050)
000001B9 FC000000             616  	call !!_ns_delay_ms
000001BD F7                   617  	clrw bc
000001BE 43                   618  	cmpw ax, bc
000001BF DD00                 619  	bz $.BB@LABEL@3_17
000001C1                      620  .BB@LABEL@3_14:	; if_then_bb74
000001C1 8800                 621  	mov a, [sp+0x00]
000001C3                      622  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 222
000001C3 91                   623  	dec a
000001C4 DF00                 624  	bnz $.BB@LABEL@3_16
000001C6                      625  .BB@LABEL@3_15:	; if_then_bb80
000001C6                      626  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 223
000001C6 717201               627  	set1 0xFFF01.7
000001C9 C80002               628  	mov [sp+0x00], #0x02
000001CC EF00                 629  	br $.BB@LABEL@3_17
000001CE                      630  .BB@LABEL@3_16:	; if_else_bb
000001CE                      631  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 228
000001CE 717301               632  	clr1 0xFFF01.7
000001D1 F1                   633  	clrb a
000001D2 9800                 634  	mov [sp+0x00], a
000001D4                      635  .BB@LABEL@3_17:	; if_break_bb85
000001D4                      636  	;***      236 : 		}
000001D4                      637  	;***      237 : 
000001D4                      638  	;***      238 : 		//Valve PCB
000001D4                      639  	;***      239 : 		if (g_commnunication_flag.rs485_send_to_valve_response_flag == 1) {
000001D4                      640  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 239
000001D4 40000001             641  	cmp !LOWW(_g_commnunication_flag+0x0000C), #0x01
000001D8 DF00                 642  	bnz $.BB@LABEL@3_19
000001DA                      643  .BB@LABEL@3_18:	; if_then_bb91
000001DA AEF8                 644  	movw ax, sp
000001DC 040600               645  	addw ax, #0x0006
000001DF B804                 646  	movw [sp+0x04], ax
000001E1                      647  	;***      240 : 			// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
000001E1                      648  	;***      241 : 			// 0 - Stand alone 1 - Control Valve
000001E1                      649  	;***      242 : 			uint8_t _b[5] = { vpcb_v, g_uart3_sendend % 2, g_systemTime % 2, 0,
000001E1                      650  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 242
000001E1 340500               651  	movw de, #0x0005
000001E4 320000               652  	movw bc, #SMRLW(.STR@1)
000001E7 FC000000             653  	call !!_memcpy
000001EB 8802                 654  	mov a, [sp+0x02]
000001ED 9806                 655  	mov [sp+0x06], a
000001EF E1                   656  	oneb a
000001F0 5F0000               657  	and a, !LOWW(_g_uart3_sendend)
000001F3 9807                 658  	mov [sp+0x07], a
000001F5 AF0000               659  	movw ax, !LOWW(_g_systemTime+0x00002)
000001F8 AF0000               660  	movw ax, !LOWW(_g_systemTime)
000001FB 60                   661  	mov a, x
000001FC 5C01                 662  	and a, #0x01
000001FE 9808                 663  	mov [sp+0x08], a
00000200 A804                 664  	movw ax, [sp+0x04]
00000202 12                   665  	movw bc, ax
00000203                      666  	;***      243 : 					1 };
00000203                      667  	;***      244 : 			sendR485_7byte(0xff, 12, _b);
00000203                      668  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 244
00000203 300CFF               669  	movw ax, #0xFF0C
00000206 FC000000             670  	call !!_sendR485_7byte
0000020A                      671  	;***      245 : 			vpcb++;
0000020A                      672  	;***      246 : 			g_commnunication_flag.rs485_send_to_valve_response_flag = 0;
0000020A                      673  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 246
0000020A F50000               674  	clrb !LOWW(_g_commnunication_flag+0x0000C)
0000020D 8801                 675  	mov a, [sp+0x01]
0000020F                      676  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 245
0000020F 81                   677  	inc a
00000210 9801                 678  	mov [sp+0x01], a
00000212 EF00                 679  	br $.BB@LABEL@3_21
00000214                      680  .BB@LABEL@3_19:	; if_else_bb109
00000214                      681  	;***      247 : 		} else if (g_commnunication_flag.rs485_get_valve_gesture_flag == 1) {
00000214                      682  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
00000214 40000001             683  	cmp !LOWW(_g_commnunication_flag+0x0000D), #0x01
00000218 DF00                 684  	bnz $.BB@LABEL@3_21
0000021A                      685  .BB@LABEL@3_20:	; if_then_bb115
0000021A AEF8                 686  	movw ax, sp
0000021C 040B00               687  	addw ax, #0x000B
0000021F B804                 688  	movw [sp+0x04], ax
00000221                      689  	;***      248 : 			uint8_t _b[5] = { 0, 1, 0, 0, 1 };
00000221                      690  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 248
00000221 340500               691  	movw de, #0x0005
00000224 320000               692  	movw bc, #SMRLW(.STR@1685)
00000227 FC000000             693  	call !!_memcpy
0000022B A804                 694  	movw ax, [sp+0x04]
0000022D 12                   695  	movw bc, ax
0000022E                      696  	;***      249 : 			sendR485_7byte(0xff, 1, _b);
0000022E                      697  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 249
0000022E 3001FF               698  	movw ax, #0xFF01
00000231 FC000000             699  	call !!_sendR485_7byte
00000235                      700  	;***      250 : 			g_commnunication_flag.rs485_get_valve_gesture_flag = 0;
00000235                      701  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 250
00000235 F50000               702  	clrb !LOWW(_g_commnunication_flag+0x0000D)
00000238                      703  .BB@LABEL@3_21:	; if_break_bb119
00000238 8801                 704  	mov a, [sp+0x01]
0000023A                      705  	;***      251 : 		}
0000023A                      706  	;***      252 : 
0000023A                      707  	;***      253 : 		if (vpcb != 0) {
0000023A                      708  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 253
0000023A D1                   709  	cmp0 a
0000023B DF00                 710  	bnz $.BB@LABEL@3_23
0000023D                      711  .BB@LABEL@3_22:	; if_else_bb143
0000023D                      712  	;***      254 : 			if (ns_delay_ms(&g_Tick.tickValvePCB, 5000)) {
0000023D                      713  	;***      255 : 				vpcb_v = vpcb_v == 1 ? 0 : 1;
0000023D                      714  	;***      256 : 				vpcb = 0;
0000023D                      715  	;***      257 : 			}
0000023D                      716  	;***      258 : 		} else {
0000023D                      717  	;***      259 : 			g_Tick.tickValvePCB = g_systemTime;
0000023D                      718  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 259
0000023D AF0000               719  	movw ax, !LOWW(_g_systemTime+0x00002)
00000240 BF0000               720  	movw !LOWW(_g_Tick+0x00056), ax
00000243 AF0000               721  	movw ax, !LOWW(_g_systemTime)
00000246 BF0000               722  	movw !LOWW(_g_Tick+0x00054), ax
00000249 EF00                 723  	br $.BB@LABEL@3_26
0000024B                      724  .BB@LABEL@3_23:	; if_then_bb125
0000024B                      725  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 254
0000024B F6                   726  	clrw ax
0000024C 14                   727  	movw de, ax
0000024D 328813               728  	movw bc, #0x1388
00000250 300000               729  	movw ax, #LOWW(_g_Tick+0x00054)
00000253 FC000000             730  	call !!_ns_delay_ms
00000257 F7                   731  	clrw bc
00000258 43                   732  	cmpw ax, bc
00000259 DD00                 733  	bz $.BB@LABEL@3_26
0000025B                      734  .BB@LABEL@3_24:	; if_then_bb130
0000025B 8802                 735  	mov a, [sp+0x02]
0000025D                      736  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 255
0000025D 91                   737  	dec a
0000025E F1                   738  	clrb a
0000025F 9801                 739  	mov [sp+0x01], a
00000261 DF00                 740  	bnz $.BB@LABEL@3_28
00000263                      741  .BB@LABEL@3_25:	; if_then_bb130.if_break_bb145_crit_edge
00000263 9802                 742  	mov [sp+0x02], a
00000265                      743  .BB@LABEL@3_26:	; if_break_bb145
00000265                      744  	;***      260 : 		}
00000265                      745  	;***      261 : 
00000265                      746  	;***      262 : 		//RS485 fault check
00000265                      747  	;***      263 : 		if (g_commnunication_flag.rs485_fault == 1) {
00000265                      748  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 263
00000265 40000001             749  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x01
00000269 DF00                 750  	bnz $.BB@LABEL@3_29
0000026B                      751  .BB@LABEL@3_27:	; if_then_bb151
0000026B                      752  	;***      264 : 			R_UART3_Stop();
0000026B                      753  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 264
0000026B FC000000             754  	call !!_R_UART3_Stop
0000026F                      755  	;***      265 : 			g_commnunication_flag.rs485_fault++;
0000026F                      756  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 265
0000026F A00000               757  	inc !LOWW(_g_commnunication_flag+0x0000E)
00000272                      758  	;***      266 : 			g_Tick.tickRS485 = g_systemTime;
00000272                      759  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 266
00000272 AF0000               760  	movw ax, !LOWW(_g_systemTime+0x00002)
00000275 BF0000               761  	movw !LOWW(_g_Tick+0x0005A), ax
00000278 AF0000               762  	movw ax, !LOWW(_g_systemTime)
0000027B BF0000               763  	movw !LOWW(_g_Tick+0x00058), ax
0000027E EF00                 764  	br $.BB@LABEL@3_32
00000280                      765  .BB@LABEL@3_28:	; bb136
00000280 E1                   766  	oneb a
00000281 EF00                 767  	br $.BB@LABEL@3_25
00000283                      768  .BB@LABEL@3_29:	; if_else_bb155
00000283                      769  	;***      267 : 		} else if (g_commnunication_flag.rs485_fault == 2) {
00000283                      770  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 267
00000283 40000002             771  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x02
00000287 DF00                 772  	bnz $.BB@LABEL@3_32
00000289                      773  .BB@LABEL@3_30:	; if_then_bb161
00000289                      774  	;***      268 : 			if (ns_delay_ms(&g_Tick.tickRS485, 500)) {
00000289                      775  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 268
00000289 F6                   776  	clrw ax
0000028A 14                   777  	movw de, ax
0000028B 32F401               778  	movw bc, #0x01F4
0000028E 300000               779  	movw ax, #LOWW(_g_Tick+0x00058)
00000291 FC000000             780  	call !!_ns_delay_ms
00000295 F7                   781  	clrw bc
00000296 43                   782  	cmpw ax, bc
00000297 DD00                 783  	bz $.BB@LABEL@3_32
00000299                      784  .BB@LABEL@3_31:	; if_then_bb166
00000299                      785  	;***      269 : 				R_UART3_Start();
00000299                      786  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 269
00000299 FC000000             787  	call !!_R_UART3_Start
0000029D                      788  	;***      270 : 				R_UART3_Receive(g_uart3_rx_data, 7);
0000029D                      789  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 270
0000029D 320700               790  	movw bc, #0x0007
000002A0 300000               791  	movw ax, #LOWW(_g_uart3_rx_data)
000002A3 FC000000             792  	call !!_R_UART3_Receive
000002A7                      793  	;***      271 : 				g_commnunication_flag.rs485_fault = 0;
000002A7                      794  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 271
000002A7 F50000               795  	clrb !LOWW(_g_commnunication_flag+0x0000E)
000002AA                      796  .BB@LABEL@3_32:	; if_break_bb170
000002AA                      797  	;***      272 : 			}
000002AA                      798  	;***      273 : 		}
000002AA                      799  	;***      274 : //--------------------------------- Testing code---------------------------------------------------------------
000002AA                      800  	;***      275 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
000002AA                      801  	;***      276 : //    		P6_bit.no3 = ~P6_bit.no3;
000002AA                      802  	;***      277 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
000002AA                      803  	;***      278 : //    	}
000002AA                      804  	;***      279 : //    	if(g_machine_state.user == 1){
000002AA                      805  	;***      280 : //    		HandWashingMode_nostop();
000002AA                      806  	;***      281 : //    	}else{
000002AA                      807  	;***      282 : //    		g_Tick.tickCustom[1] = g_systemTime;
000002AA                      808  	;***      283 : //    	}
000002AA                      809  	;***      284 : 
000002AA                      810  	;***      285 : 		// Check
000002AA                      811  	;***      286 : 		flow_p = I_FLOW_PLUSE_PIN == 1 ? 1 : 0;
000002AA                      812  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 286
000002AA 8D00                 813  	mov a, 0xFFF00
000002AC 719C                 814  	mov1 CY, a.1
000002AE E1                   815  	oneb a
000002AF 61C8                 816  	skc
000002B1                      817  .BB@LABEL@3_33:	; bb178
000002B1 F1                   818  	clrb a
000002B2                      819  .BB@LABEL@3_34:	; bb180
000002B2 9F0000               820  	mov !LOWW(_flow_p), a
000002B5                      821  	;***      287 : 		if (ns_delay_ms(&g_Tick.tickCustom[1], 60000)) {
000002B5                      822  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 287
000002B5 F6                   823  	clrw ax
000002B6 14                   824  	movw de, ax
000002B7 3260EA               825  	movw bc, #0xEA60
000002BA 300000               826  	movw ax, #LOWW(_g_Tick+0x0009C)
000002BD FC000000             827  	call !!_ns_delay_ms
000002C1                      828  	;***      288 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
000002C1                      829  	;***      289 : //				g_TickKeeper.SV1_ON_minutes++;
000002C1                      830  	;***      290 : //				g_TickKeeper.SV1_OFF_minutes = 0;
000002C1                      831  	;***      291 : //			}else{
000002C1                      832  	;***      292 : //				g_TickKeeper.SV1_OFF_minutes++;
000002C1                      833  	;***      293 : //				g_TickKeeper.SV1_ON_minutes = 0;
000002C1                      834  	;***      294 : //			}
000002C1                      835  	;***      295 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
000002C1                      836  	;***      296 : //				g_TickKeeper.SV2_ON_minutes++;
000002C1                      837  	;***      297 : //				g_TickKeeper.SV2_OFF_minutes = 0;
000002C1                      838  	;***      298 : //			}else{
000002C1                      839  	;***      299 : //				g_TickKeeper.SV2_OFF_minutes++;
000002C1                      840  	;***      300 : //				g_TickKeeper.SV2_ON_minutes = 0;
000002C1                      841  	;***      301 : //			}
000002C1                      842  	;***      302 : 		}
000002C1                      843  	;***      303 : 
000002C1                      844  	;***      304 : 		if (ns_delay_ms(&g_Tick.tick1s, 1000)) {
000002C1                      845  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 304
000002C1 F6                   846  	clrw ax
000002C2 14                   847  	movw de, ax
000002C3 32E803               848  	movw bc, #0x03E8
000002C6 300000               849  	movw ax, #LOWW(_g_Tick+0x00004)
000002C9 FC000000             850  	call !!_ns_delay_ms
000002CD F7                   851  	clrw bc
000002CE 43                   852  	cmpw ax, bc
000002CF DD00                 853  	bz $.BB@LABEL@3_38
000002D1                      854  .BB@LABEL@3_35:	; if_then_bb194
000002D1                      855  	;***      305 : 
000002D1                      856  	;***      306 : 			led_st = led_st == 0 ? 0xff : 0x00;
000002D1                      857  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 306
000002D1 D50000               858  	cmp0 !LOWW(_led_st)
000002D4 51FF                 859  	mov a, #0xFF
000002D6 61E8                 860  	skz
000002D8                      861  .BB@LABEL@3_36:	; bb200
000002D8 F1                   862  	clrb a
000002D9                      863  .BB@LABEL@3_37:	; bb202
000002D9 9F0000               864  	mov !LOWW(_led_st), a
000002DC                      865  	;***      307 : 			uint8_t state = g_uart2_sendend;
000002DC                      866  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 307
000002DC 8F0000               867  	mov a, !LOWW(_g_uart2_sendend)
000002DF                      868  	;***      308 : 			g_crc[6] = crc8_4((uint8_t*) &g_timerSetting,
000002DF                      869  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 308
000002DF 5294                 870  	mov c, #0x94
000002E1 300000               871  	movw ax, #LOWW(_g_timerSetting)
000002E4 FC000000             872  	call !!_crc8_4
000002E8 9F0000               873  	mov !LOWW(_g_crc+0x00006), a
000002EB                      874  	;***      309 : 					sizeof(struct Timer_Setting_s) - 2);
000002EB                      875  	;***      310 : 			g_crc[7] = crc8_1((uint8_t*) &g_timerSetting,
000002EB                      876  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 310
000002EB 5294                 877  	mov c, #0x94
000002ED 300000               878  	movw ax, #LOWW(_g_timerSetting)
000002F0 FC000000             879  	call !!_crc8_1
000002F4 9F0000               880  	mov !LOWW(_g_crc+0x00007), a
000002F7                      881  .BB@LABEL@3_38:	; if_break_bb217
000002F7                      882  	;***      311 : 					sizeof(struct Timer_Setting_s) - 2);
000002F7                      883  	;***      312 : //    	    switch (g_color) {
000002F7                      884  	;***      313 : //				case BLACK:
000002F7                      885  	;***      314 : //					g_color = RED;
000002F7                      886  	;***      315 : //					break;
000002F7                      887  	;***      316 : //				case RED:
000002F7                      888  	;***      317 : //					g_color = BLUE;
000002F7                      889  	;***      318 : //					break;
000002F7                      890  	;***      319 : //				case BLUE:
000002F7                      891  	;***      320 : //					g_color = WHITE;
000002F7                      892  	;***      321 : //					break;
000002F7                      893  	;***      322 : //				default:
000002F7                      894  	;***      323 : //					g_color = BLACK;
000002F7                      895  	;***      324 : //					break;
000002F7                      896  	;***      325 : //			}
000002F7                      897  	;***      326 : 			if (led_st == 0x00) {
000002F7                      898  	;***      327 : 
000002F7                      899  	;***      328 : //    			O_CVCC_ON_PIN = ON;
000002F7                      900  	;***      329 : //    			O_HS_ICL_PIN = 0;
000002F7                      901  	;***      330 : //    			O_HS_IDA_PIN = 1;
000002F7                      902  	;***      331 : //    			handSensorLED(RED);
000002F7                      903  	;***      332 : //    			O_CVCC_ALARM_RS = 1;
000002F7                      904  	;***      333 : //    			O_PUMP_SALT_PIN = ON;
000002F7                      905  	;***      334 : //    			electrolyticOperationON();
000002F7                      906  	;***      335 : //    			g_io_status.refined.Valve.SV4 = 1;
000002F7                      907  	;***      336 : //				g_io_status.refined.Pump2 = 1;
000002F7                      908  	;***      337 : //				g_io_status.refined.Valve.SV5 = 0;
000002F7                      909  	;***      338 : //				g_io_status.refined.Pump1 = 0;
000002F7                      910  	;***      339 : //				g_io_status.refined.SaltLowLevel = 1;
000002F7                      911  	;***      340 : //    			e_send[0]++;
000002F7                      912  	;***      341 : //    			g_numberSetting.upperVoltage1++;
000002F7                      913  	;***      342 : //    			g_numberSetting.crc--;
000002F7                      914  	;***      343 : //    			g_numberSetting.crc2++;
000002F7                      915  	;***      344 : //    			g_numberSetting.lowerFlow++;
000002F7                      916  	;***      345 : //    			g_numberSetting.hello++;
000002F7                      917  	;***      346 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
000002F7                      918  	;***      347 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
000002F7                      919  	;***      348 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
000002F7                      920  	;***      349 : 			} else {
000002F7                      921  	;***      350 : //    			O_CVCC_ON_PIN = OFF;
000002F7                      922  	;***      351 : //    			O_HS_ICL_PIN = 1;
000002F7                      923  	;***      352 : //				O_HS_IDA_PIN = 0;
000002F7                      924  	;***      353 : //    			handSensorLED(WHITE);
000002F7                      925  	;***      354 : //    			O_CVCC_ALARM_RS = 0;
000002F7                      926  	;***      355 : //    			O_PUMP_SALT_PIN = OFF;
000002F7                      927  	;***      356 : //    			electrolyticOperationOFF();
000002F7                      928  	;***      357 : //    			g_io_status.refined.Valve.SV4 = 0;
000002F7                      929  	;***      358 : //				g_io_status.refined.Pump2 = 0;
000002F7                      930  	;***      359 : //				g_io_status.refined.Valve.SV5 = 1;
000002F7                      931  	;***      360 : //				g_io_status.refined.Pump1 = 1;
000002F7                      932  	;***      361 : //				g_io_status.refined.SaltLowLevel = 0;
000002F7                      933  	;***      362 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
000002F7                      934  	;***      363 : 
000002F7                      935  	;***      364 : 			}
000002F7                      936  	;***      365 : 		}
000002F7                      937  	;***      366 : 
000002F7                      938  	;***      367 : //--------------------------------End testing code---------------------------------------------------------
000002F7                      939  	;***      368 : //    	if(g_machine_state.mode == BUSY){
000002F7                      940  	;***      369 : //    		g_machine_state.user = 0;
000002F7                      941  	;***      370 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
000002F7                      942  	;***      371 : //    			g_machine_state.mode = INDIE;
000002F7                      943  	;***      372 : //    		}
000002F7                      944  	;***      373 : //    	}else{
000002F7                      945  	;***      374 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
000002F7                      946  	;***      375 : //    	}
000002F7                      947  	;***      376 : 
000002F7                      948  	;***      377 : 		if ((g_machine_state.mode == WATER_WASHING)
000002F7                      949  	;***      378 : 				| (g_machine_state.mode == INDIE)) {
000002F7                      950  	;***      379 : //			nostop_WaterWashingMode();
000002F7                      951  	;***      380 : 		}
000002F7                      952  	;***      381 : //    	InitialOperationModeStart();
000002F7                      953  	;***      382 : 
000002F7                      954  	;***      383 : //    	if(g_color != g_pre_color){
000002F7                      955  	;***      384 : //			O_RS485_MODE_PIN = 1U;
000002F7                      956  	;***      385 : //			uint8_t _uart3 = g_uart3_sendend;
000002F7                      957  	;***      386 : //			send_buf[3]++;
000002F7                      958  	;***      387 : //			R_UART3_Send(send_buf, 7);
000002F7                      959  	;***      388 : //			while(_uart3 == g_uart3_sendend);
000002F7                      960  	;***      389 : //			O_RS485_MODE_PIN = 0U;
000002F7                      961  	;***      390 : //    	}
000002F7                      962  	;***      391 : 		R_WDT_Restart();
000002F7                      963  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 391
000002F7 FC000000             964  	call !!_R_WDT_Restart
000002FB EE0000               965  	br $!.BB@LABEL@3_3
000002FE                      966  _R_MAIN_UserInit:
000002FE                      967  	.STACK _R_MAIN_UserInit = 4
000002FE                      968  	;***      392 : 	}
000002FE                      969  	;***      393 : 	/* End user code. Do not edit comment generated here */
000002FE                      970  	;***      394 : }
000002FE                      971  	;***      395 : 
000002FE                      972  	;***      396 : /***********************************************************************************************************************
000002FE                      973  	;***      397 :  * Function Name: R_MAIN_UserInit
000002FE                      974  	;***      398 :  * Description  : This function adds user code before implementing main function.
000002FE                      975  	;***      399 :  * Arguments    : None
000002FE                      976  	;***      400 :  * Return Value : None
000002FE                      977  	;***      401 :  ***********************************************************************************************************************/
000002FE                      978  	;***      402 : void R_MAIN_UserInit(void) {
000002FE                      979  	;***      403 : 	/* Start user code. Do not edit comment generated here */
000002FE                      980  	;***      404 : 	EI();
000002FE                      981  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 404
000002FE 717AFA               982  	ei
00000301                      983  	;***      405 : 	R_TAU0_Create();
00000301                      984  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 405
00000301 FC000000             985  	call !!_R_TAU0_Create
00000305                      986  	;***      406 : 	R_SAU0_Create();
00000305                      987  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 406
00000305 FC000000             988  	call !!_R_SAU0_Create
00000309                      989  	;***      407 : 	R_SAU1_Create();
00000309                      990  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 407
00000309 FC000000             991  	call !!_R_SAU1_Create
0000030D                      992  	;***      408 : 	R_UART1_Create();
0000030D                      993  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 408
0000030D FC000000             994  	call !!_R_UART1_Create
00000311                      995  	;***      409 : 	R_UART2_Create();
00000311                      996  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 409
00000311 FC000000             997  	call !!_R_UART2_Create
00000315                      998  	;***      410 : 	R_UART3_Create();
00000315                      999  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 410
00000315 FC000000            1000  	call !!_R_UART3_Create
00000319                     1001  	;***      411 : 	R_RTC_Create();
00000319                     1002  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 411
00000319 FC000000            1003  	call !!_R_RTC_Create
0000031D                     1004  	;***      412 : 	R_PORT_Create_UserInit();
0000031D                     1005  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 412
0000031D FC000000            1006  	call !!_R_PORT_Create_UserInit
00000321                     1007  	;***      413 : 	R_CSI01_Create();
00000321                     1008  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 413
00000321 FC000000            1009  	call !!_R_CSI01_Create
00000325                     1010  	;***      414 : 	R_CSI00_Create();
00000325                     1011  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 414
00000325 FC000000            1012  	call !!_R_CSI00_Create
00000329                     1013  	;***      415 : 
00000329                     1014  	;***      416 : 	R_TAU0_Channel0_Start();
00000329                     1015  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 416
00000329 FC000000            1016  	call !!_R_TAU0_Channel0_Start
0000032D                     1017  	;***      417 : 	R_UART3_Start();
0000032D                     1018  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 417
0000032D FC000000            1019  	call !!_R_UART3_Start
00000331                     1020  	;***      418 : 	R_UART1_Start();
00000331                     1021  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 418
00000331 FC000000            1022  	call !!_R_UART1_Start
00000335                     1023  	;***      419 : 	R_UART2_Start();
00000335                     1024  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 419
00000335 FC000000            1025  	call !!_R_UART2_Start
00000339                     1026  	;***      420 : 	R_CSI00_Start();
00000339                     1027  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 420
00000339 FC000000            1028  	call !!_R_CSI00_Start
0000033D                     1029  	;***      421 : //    R_CSI01_Start();
0000033D                     1030  	;***      422 : 
0000033D                     1031  	;***      423 : 	R_ADC_Create();
0000033D                     1032  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 423
0000033D FC000000            1033  	call !!_R_ADC_Create
00000341                     1034  	;***      424 : 	R_ADC_Set_OperationOn();
00000341                     1035  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 424
00000341 FC000000            1036  	call !!_R_ADC_Set_OperationOn
00000345                     1037  	;***      425 : 	R_ADC_Start();
00000345                     1038  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 425
00000345 FC000000            1039  	call !!_R_ADC_Start
00000349                     1040  	;***      426 : 
00000349                     1041  	;***      427 : 	R_DAC_Create();
00000349                     1042  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 427
00000349 FC000000            1043  	call !!_R_DAC_Create
0000034D                     1044  	;***      428 : //	CVCC_Current_Set(0x0);
0000034D                     1045  	;***      429 : //	Salt_Analog_Set(0x0);
0000034D                     1046  	;***      430 : 	R_DAC0_Start();
0000034D                     1047  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 430
0000034D FC000000            1048  	call !!_R_DAC0_Start
00000351                     1049  	;***      431 : 	R_DAC1_Start();
00000351                     1050  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 431
00000351 EC000000            1051  	br !!_R_DAC1_Start
00000355                     1052  	;***      432 : 	/* End user code. Do not edit comment generated here */
00000355                     1053  	;***      433 : }
00000355                     1054  	;***      434 : 
00000355                     1055  	;***      435 : /* Start user code for adding. Do not edit comment generated here */
00000355                     1056  	;***      436 : /* End user code. Do not edit comment generated here */
00000000                     1057  	.SECTION .data,DATA
00000000                     1058  	.ALIGN 2
00000000                     1059  _g_adc_ch:
00000000 0000                1060  	.DS (2)
00000002                     1061  _led_st:
00000002 FF                  1062  	.DB 0xFF
00000003                     1063  _send_data:
00000003 23                  1064  	.DB 0x23,0xAB
00000004 AB              
00000005                     1065  _this_size:
00000005 12                  1066  	.DB 0x12
00000006                     1067  _this_size_2:
00000006 12                  1068  	.DB 0x12
00000007                     1069  _send_buf:
00000007 08                  1070  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                     1071  	.ALIGN 2
0000000E                     1072  _data_crc:
0000000E 24770000            1073  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                     1074  _dac_out:
00000016 FF                  1075  	.DB 0xFF,0xFF
00000017 FF              
00000000                     1076  	.SECTION .bss,BSS
00000000                     1077  _g_e_status:
00000000                     1078  	.DS (1)
00000001 00                  1079  	.ALIGN 2
00000002                     1080  _ret_number_setting:
00000002                     1081  	.DS (42)
0000002C                     1082  _flow_p:
0000002C                     1083  	.DS (1)
0000002D                     1084  _salt_h_p:
0000002D                     1085  	.DS (1)
0000002E                     1086  _g_eeprom_wren:
0000002E                     1087  	.DS (1)
0000002F                     1088  _receive_data:
0000002F                     1089  	.DS (2)
00000031 00                  1090  	.ALIGN 2
00000032                     1091  _receive_setting:
00000032                     1092  	.DS (42)
0000005C                     1093  _set:
0000005C                     1094  	.DS (1)
0000005D 00                  1095  	.ALIGN 2
0000005E                     1096  _rx_data:
0000005E                     1097  	.DS (12)
0000006A                     1098  	.ALIGN 2
0000006A                     1099  _data_f:
0000006A                     1100  	.DS (4)
0000006E                     1101  	.ALIGN 2
0000006E                     1102  _data_f_test:
0000006E                     1103  	.DS (4)
00000072                     1104  	.ALIGN 2
00000072                     1105  _g_control_buffer_f:
00000072                     1106  	.DS (6)
00000078                     1107  	.ALIGN 2
00000078                     1108  _g_control_buffer_u32:
00000078                     1109  	.DS (6)
0000007E                     1110  _handsensor_status:
0000007E                     1111  	.DS (1)
0000007F                     1112  _g_handsensor_status:
0000007F                     1113  	.DS (2)
00000081                     1114  _g_crc:
00000081                     1115  	.DS (8)
00000089 00                  1116  	.ALIGN 2
0000008A                     1117  _g_crc_32:
0000008A                     1118  	.DS (32)
000000AA                     1119  _rx_count:
000000AA                     1120  	.DS (1)
00000000                     1121  	.SECTION .const,CONST
00000000                     1122  .STR@1:
00000000 00000000            1123  	.DS (4)
00000004 01                  1124  	.DB 0x01
00000005                     1125  .STR@1685:
00000005 00                  1126  	.DS (1)
00000006 01                  1127  	.DB 0x01
00000007 0000                1128  	.DS (2)
00000009 01                  1129  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               853 (00000355) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 171 (000000AB) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl002\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

