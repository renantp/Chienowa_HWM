RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Tue Apr 12 13:31:57 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_test_control
00000000                       25  	.EXTERN _g_timerSetting
00000000                       26  	.EXTERN _g_numberSetting
00000000                       27  	.EXTERN _g_io_status
00000000                       28  	.EXTERN _g_Tick
00000000                       29  	.EXTERN _g_commnunication_flag
00000000                       30  	.EXTERN _g_machine_mode
00000000                       31  	.EXTERN _g_systemTime
00000000                       32  	.EXTERN _g_csi_rev_end
00000000                       33  	.EXTERN _g_uart2_fault
00000000                       34  	.EXTERN _g_uart2_sendend
00000000                       35  	.EXTERN _g_uart3_sendend
00000000                       36  	.EXTERN _g_rx_data
00000000                       37  	.EXTERN _g_uart3_rx_data
00000000                       38  	.PUBLIC _g_adc_ch
00000000                       39  	.PUBLIC _g_e_status
00000000                       40  	.PUBLIC _ret_number_setting
00000000                       41  	.PUBLIC _led_st
00000000                       42  	.PUBLIC _flow_p
00000000                       43  	.PUBLIC _salt_h_p
00000000                       44  	.PUBLIC _g_eeprom_wren
00000000                       45  	.PUBLIC _send_data
00000000                       46  	.PUBLIC _receive_data
00000000                       47  	.PUBLIC _receive_setting
00000000                       48  	.PUBLIC _set
00000000                       49  	.PUBLIC _rx_data
00000000                       50  	.PUBLIC _data_f
00000000                       51  	.PUBLIC _data_f_test
00000000                       52  	.PUBLIC _g_control_buffer_f
00000000                       53  	.PUBLIC _g_control_buffer_u32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _nostop_checkHandSensor
00000000                       65  	.EXTERN _ns_delay_ms
00000000                       66  	.PUBLIC _readHS
00000000                       67  	.EXTERN _delay_ms
00000000                       68  	.PUBLIC _main
00000000                       69  	.PUBLIC _R_MAIN_UserInit
00000000                       70  	.EXTERN _EEPROM_Init
00000000                       71  	.EXTERN _EE_SPI_Read
00000000                       72  	.EXTERN _manufactureReset
00000000                       73  	.EXTERN _R_UART2_Receive
00000000                       74  	.EXTERN _R_UART3_Receive
00000000                       75  	.EXTERN _sendRS485
00000000                       76  	.EXTERN _handSensorLED
00000000                       77  	.EXTERN _main_init_20211111
00000000                       78  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       79  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       80  	.EXTERN _realTimeResponse
00000000                       81  	.EXTERN _main_loop_20211111
00000000                       82  	.EXTERN _UpdateMachineStatus
00000000                       83  	.EXTERN _R_UART2_Stop
00000000                       84  	.EXTERN _R_UART2_Start
00000000                       85  	.EXTERN _sendR485_7byte
00000000                       86  	.EXTERN _R_UART3_Stop
00000000                       87  	.EXTERN _R_UART3_Start
00000000                       88  	.EXTERN _crc8_4
00000000                       89  	.EXTERN _crc8_1
00000000                       90  	.EXTERN _R_WDT_Restart
00000000                       91  	.EXTERN _R_TAU0_Create
00000000                       92  	.EXTERN _R_SAU0_Create
00000000                       93  	.EXTERN _R_SAU1_Create
00000000                       94  	.EXTERN _R_UART1_Create
00000000                       95  	.EXTERN _R_UART2_Create
00000000                       96  	.EXTERN _R_UART3_Create
00000000                       97  	.EXTERN _R_RTC_Create
00000000                       98  	.EXTERN _R_PORT_Create_UserInit
00000000                       99  	.EXTERN _R_CSI01_Create
00000000                      100  	.EXTERN _R_CSI00_Create
00000000                      101  	.EXTERN _R_TAU0_Channel0_Start
00000000                      102  	.EXTERN _R_UART1_Start
00000000                      103  	.EXTERN _R_CSI00_Start
00000000                      104  	.EXTERN _R_ADC_Create
00000000                      105  	.EXTERN _R_ADC_Set_OperationOn
00000000                      106  	.EXTERN _R_ADC_Start
00000000                      107  	.EXTERN _R_DAC_Create
00000000                      108  	.EXTERN _R_DAC0_Start
00000000                      109  	.EXTERN _R_DAC1_Start
00000000                      110  
00000000                      111  	.SECTION .textf,TEXTF
00000000                      112  _nostop_checkHandSensor:
00000000                      113  	.STACK _nostop_checkHandSensor = 4
00000000                      114  	;***        1 : /***********************************************************************************************************************
00000000                      115  	;***        2 :  * DISCLAIMER
00000000                      116  	;***        3 :  * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      117  	;***        4 :  * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      118  	;***        5 :  * applicable laws, including copyright laws.
00000000                      119  	;***        6 :  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      120  	;***        7 :  * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      121  	;***        8 :  * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      122  	;***        9 :  * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      123  	;***       10 :  * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      124  	;***       11 :  * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      125  	;***       12 :  * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability
00000000                      126  	;***       13 :  * of this software. By using this software, you agree to the additional terms and conditions found by accessing the
00000000                      127  	;***       14 :  * following link:
00000000                      128  	;***       15 :  * http://www.renesas.com/disclaimer
00000000                      129  	;***       16 :  *
00000000                      130  	;***       17 :  * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      131  	;***       18 :  ***********************************************************************************************************************/
00000000                      132  	;***       19 : 
00000000                      133  	;***       20 : /***********************************************************************************************************************
00000000                      134  	;***       21 :  * File Name    : r_main.c
00000000                      135  	;***       22 :  * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      136  	;***       23 :  * Device(s)    : R5F104ML
00000000                      137  	;***       24 :  * Tool-Chain   : CCRL
00000000                      138  	;***       25 :  * Description  : This file implements main function.
00000000                      139  	;***       26 :  * Creation Date: 30/11/2021
00000000                      140  	;***       27 :  ***********************************************************************************************************************/
00000000                      141  	;***       28 : 
00000000                      142  	;***       29 : /***********************************************************************************************************************
00000000                      143  	;***       30 :  Includes
00000000                      144  	;***       31 :  ***********************************************************************************************************************/
00000000                      145  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      146  	;***       33 : #include "r_cg_cgc.h"
00000000                      147  	;***       34 : #include "r_cg_port.h"
00000000                      148  	;***       35 : #include "r_cg_serial.h"
00000000                      149  	;***       36 : #include "r_cg_adc.h"
00000000                      150  	;***       37 : #include "r_cg_dac.h"
00000000                      151  	;***       38 : #include "r_cg_timer.h"
00000000                      152  	;***       39 : #include "r_cg_wdt.h"
00000000                      153  	;***       40 : #include "r_cg_rtc.h"
00000000                      154  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      155  	;***       42 : #include "EEPROM.h"
00000000                      156  	;***       43 : #include "usr_timer.h"
00000000                      157  	;***       44 : #include "usr_setting_sheet.h"
00000000                      158  	;***       45 : #include "crc8.h"
00000000                      159  	;***       46 : #include "hwm/hwm_main.h"
00000000                      160  	;***       47 : #include "r_cg_userdefine.h"
00000000                      161  	;***       48 : 
00000000                      162  	;***       49 : /***********************************************************************************************************************
00000000                      163  	;***       50 :  Pragma directive
00000000                      164  	;***       51 :  ***********************************************************************************************************************/
00000000                      165  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      166  	;***       53 : 
00000000                      167  	;***       54 : //#define TESTING_FIRMWARE
00000000                      168  	;***       55 : /* End user code. Do not edit comment generated here */
00000000                      169  	;***       56 : 
00000000                      170  	;***       57 : /***********************************************************************************************************************
00000000                      171  	;***       58 :  Global variables and functions
00000000                      172  	;***       59 :  ***********************************************************************************************************************/
00000000                      173  	;***       60 : /* Start user code for global. Do not edit comment generated here */
00000000                      174  	;***       61 : 
00000000                      175  	;***       62 : volatile int g_adc_ch = 0;
00000000                      176  	;***       63 : union EEPROM_status_u g_e_status;
00000000                      177  	;***       64 : struct Number_Setting_s ret_number_setting;
00000000                      178  	;***       65 : uint8_t led_st = 0xff;
00000000                      179  	;***       66 : uint8_t flow_p, salt_h_p;
00000000                      180  	;***       67 : uint8_t g_eeprom_wren;
00000000                      181  	;***       68 : uint8_t send_data[2] = { 0x23, 0xab };
00000000                      182  	;***       69 : uint8_t receive_data[2];
00000000                      183  	;***       70 : struct Number_Setting_s receive_setting;
00000000                      184  	;***       71 : union EEPROM_status_u set;
00000000                      185  	;***       72 : uint32_t rx_data[3];
00000000                      186  	;***       73 : float data_f;
00000000                      187  	;***       74 : union byte_to_float data_f_test;
00000000                      188  	;***       75 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      189  	;***       76 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      190  	;***       77 : 
00000000                      191  	;***       78 : union {
00000000                      192  	;***       79 : 	struct {
00000000                      193  	;***       80 : 		uint8_t up_signal;
00000000                      194  	;***       81 : 	};
00000000                      195  	;***       82 : 	uint8_t status;
00000000                      196  	;***       83 : } handsensor_status;
00000000                      197  	;***       84 : uint8_t g_handsensor_status[2];
00000000                      198  	;***       85 : void nostop_checkHandSensor(void) {
00000000                      199  	;***       86 : 	if (DETECT_U() == I_ON) {
00000000                      200  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 86
00000000 8D07                 201  	mov a, 0xFFF07
00000002 315300               202  	bt a.5, $.BB@LABEL@1_5
00000005                      203  .BB@LABEL@1_1:	; if_then_bb
00000005                      204  	;***       87 : 		if (ns_delay_ms(&g_Tick.tickHandSensor[0], 500)) {
00000005                      205  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000005 F6                   206  	clrw ax
00000006 14                   207  	movw de, ax
00000007 32F401               208  	movw bc, #0x01F4
0000000A 300000               209  	movw ax, #LOWW(_g_Tick+0x00090)
0000000D FC000000             210  	call !!_ns_delay_ms
00000011 F7                   211  	clrw bc
00000012 43                   212  	cmpw ax, bc
00000013 DD00                 213  	bz $.BB@LABEL@1_9
00000015                      214  .BB@LABEL@1_2:	; if_then_bb16
00000015                      215  	;***       88 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0 ? 1 : 0;
00000015                      216  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000015 D50000               217  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   218  	oneb a
00000019 61E8                 219  	skz
0000001B                      220  .BB@LABEL@1_3:	; bb22
0000001B F1                   221  	clrb a
0000001C                      222  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               223  	mov !LOWW(_g_handsensor_status), a
0000001F                      224  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
0000001F D7                   225  	ret
00000020                      226  .BB@LABEL@1_5:	; if_else_bb
00000020                      227  	;***       89 : 		}
00000020                      228  	;***       90 : 	} else if (DETECT_D() == I_ON) {
00000020                      229  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 90
00000020 8D07                 230  	mov a, 0xFFF07
00000022 314300               231  	bt a.4, $.BB@LABEL@1_7
00000025                      232  .BB@LABEL@1_6:	; if_then_bb43
00000025                      233  	;***       91 : 		g_handsensor_status[1] = 1;
00000025                      234  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000025 E50000               235  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   236  	ret
00000029                      237  .BB@LABEL@1_7:	; if_else_bb44
00000029                      238  	;***       92 : 	} else if (DETECT_U() == I_OFF) {
00000029                      239  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000029 8D07                 240  	mov a, 0xFFF07
0000002B 315300               241  	bt a.5, $.BB@LABEL@1_9
0000002E                      242  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      243  	;***       93 : 
0000002E                      244  	;***       94 : 	} else if (DETECT_D() == I_OFF) {
0000002E                      245  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 94
0000002E 8D07                 246  	mov a, 0xFFF07
00000030                      247  .BB@LABEL@1_9:	; return
00000030                      248  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
00000030 D7                   249  	ret
00000031                      250  _readHS:
00000031                      251  	.STACK _readHS = 4
00000031                      252  	;***       95 : 
00000031                      253  	;***       96 : 	}
00000031                      254  	;***       97 : }
00000031                      255  	;***       98 : uint8_t readHS(void) {
00000031                      256  	;***       99 : 	if (DETECT_U()) {
00000031                      257  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 99
00000031 8D07                 258  	mov a, 0xFFF07
00000033 315300               259  	bt a.5, $.BB@LABEL@2_2
00000036                      260  .BB@LABEL@2_1:	; bb33
00000036                      261  	;***      100 : 		delay_ms(2);
00000036                      262  	;***      101 : 		if (DETECT_U())
00000036                      263  	;***      102 : 			return 1;
00000036                      264  	;***      103 : 		return 0;
00000036                      265  	;***      104 : 	} else
00000036                      266  	;***      105 : 		return 0;
00000036                      267  	;***      106 : }
00000036                      268  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 106
00000036 F1                   269  	clrb a
00000037 D7                   270  	ret
00000038                      271  .BB@LABEL@2_2:	; if_then_bb
00000038                      272  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000038 F7                   273  	clrw bc
00000039 E6                   274  	onew ax
0000003A A1                   275  	incw ax
0000003B FC000000             276  	call !!_delay_ms
0000003F                      277  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
0000003F 8D07                 278  	mov a, 0xFFF07
00000041 315A                 279  	shr a, 0x05
00000043 5C01                 280  	and a, #0x01
00000045 D7                   281  	ret
00000046                      282  _main:
00000046                      283  	.STACK _main = 24
00000046                      284  	;***      107 : uint8_t this_size = sizeof(g_io_status);
00000046                      285  	;***      108 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      286  	;***      109 : uint8_t send_buf[7] = { 8, 1, 2, 3, 4, 5, 6 };
00000046                      287  	;***      110 : char g_crc[8];
00000046                      288  	;***      111 : uint32_t g_crc_32[8];
00000046                      289  	;***      112 : uint32_t data_crc[2] = { 30500, 60200 };
00000046                      290  	;***      113 : uint8_t rx_count;
00000046                      291  	;***      114 : uint8_t dac_out[2] = { 0xff, 0xff };
00000046                      292  	;***      115 : /* End user code. Do not edit comment generated here */
00000046                      293  	;***      116 : 
00000046                      294  	;***      117 : void R_MAIN_UserInit(void);
00000046                      295  	;***      118 : 
00000046                      296  	;***      119 : /***********************************************************************************************************************
00000046                      297  	;***      120 :  * Function Name: main
00000046                      298  	;***      121 :  * Description  : This function implements main function.
00000046                      299  	;***      122 :  * Arguments    : None
00000046                      300  	;***      123 :  * Return Value : None
00000046                      301  	;***      124 :  ***********************************************************************************************************************/
00000046                      302  	;***      125 : void main(void) {
00000046                      303  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 125
00000046 2010                 304  	subw sp, #0x10
00000048                      305  	;***      126 : 	R_MAIN_UserInit();
00000048                      306  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 126
00000048 FE0000               307  	call $!_R_MAIN_UserInit
0000004B                      308  	;***      127 : 	/* Start user code. Do not edit comment generated here */
0000004B                      309  	;***      128 : 
0000004B                      310  	;***      129 : 	//TODO: EEPROM Initialize and read Setting
0000004B                      311  	;***      130 : 	EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      312  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
0000004B F2                   313  	clrb c
0000004C 300000               314  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             315  	call !!_EEPROM_Init
00000053 F6                   316  	clrw ax
00000054                      317  	;***      131 : 	EE_SPI_Read((uint8_t*) &g_numberSetting, NUMBER_SETTING_ADDRESS,
00000054                      318  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
00000054 C1                   319  	push ax
00000055 5029                 320  	mov x, #0x29
00000057 C1                   321  	push ax
00000058 F7                   322  	clrw bc
00000059 300000               323  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             324  	call !!_EE_SPI_Read
00000060 1004                 325  	addw sp, #0x04
00000062 F6                   326  	clrw ax
00000063                      327  	;***      132 : 			numberSettingSize);
00000063                      328  	;***      133 : 	EE_SPI_Read((uint8_t*) &g_timerSetting, TIME_SETTING_ADDRESS,
00000063                      329  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
00000063 C1                   330  	push ax
00000064 5095                 331  	mov x, #0x95
00000066 C1                   332  	push ax
00000067 320008               333  	movw bc, #0x0800
0000006A 300000               334  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             335  	call !!_EE_SPI_Read
00000071 1004                 336  	addw sp, #0x04
00000073 F6                   337  	clrw ax
00000074                      338  	;***      134 : 			timeSettingSize);
00000074                      339  	;***      135 : 	EE_SPI_Read((uint8_t*) &g_test_control.data,
00000074                      340  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 135
00000074 C1                   341  	push ax
00000075 A1                   342  	incw ax
00000076 C1                   343  	push ax
00000077 322900               344  	movw bc, #0x0029
0000007A 300000               345  	movw ax, #LOWW(_g_test_control)
0000007D FC000000             346  	call !!_EE_SPI_Read
00000081 1004                 347  	addw sp, #0x04
00000083                      348  	;***      136 : 			NUMBER_SETTING_ADDRESS + numberSettingSize, sizeof(g_test_control.data));
00000083                      349  	;***      137 : 	// Set to default valve
00000083                      350  	;***      138 : 	if(g_timerSetting.t1_initialWaterDrainageOperation_s > 180 && g_numberSetting.upperVoltage1 > 100.0){
00000083                      351  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 138
00000083 AF0000               352  	movw ax, !LOWW(_g_timerSetting+0x00002)
00000086 F7                   353  	clrw bc
00000087 43                   354  	cmpw ax, bc
00000088 AF0000               355  	movw ax, !LOWW(_g_timerSetting)
0000008B 61F8                 356  	sknz
0000008D                      357  .BB@LABEL@3_1:	; entry
0000008D 44B500               358  	cmpw ax, #0x00B5
00000090                      359  .BB@LABEL@3_2:	; entry
00000090 DC00                 360  	bc $.BB@LABEL@3_9
00000092                      361  .BB@LABEL@3_3:	; bb
00000092 30C842               362  	movw ax, #0x42C8
00000095 C1                   363  	push ax
00000096 F6                   364  	clrw ax
00000097 C1                   365  	push ax
00000098 DB0000               366  	movw bc, !LOWW(_g_numberSetting+0x00002)
0000009B 13                   367  	movw ax, bc
0000009C B806                 368  	movw [sp+0x06], ax
0000009E AF0000               369  	movw ax, !LOWW(_g_numberSetting)
000000A1 B808                 370  	movw [sp+0x08], ax
000000A3 FC000000             371  	call !!__COM_funordered
000000A7 9804                 372  	mov [sp+0x04], a
000000A9 1004                 373  	addw sp, #0x04
000000AB 30C842               374  	movw ax, #0x42C8
000000AE C1                   375  	push ax
000000AF F6                   376  	clrw ax
000000B0 C1                   377  	push ax
000000B1 A806                 378  	movw ax, [sp+0x06]
000000B3 12                   379  	movw bc, ax
000000B4 A808                 380  	movw ax, [sp+0x08]
000000B6 FC000000             381  	call !!__COM_fle
000000BA 1004                 382  	addw sp, #0x04
000000BC 70                   383  	mov x, a
000000BD 8800                 384  	mov a, [sp+0x00]
000000BF D1                   385  	cmp0 a
000000C0 E1                   386  	oneb a
000000C1 61F8                 387  	sknz
000000C3                      388  .BB@LABEL@3_4:	; bb
000000C3 F1                   389  	clrb a
000000C4                      390  .BB@LABEL@3_5:	; bb
000000C4 D0                   391  	cmp0 x
000000C5 E0                   392  	oneb x
000000C6 61F8                 393  	sknz
000000C8                      394  .BB@LABEL@3_6:	; bb
000000C8 F0                   395  	clrb x
000000C9                      396  .BB@LABEL@3_7:	; bb
000000C9 6160                 397  	or x, a
000000CB 61F8                 398  	sknz
000000CD                      399  .BB@LABEL@3_8:	; if_then_bb
000000CD                      400  	;***      139 : 		manufactureReset();
000000CD                      401  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
000000CD FC000000             402  	call !!_manufactureReset
000000D1                      403  .BB@LABEL@3_9:	; if_break_bb
000000D1                      404  	;***      140 : 	}
000000D1                      405  	;***      141 : 	_settingNumber = g_numberSetting;
000000D1                      406  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
000000D1 342A00               407  	movw de, #0x002A
000000D4 320000               408  	movw bc, #LOWW(_g_numberSetting)
000000D7 300000               409  	movw ax, #LOWW(__settingNumber)
000000DA FC000000             410  	call !!_memcpy
000000DE                      411  	;***      142 : 	_settingTime = g_timerSetting;
000000DE                      412  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 142
000000DE 349600               413  	movw de, #0x0096
000000E1 320000               414  	movw bc, #LOWW(_g_timerSetting)
000000E4 300000               415  	movw ax, #LOWW(__settingTime)
000000E7 FC000000             416  	call !!_memcpy
000000EB                      417  	;***      143 : 	EEPROM_PROTECT_EN();
000000EB                      418  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 143
000000EB 71030E               419  	clr1 0xFFF0E.0
000000EE                      420  	;***      144 : 	//TODO: Start receive command from Raspberry Pi
000000EE                      421  	;***      145 : 	R_UART2_Receive(g_rx_data, 6);
000000EE                      422  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
000000EE 320600               423  	movw bc, #0x0006
000000F1 300000               424  	movw ax, #LOWW(_g_rx_data)
000000F4 FC000000             425  	call !!_R_UART2_Receive
000000F8                      426  	;***      146 : 
000000F8                      427  	;***      147 : 	//TODO: Start receive data from RS485
000000F8                      428  	;***      148 : 	O_RS485_MODE_PIN = 0U;
000000F8                      429  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 148
000000F8 710300               430  	clr1 0xFFF00.0
000000FB                      431  	;***      149 : 	R_UART3_Receive(g_uart3_rx_data, 7);
000000FB                      432  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 149
000000FB 320700               433  	movw bc, #0x0007
000000FE 300000               434  	movw ax, #LOWW(_g_uart3_rx_data)
00000101 FC000000             435  	call !!_R_UART3_Receive
00000105 F6                   436  	clrw ax
00000106                      437  	;***      150 : 	uint8_t wts, vpcb, vpcb_v = 1;
00000106                      438  	;***      151 : 	sendRS485(0xff, 82, 2, 12);
00000106                      439  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
00000106 C1                   440  	push ax
00000107 500C                 441  	mov x, #0x0C
00000109 C1                   442  	push ax
0000010A 5202                 443  	mov c, #0x02
0000010C 3052FF               444  	movw ax, #0xFF52
0000010F FC000000             445  	call !!_sendRS485
00000113 1004                 446  	addw sp, #0x04
00000115                      447  	;***      152 : 
00000115                      448  	;***      153 : 	//TODO: Turn off Hand Sensor LED
00000115                      449  	;***      154 : 	g_pre_color = BLUE;
00000115                      450  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 154
00000115 CF000003             451  	mov !LOWW(_g_pre_color), #0x03
00000119                      452  	;***      155 : 	handSensorLED(BLACK);
00000119                      453  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 155
00000119 F1                   454  	clrb a
0000011A FC000000             455  	call !!_handSensorLED
0000011E 360000               456  	movw hl, #LOWW(_g_test_control)
00000121                      457  	;***      156 : 
00000121                      458  	;***      157 : 	//TODO: Set default washing mode
00000121                      459  	;***      158 : 	g_machine_mode = HAND_WASHING;
00000121                      460  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 158
00000121 E50000               461  	oneb !LOWW(_g_machine_mode)
00000124 319500               462  	bf [hl].1, $.BB@LABEL@3_11
00000127                      463  .BB@LABEL@3_10:	; if_then_bb35
00000127                      464  	;***      159 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
00000127                      465  	;***      160 : 
00000127                      466  	;***      161 : 	//TODO: Run Initialize Operation
00000127                      467  	;***      162 : 	if(g_test_control.raw.power_on == ON){
00000127                      468  	;***      163 : 		main_init_20211111();
00000127                      469  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
00000127 FC000000             470  	call !!_main_init_20211111
0000012B                      471  .BB@LABEL@3_11:	; if_break_bb36
0000012B 30A040               472  	movw ax, #0x40A0
0000012E                      473  	;***      164 : 	}
0000012E                      474  	;***      165 : 	//TODO: Output CVCC and Salt pump voltage
0000012E                      475  	;***      166 : 	CVCC_Current_Set((uint8_t) (g_numberSetting.cvccCurrent/CVCC_MAX_VOLTAGE*255));
0000012E                      476  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
0000012E C1                   477  	push ax
0000012F F6                   478  	clrw ax
00000130 C1                   479  	push ax
00000131 DB0000               480  	movw bc, !LOWW(_g_numberSetting+0x00022)
00000134 AF0000               481  	movw ax, !LOWW(_g_numberSetting+0x00020)
00000137 FC000000             482  	call !!__COM_fdiv
0000013B 14                   483  	movw de, ax
0000013C 1004                 484  	addw sp, #0x04
0000013E 307F43               485  	movw ax, #0x437F
00000141 C1                   486  	push ax
00000142 F6                   487  	clrw ax
00000143 C1                   488  	push ax
00000144 15                   489  	movw ax, de
00000145 FC000000             490  	call !!__COM_fmul
00000149 1004                 491  	addw sp, #0x04
0000014B FC000000             492  	call !!__COM_ftoul
0000014F 60                   493  	mov a, x
00000150 FC000000             494  	call !!_R_DAC0_Set_ConversionValue
00000154 309B40               495  	movw ax, #0x409B
00000157                      496  	;***      167 : 	Salt_Analog_Set((uint8_t) (g_numberSetting.saltPumpVoltage/SALT_PUMP_MAX_VOLTAGE*255));
00000157                      497  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 167
00000157 C1                   498  	push ax
00000158 300C02               499  	movw ax, #0x020C
0000015B C1                   500  	push ax
0000015C DB0000               501  	movw bc, !LOWW(_g_numberSetting+0x00026)
0000015F AF0000               502  	movw ax, !LOWW(_g_numberSetting+0x00024)
00000162 FC000000             503  	call !!__COM_fdiv
00000166 14                   504  	movw de, ax
00000167 1004                 505  	addw sp, #0x04
00000169 307F43               506  	movw ax, #0x437F
0000016C C1                   507  	push ax
0000016D F6                   508  	clrw ax
0000016E C1                   509  	push ax
0000016F 15                   510  	movw ax, de
00000170 FC000000             511  	call !!__COM_fmul
00000174 1004                 512  	addw sp, #0x04
00000176 FC000000             513  	call !!__COM_ftoul
0000017A 60                   514  	mov a, x
0000017B FC000000             515  	call !!_R_DAC1_Set_ConversionValue
0000017F E1                   516  	oneb a
00000180 9802                 517  	mov [sp+0x02], a
00000182 9801                 518  	mov [sp+0x01], a
00000184 9800                 519  	mov [sp+0x00], a
00000186                      520  .BB@LABEL@3_12:	; bb254
00000186                      521  	;***      168 : 	while (1U) {
00000186                      522  	;***      169 : 
00000186                      523  	;***      170 : 		realTimeResponse();
00000186                      524  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
00000186 FC000000             525  	call !!_realTimeResponse
0000018A                      526  	;***      171 : 		main_loop_20211111();
0000018A                      527  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 171
0000018A FC000000             528  	call !!_main_loop_20211111
0000018E                      529  	;***      172 : 
0000018E                      530  	;***      173 : 		handSensorLED(g_color);
0000018E                      531  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 173
0000018E 8F0000               532  	mov a, !LOWW(_g_color)
00000191 FC000000             533  	call !!_handSensorLED
00000195                      534  	;***      174 : 		UpdateMachineStatus();
00000195                      535  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 174
00000195 FC000000             536  	call !!_UpdateMachineStatus
00000199                      537  	;***      175 : 		if (g_uart2_fault == 1) {
00000199                      538  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
00000199 40000001             539  	cmp !LOWW(_g_uart2_fault), #0x01
0000019D DF00                 540  	bnz $.BB@LABEL@3_14
0000019F                      541  .BB@LABEL@3_13:	; if_then_bb52
0000019F                      542  	;***      176 : 			R_UART2_Stop();
0000019F                      543  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 176
0000019F FC000000             544  	call !!_R_UART2_Stop
000001A3                      545  	;***      177 : 			delay_ms(10);
000001A3                      546  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
000001A3 F7                   547  	clrw bc
000001A4 300A00               548  	movw ax, #0x000A
000001A7 FC000000             549  	call !!_delay_ms
000001AB                      550  	;***      178 : 			R_UART2_Start();
000001AB                      551  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
000001AB FC000000             552  	call !!_R_UART2_Start
000001AF                      553  	;***      179 : 			g_uart2_fault = 0;
000001AF                      554  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 179
000001AF F50000               555  	clrb !LOWW(_g_uart2_fault)
000001B2                      556  .BB@LABEL@3_14:	; if_break_bb53
000001B2                      557  	;***      180 : 		}
000001B2                      558  	;***      181 : 
000001B2                      559  	;***      182 : 		// Communication with WaterSoftener
000001B2                      560  	;***      183 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_response_flag) {
000001B2                      561  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
000001B2 D50000               562  	cmp0 !LOWW(_g_commnunication_flag+0x0000A)
000001B5 DD00                 563  	bz $.BB@LABEL@3_16
000001B7                      564  .BB@LABEL@3_15:	; if_then_bb59
000001B7 F6                   565  	clrw ax
000001B8                      566  	;***      184 : 			sendRS485(0xff, 82, 2, 5);
000001B8                      567  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 184
000001B8 C1                   568  	push ax
000001B9 5005                 569  	mov x, #0x05
000001BB C1                   570  	push ax
000001BC 5202                 571  	mov c, #0x02
000001BE 3052FF               572  	movw ax, #0xFF52
000001C1 FC000000             573  	call !!_sendRS485
000001C5 1004                 574  	addw sp, #0x04
000001C7                      575  	;***      185 : //    		rx_count++;
000001C7                      576  	;***      186 : 			wts = 1; //Test flag = 1
000001C7                      577  	;***      187 : 			g_commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
000001C7                      578  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 187
000001C7 F50000               579  	clrb !LOWW(_g_commnunication_flag+0x0000A)
000001CA E1                   580  	oneb a
000001CB 9800                 581  	mov [sp+0x00], a
000001CD                      582  .BB@LABEL@3_16:	; if_break_bb60
000001CD                      583  	;***      188 : 		}
000001CD                      584  	;***      189 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1) {
000001CD                      585  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 189
000001CD 40000001             586  	cmp !LOWW(_g_commnunication_flag+0x0000B), #0x01
000001D1 DF00                 587  	bnz $.BB@LABEL@3_20
000001D3                      588  .BB@LABEL@3_17:	; if_then_bb66
000001D3                      589  	;***      190 : 			// Sand to Water softener SV state
000001D3                      590  	;***      191 : 			sendRS485(0xff, 82, 24,
000001D3                      591  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 191
000001D3 360000               592  	movw hl, #LOWW(_g_io_status+0x00001)
000001D6 E7                   593  	onew bc
000001D7 318300               594  	bt [hl].0, $.BB@LABEL@3_19
000001DA                      595  .BB@LABEL@3_18:	; bb74
000001DA B3                   596  	decw bc
000001DB                      597  .BB@LABEL@3_19:	; bb76
000001DB F6                   598  	clrw ax
000001DC C1                   599  	push ax
000001DD C3                   600  	push bc
000001DE 5218                 601  	mov c, #0x18
000001E0 3052FF               602  	movw ax, #0xFF52
000001E3 FC000000             603  	call !!_sendRS485
000001E7 1004                 604  	addw sp, #0x04
000001E9                      605  	;***      192 : 					(uint32_t) g_io_status.refined.io.Valve.SV1 == 1 ? 1 : 0);
000001E9                      606  	;***      193 : 			g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
000001E9                      607  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 193
000001E9 F50000               608  	clrb !LOWW(_g_commnunication_flag+0x0000B)
000001EC                      609  .BB@LABEL@3_20:	; if_break_bb80
000001EC 8800                 610  	mov a, [sp+0x00]
000001EE                      611  	;***      194 : 		}
000001EE                      612  	;***      195 : 		// Test SV1 for Water Softener
000001EE                      613  	;***      196 : 		if (wts != 0) {
000001EE                      614  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
000001EE D1                   615  	cmp0 a
000001EF DF00                 616  	bnz $.BB@LABEL@3_22
000001F1                      617  .BB@LABEL@3_21:	; if_else_bb100
000001F1                      618  	;***      197 : 			if (ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)) {
000001F1                      619  	;***      198 : 				if (wts == 1) {
000001F1                      620  	;***      199 : 					O_SUPPLY_WATER_PIN_SV1 = ON;
000001F1                      621  	;***      200 : //					sendRS485(1, 82, 24,(uint32_t) 1);
000001F1                      622  	;***      201 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
000001F1                      623  	;***      202 : 					wts = 2;
000001F1                      624  	;***      203 : 				} else {
000001F1                      625  	;***      204 : 					O_SUPPLY_WATER_PIN_SV1 = OFF;
000001F1                      626  	;***      205 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
000001F1                      627  	;***      206 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
000001F1                      628  	;***      207 : 					wts = 0;
000001F1                      629  	;***      208 : 				}
000001F1                      630  	;***      209 : 			}
000001F1                      631  	;***      210 : 		} else {
000001F1                      632  	;***      211 : 			g_Tick.tickWaterSoftenerPCB = g_systemTime;
000001F1                      633  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001F1 AF0000               634  	movw ax, !LOWW(_g_systemTime+0x00002)
000001F4 BF0000               635  	movw !LOWW(_g_Tick+0x00052), ax
000001F7 AF0000               636  	movw ax, !LOWW(_g_systemTime)
000001FA BF0000               637  	movw !LOWW(_g_Tick+0x00050), ax
000001FD EF00                 638  	br $.BB@LABEL@3_26
000001FF                      639  .BB@LABEL@3_22:	; if_then_bb86
000001FF                      640  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 197
000001FF F6                   641  	clrw ax
00000200 14                   642  	movw de, ax
00000201 328813               643  	movw bc, #0x1388
00000204 300000               644  	movw ax, #LOWW(_g_Tick+0x00050)
00000207 FC000000             645  	call !!_ns_delay_ms
0000020B F7                   646  	clrw bc
0000020C 43                   647  	cmpw ax, bc
0000020D DD00                 648  	bz $.BB@LABEL@3_26
0000020F                      649  .BB@LABEL@3_23:	; if_then_bb91
0000020F 8800                 650  	mov a, [sp+0x00]
00000211                      651  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 198
00000211 91                   652  	dec a
00000212 DF00                 653  	bnz $.BB@LABEL@3_25
00000214                      654  .BB@LABEL@3_24:	; if_then_bb97
00000214                      655  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 199
00000214 717201               656  	set1 0xFFF01.7
00000217 C80002               657  	mov [sp+0x00], #0x02
0000021A EF00                 658  	br $.BB@LABEL@3_26
0000021C                      659  .BB@LABEL@3_25:	; if_else_bb
0000021C                      660  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 204
0000021C 717301               661  	clr1 0xFFF01.7
0000021F F1                   662  	clrb a
00000220 9800                 663  	mov [sp+0x00], a
00000222                      664  .BB@LABEL@3_26:	; if_break_bb102
00000222                      665  	;***      212 : 		}
00000222                      666  	;***      213 : 
00000222                      667  	;***      214 : 		//---------------------------------Valve PCB------------------------------------
00000222                      668  	;***      215 : 		if (g_commnunication_flag.rs485_send_to_valve_response_flag == 1) {
00000222                      669  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
00000222 40000001             670  	cmp !LOWW(_g_commnunication_flag+0x0000C), #0x01
00000226 DF00                 671  	bnz $.BB@LABEL@3_28
00000228                      672  .BB@LABEL@3_27:	; if_then_bb108
00000228 AEF8                 673  	movw ax, sp
0000022A 040600               674  	addw ax, #0x0006
0000022D B804                 675  	movw [sp+0x04], ax
0000022F                      676  	;***      216 : 			// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
0000022F                      677  	;***      217 : 			// 0 - Stand alone 1 - Control Valve
0000022F                      678  	;***      218 : 			uint8_t _b[5] = { vpcb_v, g_uart3_sendend % 2, g_systemTime % 2, 0,
0000022F                      679  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 218
0000022F 340500               680  	movw de, #0x0005
00000232 320000               681  	movw bc, #SMRLW(.STR@1)
00000235 FC000000             682  	call !!_memcpy
00000239 8802                 683  	mov a, [sp+0x02]
0000023B 9806                 684  	mov [sp+0x06], a
0000023D E1                   685  	oneb a
0000023E 5F0000               686  	and a, !LOWW(_g_uart3_sendend)
00000241 9807                 687  	mov [sp+0x07], a
00000243 AF0000               688  	movw ax, !LOWW(_g_systemTime+0x00002)
00000246 AF0000               689  	movw ax, !LOWW(_g_systemTime)
00000249 60                   690  	mov a, x
0000024A 5C01                 691  	and a, #0x01
0000024C 9808                 692  	mov [sp+0x08], a
0000024E A804                 693  	movw ax, [sp+0x04]
00000250 12                   694  	movw bc, ax
00000251                      695  	;***      219 : 					1 };
00000251                      696  	;***      220 : 			sendR485_7byte(0xff, 12, _b);
00000251                      697  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 220
00000251 300CFF               698  	movw ax, #0xFF0C
00000254 FC000000             699  	call !!_sendR485_7byte
00000258                      700  	;***      221 : 			vpcb++;
00000258                      701  	;***      222 : 			g_commnunication_flag.rs485_send_to_valve_response_flag = 0;
00000258                      702  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 222
00000258 F50000               703  	clrb !LOWW(_g_commnunication_flag+0x0000C)
0000025B 8801                 704  	mov a, [sp+0x01]
0000025D                      705  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
0000025D 81                   706  	inc a
0000025E 9801                 707  	mov [sp+0x01], a
00000260 EF00                 708  	br $.BB@LABEL@3_30
00000262                      709  .BB@LABEL@3_28:	; if_else_bb126
00000262                      710  	;***      223 : 		} else if (g_commnunication_flag.rs485_get_valve_gesture_flag == 1) {
00000262                      711  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 223
00000262 40000001             712  	cmp !LOWW(_g_commnunication_flag+0x0000D), #0x01
00000266 DF00                 713  	bnz $.BB@LABEL@3_30
00000268                      714  .BB@LABEL@3_29:	; if_then_bb132
00000268 AEF8                 715  	movw ax, sp
0000026A 040B00               716  	addw ax, #0x000B
0000026D B804                 717  	movw [sp+0x04], ax
0000026F                      718  	;***      224 : 			uint8_t _b[5] = { 0, 1, 0, 0, 1 };
0000026F                      719  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 224
0000026F 340500               720  	movw de, #0x0005
00000272 320000               721  	movw bc, #SMRLW(.STR@1685)
00000275 FC000000             722  	call !!_memcpy
00000279 A804                 723  	movw ax, [sp+0x04]
0000027B 12                   724  	movw bc, ax
0000027C                      725  	;***      225 : 			sendR485_7byte(0xff, 1, _b);
0000027C                      726  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 225
0000027C 3001FF               727  	movw ax, #0xFF01
0000027F FC000000             728  	call !!_sendR485_7byte
00000283                      729  	;***      226 : 			g_commnunication_flag.rs485_get_valve_gesture_flag = 0;
00000283                      730  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 226
00000283 F50000               731  	clrb !LOWW(_g_commnunication_flag+0x0000D)
00000286                      732  .BB@LABEL@3_30:	; if_break_bb136
00000286 8801                 733  	mov a, [sp+0x01]
00000288                      734  	;***      227 : 		}
00000288                      735  	;***      228 : 
00000288                      736  	;***      229 : 		if (vpcb != 0) {
00000288                      737  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 229
00000288 D1                   738  	cmp0 a
00000289 DF00                 739  	bnz $.BB@LABEL@3_32
0000028B                      740  .BB@LABEL@3_31:	; if_else_bb160
0000028B                      741  	;***      230 : 			if (ns_delay_ms(&g_Tick.tickValvePCB, 5000)) {
0000028B                      742  	;***      231 : 				vpcb_v = vpcb_v == 1 ? 0 : 1;
0000028B                      743  	;***      232 : 				vpcb = 0;
0000028B                      744  	;***      233 : 			}
0000028B                      745  	;***      234 : 		} else {
0000028B                      746  	;***      235 : 			g_Tick.tickValvePCB = g_systemTime;
0000028B                      747  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 235
0000028B AF0000               748  	movw ax, !LOWW(_g_systemTime+0x00002)
0000028E BF0000               749  	movw !LOWW(_g_Tick+0x00056), ax
00000291 AF0000               750  	movw ax, !LOWW(_g_systemTime)
00000294 BF0000               751  	movw !LOWW(_g_Tick+0x00054), ax
00000297 EF00                 752  	br $.BB@LABEL@3_35
00000299                      753  .BB@LABEL@3_32:	; if_then_bb142
00000299                      754  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
00000299 F6                   755  	clrw ax
0000029A 14                   756  	movw de, ax
0000029B 328813               757  	movw bc, #0x1388
0000029E 300000               758  	movw ax, #LOWW(_g_Tick+0x00054)
000002A1 FC000000             759  	call !!_ns_delay_ms
000002A5 F7                   760  	clrw bc
000002A6 43                   761  	cmpw ax, bc
000002A7 DD00                 762  	bz $.BB@LABEL@3_35
000002A9                      763  .BB@LABEL@3_33:	; if_then_bb147
000002A9 8802                 764  	mov a, [sp+0x02]
000002AB                      765  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 231
000002AB 91                   766  	dec a
000002AC F1                   767  	clrb a
000002AD 9801                 768  	mov [sp+0x01], a
000002AF DF00                 769  	bnz $.BB@LABEL@3_37
000002B1                      770  .BB@LABEL@3_34:	; if_then_bb147.if_break_bb162_crit_edge
000002B1 9802                 771  	mov [sp+0x02], a
000002B3                      772  .BB@LABEL@3_35:	; if_break_bb162
000002B3                      773  	;***      236 : 		}
000002B3                      774  	;***      237 : 
000002B3                      775  	;***      238 : 		//RS485 fault check
000002B3                      776  	;***      239 : 		if (g_commnunication_flag.rs485_fault == 1) {
000002B3                      777  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 239
000002B3 40000001             778  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x01
000002B7 DF00                 779  	bnz $.BB@LABEL@3_38
000002B9                      780  .BB@LABEL@3_36:	; if_then_bb168
000002B9                      781  	;***      240 : 			R_UART3_Stop();
000002B9                      782  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 240
000002B9 FC000000             783  	call !!_R_UART3_Stop
000002BD                      784  	;***      241 : 			g_commnunication_flag.rs485_fault++;
000002BD                      785  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 241
000002BD A00000               786  	inc !LOWW(_g_commnunication_flag+0x0000E)
000002C0                      787  	;***      242 : 			g_Tick.tickRS485 = g_systemTime;
000002C0                      788  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 242
000002C0 AF0000               789  	movw ax, !LOWW(_g_systemTime+0x00002)
000002C3 BF0000               790  	movw !LOWW(_g_Tick+0x0005A), ax
000002C6 AF0000               791  	movw ax, !LOWW(_g_systemTime)
000002C9 BF0000               792  	movw !LOWW(_g_Tick+0x00058), ax
000002CC EF00                 793  	br $.BB@LABEL@3_41
000002CE                      794  .BB@LABEL@3_37:	; bb153
000002CE E1                   795  	oneb a
000002CF EF00                 796  	br $.BB@LABEL@3_34
000002D1                      797  .BB@LABEL@3_38:	; if_else_bb172
000002D1                      798  	;***      243 : 		} else if (g_commnunication_flag.rs485_fault == 2) {
000002D1                      799  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 243
000002D1 40000002             800  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x02
000002D5 DF00                 801  	bnz $.BB@LABEL@3_41
000002D7                      802  .BB@LABEL@3_39:	; if_then_bb178
000002D7                      803  	;***      244 : 			if (ns_delay_ms(&g_Tick.tickRS485, 500)) {
000002D7                      804  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 244
000002D7 F6                   805  	clrw ax
000002D8 14                   806  	movw de, ax
000002D9 32F401               807  	movw bc, #0x01F4
000002DC 300000               808  	movw ax, #LOWW(_g_Tick+0x00058)
000002DF FC000000             809  	call !!_ns_delay_ms
000002E3 F7                   810  	clrw bc
000002E4 43                   811  	cmpw ax, bc
000002E5 DD00                 812  	bz $.BB@LABEL@3_41
000002E7                      813  .BB@LABEL@3_40:	; if_then_bb183
000002E7                      814  	;***      245 : 				R_UART3_Start();
000002E7                      815  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 245
000002E7 FC000000             816  	call !!_R_UART3_Start
000002EB                      817  	;***      246 : 				R_UART3_Receive(g_uart3_rx_data, 7);
000002EB                      818  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 246
000002EB 320700               819  	movw bc, #0x0007
000002EE 300000               820  	movw ax, #LOWW(_g_uart3_rx_data)
000002F1 FC000000             821  	call !!_R_UART3_Receive
000002F5                      822  	;***      247 : 				g_commnunication_flag.rs485_fault = 0;
000002F5                      823  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
000002F5 F50000               824  	clrb !LOWW(_g_commnunication_flag+0x0000E)
000002F8                      825  .BB@LABEL@3_41:	; if_break_bb187
000002F8                      826  	;***      248 : 			}
000002F8                      827  	;***      249 : 		}
000002F8                      828  	;***      250 : //--------------------------------- Testing code---------------------------------------------------------------
000002F8                      829  	;***      251 : 
000002F8                      830  	;***      252 : 		flow_p = I_FLOW_PLUSE_PIN == 1 ? 1 : 0;
000002F8                      831  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
000002F8 8D00                 832  	mov a, 0xFFF00
000002FA 719C                 833  	mov1 CY, a.1
000002FC E1                   834  	oneb a
000002FD 61C8                 835  	skc
000002FF                      836  .BB@LABEL@3_42:	; bb195
000002FF F1                   837  	clrb a
00000300                      838  .BB@LABEL@3_43:	; bb197
00000300 9F0000               839  	mov !LOWW(_flow_p), a
00000303                      840  	;***      253 : 		if (ns_delay_ms(&g_Tick.tickCustom[1], 60000)) {
00000303                      841  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 253
00000303 F6                   842  	clrw ax
00000304 14                   843  	movw de, ax
00000305 3260EA               844  	movw bc, #0xEA60
00000308 300000               845  	movw ax, #LOWW(_g_Tick+0x0009C)
0000030B FC000000             846  	call !!_ns_delay_ms
0000030F                      847  	;***      254 : 
0000030F                      848  	;***      255 : 		}
0000030F                      849  	;***      256 : 
0000030F                      850  	;***      257 : 		if (ns_delay_ms(&g_Tick.tick1s, 1000)) {
0000030F                      851  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 257
0000030F F6                   852  	clrw ax
00000310 14                   853  	movw de, ax
00000311 32E803               854  	movw bc, #0x03E8
00000314 300000               855  	movw ax, #LOWW(_g_Tick+0x00004)
00000317 FC000000             856  	call !!_ns_delay_ms
0000031B F7                   857  	clrw bc
0000031C 43                   858  	cmpw ax, bc
0000031D DD00                 859  	bz $.BB@LABEL@3_47
0000031F                      860  .BB@LABEL@3_44:	; if_then_bb211
0000031F                      861  	;***      258 : 
0000031F                      862  	;***      259 : 			led_st = led_st == 0 ? 0xff : 0x00;
0000031F                      863  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 259
0000031F D50000               864  	cmp0 !LOWW(_led_st)
00000322 51FF                 865  	mov a, #0xFF
00000324 61E8                 866  	skz
00000326                      867  .BB@LABEL@3_45:	; bb217
00000326 F1                   868  	clrb a
00000327                      869  .BB@LABEL@3_46:	; bb219
00000327 9F0000               870  	mov !LOWW(_led_st), a
0000032A                      871  	;***      260 : 			uint8_t state = g_uart2_sendend;
0000032A                      872  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 260
0000032A 8F0000               873  	mov a, !LOWW(_g_uart2_sendend)
0000032D                      874  	;***      261 : 			g_crc[6] = crc8_4((uint8_t*) &g_timerSetting,
0000032D                      875  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 261
0000032D 5294                 876  	mov c, #0x94
0000032F 300000               877  	movw ax, #LOWW(_g_timerSetting)
00000332 FC000000             878  	call !!_crc8_4
00000336 9F0000               879  	mov !LOWW(_g_crc+0x00006), a
00000339                      880  	;***      262 : 					sizeof(struct Timer_Setting_s) - 2);
00000339                      881  	;***      263 : 			g_crc[7] = crc8_1((uint8_t*) &g_timerSetting,
00000339                      882  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 263
00000339 5294                 883  	mov c, #0x94
0000033B 300000               884  	movw ax, #LOWW(_g_timerSetting)
0000033E FC000000             885  	call !!_crc8_1
00000342 9F0000               886  	mov !LOWW(_g_crc+0x00007), a
00000345                      887  .BB@LABEL@3_47:	; if_break_bb234
00000345                      888  	;***      264 : 					sizeof(struct Timer_Setting_s) - 2);
00000345                      889  	;***      265 : //			}
00000345                      890  	;***      266 : 			if (led_st == 0x00) {
00000345                      891  	;***      267 : 
00000345                      892  	;***      268 : 			} else {
00000345                      893  	;***      269 : 
00000345                      894  	;***      270 : 			}
00000345                      895  	;***      271 : 		}
00000345                      896  	;***      272 : 
00000345                      897  	;***      273 : //--------------------------------End testing code---------------------------------------------------------
00000345                      898  	;***      274 : 		if ((g_machine_state.mode == WATER_WASHING)
00000345                      899  	;***      275 : 				|| (g_machine_state.mode == INDIE)) {
00000345                      900  	;***      276 : 
00000345                      901  	;***      277 : 		}
00000345                      902  	;***      278 : 		R_WDT_Restart();
00000345                      903  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 278
00000345 FC000000             904  	call !!_R_WDT_Restart
00000349 EE0000               905  	br $!.BB@LABEL@3_12
0000034C                      906  _R_MAIN_UserInit:
0000034C                      907  	.STACK _R_MAIN_UserInit = 4
0000034C                      908  	;***      279 : 	}
0000034C                      909  	;***      280 : 	/* End user code. Do not edit comment generated here */
0000034C                      910  	;***      281 : }
0000034C                      911  	;***      282 : 
0000034C                      912  	;***      283 : /***********************************************************************************************************************
0000034C                      913  	;***      284 :  * Function Name: R_MAIN_UserInit
0000034C                      914  	;***      285 :  * Description  : This function adds user code before implementing main function.
0000034C                      915  	;***      286 :  * Arguments    : None
0000034C                      916  	;***      287 :  * Return Value : None
0000034C                      917  	;***      288 :  ***********************************************************************************************************************/
0000034C                      918  	;***      289 : void R_MAIN_UserInit(void) {
0000034C                      919  	;***      290 : 	/* Start user code. Do not edit comment generated here */
0000034C                      920  	;***      291 : 	EI();
0000034C                      921  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 291
0000034C 717AFA               922  	ei
0000034F                      923  	;***      292 : 	R_TAU0_Create();
0000034F                      924  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 292
0000034F FC000000             925  	call !!_R_TAU0_Create
00000353                      926  	;***      293 : 	R_SAU0_Create();
00000353                      927  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 293
00000353 FC000000             928  	call !!_R_SAU0_Create
00000357                      929  	;***      294 : 	R_SAU1_Create();
00000357                      930  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 294
00000357 FC000000             931  	call !!_R_SAU1_Create
0000035B                      932  	;***      295 : 	R_UART1_Create();
0000035B                      933  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 295
0000035B FC000000             934  	call !!_R_UART1_Create
0000035F                      935  	;***      296 : 	R_UART2_Create();
0000035F                      936  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 296
0000035F FC000000             937  	call !!_R_UART2_Create
00000363                      938  	;***      297 : 	R_UART3_Create();
00000363                      939  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 297
00000363 FC000000             940  	call !!_R_UART3_Create
00000367                      941  	;***      298 : 	R_RTC_Create();
00000367                      942  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 298
00000367 FC000000             943  	call !!_R_RTC_Create
0000036B                      944  	;***      299 : 	R_PORT_Create_UserInit();
0000036B                      945  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 299
0000036B FC000000             946  	call !!_R_PORT_Create_UserInit
0000036F                      947  	;***      300 : 	R_CSI01_Create();
0000036F                      948  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 300
0000036F FC000000             949  	call !!_R_CSI01_Create
00000373                      950  	;***      301 : 	R_CSI00_Create();
00000373                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 301
00000373 FC000000             952  	call !!_R_CSI00_Create
00000377                      953  	;***      302 : 
00000377                      954  	;***      303 : 	R_TAU0_Channel0_Start();
00000377                      955  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 303
00000377 FC000000             956  	call !!_R_TAU0_Channel0_Start
0000037B                      957  	;***      304 : 	R_UART3_Start();
0000037B                      958  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 304
0000037B FC000000             959  	call !!_R_UART3_Start
0000037F                      960  	;***      305 : 	R_UART1_Start();
0000037F                      961  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 305
0000037F FC000000             962  	call !!_R_UART1_Start
00000383                      963  	;***      306 : 	R_UART2_Start();
00000383                      964  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 306
00000383 FC000000             965  	call !!_R_UART2_Start
00000387                      966  	;***      307 : 	R_CSI00_Start();
00000387                      967  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 307
00000387 FC000000             968  	call !!_R_CSI00_Start
0000038B                      969  	;***      308 : //    R_CSI01_Start();
0000038B                      970  	;***      309 : 
0000038B                      971  	;***      310 : 	R_ADC_Create();
0000038B                      972  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 310
0000038B FC000000             973  	call !!_R_ADC_Create
0000038F                      974  	;***      311 : 	R_ADC_Set_OperationOn();
0000038F                      975  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 311
0000038F FC000000             976  	call !!_R_ADC_Set_OperationOn
00000393                      977  	;***      312 : 	R_ADC_Start();
00000393                      978  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 312
00000393 FC000000             979  	call !!_R_ADC_Start
00000397                      980  	;***      313 : 
00000397                      981  	;***      314 : 	R_DAC_Create();
00000397                      982  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 314
00000397 FC000000             983  	call !!_R_DAC_Create
0000039B                      984  	;***      315 : //	CVCC_Current_Set(0x0);
0000039B                      985  	;***      316 : //	Salt_Analog_Set(0x0);
0000039B                      986  	;***      317 : 	R_DAC0_Start();
0000039B                      987  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 317
0000039B FC000000             988  	call !!_R_DAC0_Start
0000039F                      989  	;***      318 : 	R_DAC1_Start();
0000039F                      990  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 318
0000039F EC000000             991  	br !!_R_DAC1_Start
000003A3                      992  	;***      319 : 	/* End user code. Do not edit comment generated here */
000003A3                      993  	;***      320 : }
000003A3                      994  	;***      321 : 
000003A3                      995  	;***      322 : /* Start user code for adding. Do not edit comment generated here */
000003A3                      996  	;***      323 : /* End user code. Do not edit comment generated here */
00000000                      997  	.SECTION .data,DATA
00000000                      998  	.ALIGN 2
00000000                      999  _g_adc_ch:
00000000 0000                1000  	.DS (2)
00000002                     1001  _led_st:
00000002 FF                  1002  	.DB 0xFF
00000003                     1003  _send_data:
00000003 23                  1004  	.DB 0x23,0xAB
00000004 AB              
00000005                     1005  _this_size:
00000005 12                  1006  	.DB 0x12
00000006                     1007  _this_size_2:
00000006 12                  1008  	.DB 0x12
00000007                     1009  _send_buf:
00000007 08                  1010  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                     1011  	.ALIGN 2
0000000E                     1012  _data_crc:
0000000E 24770000            1013  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                     1014  _dac_out:
00000016 FF                  1015  	.DB 0xFF,0xFF
00000017 FF              
00000000                     1016  	.SECTION .bss,BSS
00000000                     1017  _g_e_status:
00000000                     1018  	.DS (1)
00000001 00                  1019  	.ALIGN 2
00000002                     1020  _ret_number_setting:
00000002                     1021  	.DS (42)
0000002C                     1022  _flow_p:
0000002C                     1023  	.DS (1)
0000002D                     1024  _salt_h_p:
0000002D                     1025  	.DS (1)
0000002E                     1026  _g_eeprom_wren:
0000002E                     1027  	.DS (1)
0000002F                     1028  _receive_data:
0000002F                     1029  	.DS (2)
00000031 00                  1030  	.ALIGN 2
00000032                     1031  _receive_setting:
00000032                     1032  	.DS (42)
0000005C                     1033  _set:
0000005C                     1034  	.DS (1)
0000005D 00                  1035  	.ALIGN 2
0000005E                     1036  _rx_data:
0000005E                     1037  	.DS (12)
0000006A                     1038  	.ALIGN 2
0000006A                     1039  _data_f:
0000006A                     1040  	.DS (4)
0000006E                     1041  	.ALIGN 2
0000006E                     1042  _data_f_test:
0000006E                     1043  	.DS (4)
00000072                     1044  	.ALIGN 2
00000072                     1045  _g_control_buffer_f:
00000072                     1046  	.DS (6)
00000078                     1047  	.ALIGN 2
00000078                     1048  _g_control_buffer_u32:
00000078                     1049  	.DS (6)
0000007E                     1050  _handsensor_status:
0000007E                     1051  	.DS (1)
0000007F                     1052  _g_handsensor_status:
0000007F                     1053  	.DS (2)
00000081                     1054  _g_crc:
00000081                     1055  	.DS (8)
00000089 00                  1056  	.ALIGN 2
0000008A                     1057  _g_crc_32:
0000008A                     1058  	.DS (32)
000000AA                     1059  _rx_count:
000000AA                     1060  	.DS (1)
00000000                     1061  	.SECTION .const,CONST
00000000                     1062  .STR@1:
00000000 00000000            1063  	.DS (4)
00000004 01                  1064  	.DB 0x01
00000005                     1065  .STR@1685:
00000005 00                  1066  	.DS (1)
00000006 01                  1067  	.DB 0x01
00000007 0000                1068  	.DS (2)
00000009 01                  1069  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               931 (000003A3) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 171 (000000AB) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl000\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

