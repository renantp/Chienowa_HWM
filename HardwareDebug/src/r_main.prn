RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Tue Nov 23 09:22:34 2021
00000000                       19  
00000000                       20  	.EXTERN _g_rtc
00000000                       21  	.EXTERN _g_timerSetting
00000000                       22  	.EXTERN _g_csi_rev_end
00000000                       23  	.EXTERN _g_uart2_send
00000000                       24  	.EXTERN _g_uart2_fault
00000000                       25  	.EXTERN _g_rx_data
00000000                       26  	.PUBLIC _g_error
00000000                       27  	.PUBLIC _g_adc_ch
00000000                       28  	.PUBLIC __stamp
00000000                       29  	.PUBLIC _g_e_status
00000000                       30  	.PUBLIC _led_st
00000000                       31  	.PUBLIC _flow_p
00000000                       32  	.PUBLIC _salt_h_p
00000000                       33  	.PUBLIC _e_send
00000000                       34  	.PUBLIC _e_data
00000000                       35  	.PUBLIC _g_eeprom_wren
00000000                       36  	.PUBLIC _send_data
00000000                       37  	.PUBLIC _receive_data
00000000                       38  	.PUBLIC _receive_setting
00000000                       39  	.PUBLIC _set
00000000                       40  	.PUBLIC _rx_data
00000000                       41  	.PUBLIC _data_f
00000000                       42  	.PUBLIC _data_f_test
00000000                       43  	.PUBLIC _g_control_buffer
00000000                       44  	.PUBLIC _main
00000000                       45  	.PUBLIC _R_MAIN_UserInit
00000000                       46  	.EXTERN _EEPROM_Init
00000000                       47  	.EXTERN _setting_default
00000000                       48  	.EXTERN _R_RTC_Set_CounterValue
00000000                       49  	.EXTERN _R_RTC_Start
00000000                       50  	.EXTERN _R_UART2_Receive
00000000                       51  	.EXTERN _ns_delay_ms
00000000                       52  	.EXTERN _R_UART2_Stop
00000000                       53  	.EXTERN _delay_ms
00000000                       54  	.EXTERN _R_UART2_Start
00000000                       55  	.EXTERN _R_UART2_Send
00000000                       56  	.EXTERN _R_WDT_Restart
00000000                       57  	.EXTERN _R_TAU0_Create
00000000                       58  	.EXTERN _R_SAU0_Create
00000000                       59  	.EXTERN _R_SAU1_Create
00000000                       60  	.EXTERN _R_UART1_Create
00000000                       61  	.EXTERN _R_UART2_Create
00000000                       62  	.EXTERN _R_UART3_Create
00000000                       63  	.EXTERN _R_RTC_Create
00000000                       64  	.EXTERN _R_PORT_Create_UserInit
00000000                       65  	.EXTERN _R_CSI01_Create
00000000                       66  	.EXTERN _R_CSI00_Create
00000000                       67  	.EXTERN _R_TAU0_Channel0_Start
00000000                       68  	.EXTERN _R_UART3_Start
00000000                       69  	.EXTERN _R_UART1_Start
00000000                       70  	.EXTERN _R_CSI00_Start
00000000                       71  	.EXTERN _R_ADC_Create
00000000                       72  	.EXTERN _R_ADC_Set_OperationOn
00000000                       73  	.EXTERN _R_ADC_Start
00000000                       74  
00000000                       75  	.SECTION .textf,TEXTF
00000000                       76  _main:
00000000                       77  	.STACK _main = 14
00000000                       78  	;***        1 : /***********************************************************************************************************************
00000000                       79  	;***        2 : * DISCLAIMER
00000000                       80  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                       81  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                       82  	;***        5 : * applicable laws, including copyright laws. 
00000000                       83  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                       84  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                       85  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                       86  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                       87  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                       88  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                       89  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                       90  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                       91  	;***       14 : * following link:
00000000                       92  	;***       15 : * http://www.renesas.com/disclaimer
00000000                       93  	;***       16 : *
00000000                       94  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                       95  	;***       18 : ***********************************************************************************************************************/
00000000                       96  	;***       19 : 
00000000                       97  	;***       20 : /***********************************************************************************************************************
00000000                       98  	;***       21 : * File Name    : r_main.c
00000000                       99  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      100  	;***       23 : * Device(s)    : R5F104ML
00000000                      101  	;***       24 : * Tool-Chain   : CCRL
00000000                      102  	;***       25 : * Description  : This file implements main function.
00000000                      103  	;***       26 : * Creation Date: 17/11/2021
00000000                      104  	;***       27 : ***********************************************************************************************************************/
00000000                      105  	;***       28 : 
00000000                      106  	;***       29 : /***********************************************************************************************************************
00000000                      107  	;***       30 : Includes
00000000                      108  	;***       31 : ***********************************************************************************************************************/
00000000                      109  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      110  	;***       33 : #include "r_cg_cgc.h"
00000000                      111  	;***       34 : #include "r_cg_port.h"
00000000                      112  	;***       35 : #include "r_cg_serial.h"
00000000                      113  	;***       36 : #include "r_cg_adc.h"
00000000                      114  	;***       37 : #include "r_cg_dac.h"
00000000                      115  	;***       38 : #include "r_cg_timer.h"
00000000                      116  	;***       39 : #include "r_cg_wdt.h"
00000000                      117  	;***       40 : #include "r_cg_rtc.h"
00000000                      118  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      119  	;***       42 : #include "EEPROM.h"
00000000                      120  	;***       43 : #include "usr_timer.h"
00000000                      121  	;***       44 : #include "usr_setting_sheet.h"
00000000                      122  	;***       45 : /* End user code. Do not edit comment generated here */
00000000                      123  	;***       46 : #include "r_cg_userdefine.h"
00000000                      124  	;***       47 : 
00000000                      125  	;***       48 : /***********************************************************************************************************************
00000000                      126  	;***       49 : Pragma directive
00000000                      127  	;***       50 : ***********************************************************************************************************************/
00000000                      128  	;***       51 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      129  	;***       52 : /* End user code. Do not edit comment generated here */
00000000                      130  	;***       53 : 
00000000                      131  	;***       54 : /***********************************************************************************************************************
00000000                      132  	;***       55 : Global variables and functions
00000000                      133  	;***       56 : ***********************************************************************************************************************/
00000000                      134  	;***       57 : /* Start user code for global. Do not edit comment generated here */
00000000                      135  	;***       58 : volatile int g_error = 0;
00000000                      136  	;***       59 : volatile int g_adc_ch = 0;
00000000                      137  	;***       60 : uint32_t _stamp[3];
00000000                      138  	;***       61 : union EEPROM_status_u g_e_status;
00000000                      139  	;***       62 : uint8_t led_st = 0xff;
00000000                      140  	;***       63 : uint8_t flow_p, salt_h_p;
00000000                      141  	;***       64 : uint8_t e_send[12] = {EEPROM_RDSR, 0b10100101, EEPROM_WRSR, 0x00, EEPROM_WRSR, 0x02, EEPROM_WREN, EEPROM_WRDI};
00000000                      142  	;***       65 : uint8_t e_data[12] = {0,0};
00000000                      143  	;***       66 : uint8_t g_eeprom_wren;
00000000                      144  	;***       67 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      145  	;***       68 : uint8_t receive_data[2];
00000000                      146  	;***       69 : struct Number_Setting_s receive_setting;
00000000                      147  	;***       70 : union EEPROM_status_u set;
00000000                      148  	;***       71 : uint32_t rx_data[3];
00000000                      149  	;***       72 : float data_f;
00000000                      150  	;***       73 : union byte_to_float data_f_test;
00000000                      151  	;***       74 : struct UART_Buffer_s g_control_buffer;
00000000                      152  	;***       75 : /* End user code. Do not edit comment generated here */
00000000                      153  	;***       76 : void R_MAIN_UserInit(void);
00000000                      154  	;***       77 : 
00000000                      155  	;***       78 : /***********************************************************************************************************************
00000000                      156  	;***       79 : * Function Name: main
00000000                      157  	;***       80 : * Description  : This function implements main function.
00000000                      158  	;***       81 : * Arguments    : None
00000000                      159  	;***       82 : * Return Value : None
00000000                      160  	;***       83 : ***********************************************************************************************************************/
00000000                      161  	;***       84 : void main(void)
00000000                      162  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 84
00000000 C7                   163  	push hl
00000001                      164  	;***       85 : {
00000001                      165  	;***       86 :     R_MAIN_UserInit();
00000001                      166  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 86
00000001 FE0000               167  	call $!_R_MAIN_UserInit
00000004                      168  	;***       87 :     /* Start user code. Do not edit comment generated here */
00000004                      169  	;***       88 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
00000004                      170  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000004 F2                   171  	clrb c
00000005 300000               172  	movw ax, #LOWW(_g_csi_rev_end)
00000008 FC000000             173  	call !!_EEPROM_Init
0000000C                      174  	;***       89 : //    O_RS485_MODE_PIN = 1U;
0000000C                      175  	;***       90 : //    EEPROM_SPI_WriteBuffer(e_send, 0x000f, 4);
0000000C                      176  	;***       91 : //    delay_ms(1000);
0000000C                      177  	;***       92 : //    EEPROM_SPI_ReadBuffer(e_data, 0x000f, 3);
0000000C                      178  	;***       93 : //    R_UART0_Send("Hello \r\n", sizeof("Hello \r\n") - 1);
0000000C                      179  	;***       94 : //    csi01_status = STATUS_COMPLETE;
0000000C                      180  	;***       95 :     //Power ON
0000000C                      181  	;***       96 :     setting_default();
0000000C                      182  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 96
0000000C FC000000             183  	call !!_setting_default
00000010                      184  	;***       97 :     g_rtc.hour = 10;
00000010                      185  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
00000010 CF00000A             186  	mov !LOWW(_g_rtc+0x00002), #0x0A
00000014                      187  	;***       98 :     g_rtc.sec = 2;
00000014                      188  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000014 CF000002             189  	mov !LOWW(_g_rtc), #0x02
00000018                      190  	;***       99 :     R_RTC_Set_CounterValue(g_rtc);
00000018                      191  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 99
00000018 2008                 192  	subw sp, #0x08
0000001A AEF8                 193  	movw ax, sp
0000001C 340700               194  	movw de, #0x0007
0000001F 320000               195  	movw bc, #LOWW(_g_rtc)
00000022 FC000000             196  	call !!_memcpy
00000026 FC000000             197  	call !!_R_RTC_Set_CounterValue
0000002A 1008                 198  	addw sp, #0x08
0000002C                      199  	;***      100 :     R_RTC_Start();
0000002C                      200  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
0000002C FC000000             201  	call !!_R_RTC_Start
00000030                      202  	;***      101 :     R_UART2_Receive(g_rx_data, sizeof(struct UART_Buffer_s));
00000030                      203  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000030 320600               204  	movw bc, #0x0006
00000033 300000               205  	movw ax, #LOWW(_g_rx_data)
00000036 FC000000             206  	call !!_R_UART2_Receive
0000003A                      207  .BB@LABEL@1_1:	; bb70
0000003A                      208  	;***      102 : //    EEPROM_PROTECT_EN();
0000003A                      209  	;***      103 :     while (1U)
0000003A                      210  	;***      104 :     {
0000003A                      211  	;***      105 : //--------------------------------- Testing code---------------------------------------------------------------
0000003A                      212  	;***      106 :     	if(ns_delay_ms(&_stamp[0], 200)){
0000003A                      213  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 106
0000003A F6                   214  	clrw ax
0000003B 14                   215  	movw de, ax
0000003C 32C800               216  	movw bc, #0x00C8
0000003F 300000               217  	movw ax, #LOWW(__stamp)
00000042 FC000000             218  	call !!_ns_delay_ms
00000046                      219  	;***      107 : ////    		P6_bit.no3 = ~P6_bit.no3;
00000046                      220  	;***      108 : //    		R_UART3_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000046                      221  	;***      109 : //    		R_UART1_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000046                      222  	;***      110 : //    		g_e_status.raw = rEE_Status();
00000046                      223  	;***      111 :     	}
00000046                      224  	;***      112 :     	if(g_uart2_fault == 1){
00000046                      225  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 112
00000046 40000001             226  	cmp !LOWW(_g_uart2_fault), #0x01
0000004A DF00                 227  	bnz $.BB@LABEL@1_3
0000004C                      228  .BB@LABEL@1_2:	; if_then_bb11
0000004C                      229  	;***      113 :     		R_UART2_Stop();
0000004C                      230  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 113
0000004C FC000000             231  	call !!_R_UART2_Stop
00000050                      232  	;***      114 :     		delay_ms(10);
00000050                      233  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 114
00000050 F7                   234  	clrw bc
00000051 300A00               235  	movw ax, #0x000A
00000054 FC000000             236  	call !!_delay_ms
00000058                      237  	;***      115 :     		R_UART2_Start();
00000058                      238  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 115
00000058 FC000000             239  	call !!_R_UART2_Start
0000005C                      240  	;***      116 :     		g_uart2_fault = 0;
0000005C                      241  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 116
0000005C F50000               242  	clrb !LOWW(_g_uart2_fault)
0000005F                      243  .BB@LABEL@1_3:	; if_break_bb12
0000005F                      244  	;***      117 :     	}
0000005F                      245  	;***      118 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
0000005F                      246  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 118
0000005F 8D00                 247  	mov a, 0xFFF00
00000061 719C                 248  	mov1 CY, a.1
00000063 E1                   249  	oneb a
00000064 61C8                 250  	skc
00000066                      251  .BB@LABEL@1_4:	; bb20
00000066 F1                   252  	clrb a
00000067                      253  .BB@LABEL@1_5:	; bb21
00000067 9F0000               254  	mov !LOWW(_flow_p), a
0000006A                      255  	;***      119 :     	if(ns_delay_ms(&_stamp[1], 1000)){
0000006A                      256  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 119
0000006A F6                   257  	clrw ax
0000006B 14                   258  	movw de, ax
0000006C 32E803               259  	movw bc, #0x03E8
0000006F 300000               260  	movw ax, #LOWW(__stamp+0x00004)
00000072 FC000000             261  	call !!_ns_delay_ms
00000076 F7                   262  	clrw bc
00000077 43                   263  	cmpw ax, bc
00000078 DD00                 264  	bz $.BB@LABEL@1_11
0000007A                      265  .BB@LABEL@1_6:	; if_then_bb29
0000007A                      266  	;***      120 :     		O_CTRL_OUT_PIN = led_st&0x01;
0000007A                      267  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 120
0000007A 8F0000               268  	mov a, !LOWW(_led_st)
0000007D 70                   269  	mov x, a
0000007E 718C                 270  	mov1 CY, a.0
00000080 8D03                 271  	mov a, 0xFFF03
00000082 7199                 272  	mov1 a.1, CY
00000084 9D03                 273  	mov 0xFFF03, a
00000086                      274  	;***      121 :     		led_st = led_st == 0?0xff:0x00;
00000086                      275  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 121
00000086 D0                   276  	cmp0 x
00000087 51FF                 277  	mov a, #0xFF
00000089 61E8                 278  	skz
0000008B                      279  .BB@LABEL@1_7:	; bb44
0000008B F1                   280  	clrb a
0000008C                      281  .BB@LABEL@1_8:	; bb46
0000008C 9F0000               282  	mov !LOWW(_led_st), a
0000008F                      283  	;***      122 : //    		uint32_t buf[3] = {H_ALARM, 0x11100100, 0xffffffff};
0000008F                      284  	;***      123 :     	    uint8_t state = g_uart2_send;
0000008F                      285  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 123
0000008F 8F0000               286  	mov a, !LOWW(_g_uart2_send)
00000092 9800                 287  	mov [sp+0x00], a
00000094                      288  	;***      124 :     	    R_UART2_Send((uint8_t *)&g_timerSetting, sizeof(g_timerSetting));
00000094                      289  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 124
00000094 5224                 290  	mov c, #0x24
00000096 300000               291  	movw ax, #LOWW(_g_timerSetting)
00000099 FC000000             292  	call !!_R_UART2_Send
0000009D                      293  .BB@LABEL@1_9:	; bb53
0000009D 8800                 294  	mov a, [sp+0x00]
0000009F                      295  	;***      125 : 			while(state == g_uart2_send){
0000009F                      296  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 125
0000009F 4F0000               297  	cmp a, !LOWW(_g_uart2_send)
000000A2 DF00                 298  	bnz $.BB@LABEL@1_11
000000A4                      299  .BB@LABEL@1_10:	; bb52
000000A4                      300  	;***      126 : 				R_WDT_Restart();
000000A4                      301  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 126
000000A4 FC000000             302  	call !!_R_WDT_Restart
000000A8 EF00                 303  	br $.BB@LABEL@1_9
000000AA                      304  .BB@LABEL@1_11:	; if_break_bb69
000000AA                      305  	;***      127 : 			}
000000AA                      306  	;***      128 : //			g_rx_data[0]= g_rx_data[1]=g_rx_data[2]= 0x00;
000000AA                      307  	;***      129 : //			g_control_buffer.head = H_ALARM;
000000AA                      308  	;***      130 : //			g_control_buffer.set_number = 4;
000000AA                      309  	;***      131 : //			g_control_buffer.set_value = 1;
000000AA                      310  	;***      132 : //			R_UART2_Send((uint8_t *)&g_control_buffer, sizeof(struct UART_Buffer_s));
000000AA                      311  	;***      133 : //			while(state == g_uart2_send);
000000AA                      312  	;***      134 : //			sendToRasPi(H_ALARM, OVER_CURRENT, 3);
000000AA                      313  	;***      135 : //			R_UART2_Receive((uint8_t *)rx_data, 12);
000000AA                      314  	;***      136 : //			data_f = (float)rx_data[0];
000000AA                      315  	;***      137 : ////			data_f_test.refined.b[0] = rx_data[0]>>24;
000000AA                      316  	;***      138 : ////			data_f_test.refined.b[1] = rx_data[0]>>16;
000000AA                      317  	;***      139 : ////			data_f_test.refined.b[2] = rx_data[0]>>8;
000000AA                      318  	;***      140 : ////			data_f_test.refined.b[3] = rx_data[0];
000000AA                      319  	;***      141 : //			data_f_test.refined.b[0] = rx_data[0];
000000AA                      320  	;***      142 : //			data_f_test.refined.b[1] = rx_data[0]>>8;
000000AA                      321  	;***      143 : //			data_f_test.refined.b[2] = rx_data[0]>>16;
000000AA                      322  	;***      144 : //			data_f_test.refined.b[3] = rx_data[0]>>24;
000000AA                      323  	;***      145 :     		if(led_st == 0x00){
000000AA                      324  	;***      146 :     		}else{
000000AA                      325  	;***      147 :     		}
000000AA                      326  	;***      148 :     	}
000000AA                      327  	;***      149 : //--------------------------------End testing code---------------------------------------------------------
000000AA                      328  	;***      150 : //    	main_20211111();
000000AA                      329  	;***      151 :     	R_WDT_Restart();
000000AA                      330  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
000000AA FC000000             331  	call !!_R_WDT_Restart
000000AE EF00                 332  	br $.BB@LABEL@1_1
000000B0                      333  _R_MAIN_UserInit:
000000B0                      334  	.STACK _R_MAIN_UserInit = 4
000000B0                      335  	;***      152 :     }
000000B0                      336  	;***      153 :     /* End user code. Do not edit comment generated here */
000000B0                      337  	;***      154 : }
000000B0                      338  	;***      155 : 
000000B0                      339  	;***      156 : /***********************************************************************************************************************
000000B0                      340  	;***      157 : * Function Name: R_MAIN_UserInit
000000B0                      341  	;***      158 : * Description  : This function adds user code before implementing main function.
000000B0                      342  	;***      159 : * Arguments    : None
000000B0                      343  	;***      160 : * Return Value : None
000000B0                      344  	;***      161 : ***********************************************************************************************************************/
000000B0                      345  	;***      162 : void R_MAIN_UserInit(void)
000000B0                      346  	;***      163 : {
000000B0                      347  	;***      164 :     /* Start user code. Do not edit comment generated here */
000000B0                      348  	;***      165 :     EI();
000000B0                      349  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 165
000000B0 717AFA               350  	ei
000000B3                      351  	;***      166 :     R_TAU0_Create();
000000B3                      352  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
000000B3 FC000000             353  	call !!_R_TAU0_Create
000000B7                      354  	;***      167 :     R_SAU0_Create();
000000B7                      355  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 167
000000B7 FC000000             356  	call !!_R_SAU0_Create
000000BB                      357  	;***      168 :     R_SAU1_Create();
000000BB                      358  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 168
000000BB FC000000             359  	call !!_R_SAU1_Create
000000BF                      360  	;***      169 :     R_UART1_Create();
000000BF                      361  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 169
000000BF FC000000             362  	call !!_R_UART1_Create
000000C3                      363  	;***      170 :     R_UART2_Create();
000000C3                      364  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
000000C3 FC000000             365  	call !!_R_UART2_Create
000000C7                      366  	;***      171 :     R_UART3_Create();
000000C7                      367  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 171
000000C7 FC000000             368  	call !!_R_UART3_Create
000000CB                      369  	;***      172 :     R_RTC_Create();
000000CB                      370  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 172
000000CB FC000000             371  	call !!_R_RTC_Create
000000CF                      372  	;***      173 :     R_PORT_Create_UserInit();
000000CF                      373  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 173
000000CF FC000000             374  	call !!_R_PORT_Create_UserInit
000000D3                      375  	;***      174 :     R_CSI01_Create();
000000D3                      376  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 174
000000D3 FC000000             377  	call !!_R_CSI01_Create
000000D7                      378  	;***      175 :     R_CSI00_Create();
000000D7                      379  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
000000D7 FC000000             380  	call !!_R_CSI00_Create
000000DB                      381  	;***      176 : 
000000DB                      382  	;***      177 :     R_TAU0_Channel0_Start();
000000DB                      383  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
000000DB FC000000             384  	call !!_R_TAU0_Channel0_Start
000000DF                      385  	;***      178 :     R_UART3_Start();
000000DF                      386  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
000000DF FC000000             387  	call !!_R_UART3_Start
000000E3                      388  	;***      179 :     R_UART1_Start();
000000E3                      389  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 179
000000E3 FC000000             390  	call !!_R_UART1_Start
000000E7                      391  	;***      180 :     R_UART2_Start();
000000E7                      392  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 180
000000E7 FC000000             393  	call !!_R_UART2_Start
000000EB                      394  	;***      181 :     R_CSI00_Start();
000000EB                      395  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 181
000000EB FC000000             396  	call !!_R_CSI00_Start
000000EF                      397  	;***      182 : //    R_CSI01_Start();
000000EF                      398  	;***      183 : 
000000EF                      399  	;***      184 : 
000000EF                      400  	;***      185 :     R_ADC_Create();
000000EF                      401  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 185
000000EF FC000000             402  	call !!_R_ADC_Create
000000F3                      403  	;***      186 :     R_ADC_Set_OperationOn();
000000F3                      404  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 186
000000F3 FC000000             405  	call !!_R_ADC_Set_OperationOn
000000F7                      406  	;***      187 : //    R_ADC_Set_ADChannel(ADCHANNEL0);
000000F7                      407  	;***      188 :     R_ADC_Start();
000000F7                      408  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 188
000000F7 EC000000             409  	br !!_R_ADC_Start
000000FB                      410  	;***      189 :     /* End user code. Do not edit comment generated here */
000000FB                      411  	;***      190 : }
000000FB                      412  	;***      191 : 
000000FB                      413  	;***      192 : /* Start user code for adding. Do not edit comment generated here */
000000FB                      414  	;***      193 : /* End user code. Do not edit comment generated here */
00000000                      415  	.SECTION .data,DATA
00000000                      416  	.ALIGN 2
00000000                      417  _g_error:
00000000 0000                 418  	.DS (2)
00000002                      419  	.ALIGN 2
00000002                      420  _g_adc_ch:
00000002 0000                 421  	.DS (2)
00000004                      422  _led_st:
00000004 FF                   423  	.DB 0xFF
00000005                      424  _e_send:
00000005 05                   425  	.DB 0x05,0xA5,0x01
00000006 A5              
00000007 01              
00000008 00                   426  	.DS (1)
00000009 01                   427  	.DB 0x01,0x02,0x06,0x04
0000000A 02              
0000000B 06              
0000000C 04              
0000000D 00000000             428  	.DS (4)
00000011                      429  _e_data:
00000011 0000000000000000     430  	.DS (12)
00000019 00000000
0000001D                      431  _send_data:
0000001D 23                   432  	.DB 0x23,0xAB
0000001E AB              
00000000                      433  	.SECTION .bss,BSS
00000000                      434  	.ALIGN 2
00000000                      435  __stamp:
00000000                      436  	.DS (12)
0000000C                      437  _g_e_status:
0000000C                      438  	.DS (1)
0000000D                      439  _flow_p:
0000000D                      440  	.DS (1)
0000000E                      441  _salt_h_p:
0000000E                      442  	.DS (1)
0000000F                      443  _g_eeprom_wren:
0000000F                      444  	.DS (1)
00000010                      445  _receive_data:
00000010                      446  	.DS (2)
00000012                      447  	.ALIGN 2
00000012                      448  _receive_setting:
00000012                      449  	.DS (32)
00000032                      450  _set:
00000032                      451  	.DS (1)
00000033 00                   452  	.ALIGN 2
00000034                      453  _rx_data:
00000034                      454  	.DS (12)
00000040                      455  	.ALIGN 2
00000040                      456  _data_f:
00000040                      457  	.DS (4)
00000044                      458  	.ALIGN 2
00000044                      459  _data_f_test:
00000044                      460  	.DS (4)
00000048                      461  	.ALIGN 2
00000048                      462  _g_control_buffer:
00000048                      463  	.DS (6)

Section List
Attr     Size                Name

TEXTF               251 (000000FB) .textf
DATA                 31 (0000001F) .data
BSS                  78 (0000004E) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

