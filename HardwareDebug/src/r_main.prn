RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Fri Feb 25 09:28:40 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_test_control
00000000                       25  	.EXTERN _g_timerSetting
00000000                       26  	.EXTERN _g_numberSetting
00000000                       27  	.EXTERN _g_io_status
00000000                       28  	.EXTERN _g_Tick
00000000                       29  	.EXTERN _g_commnunication_flag
00000000                       30  	.EXTERN _g_machine_mode
00000000                       31  	.EXTERN _g_systemTime
00000000                       32  	.EXTERN _g_csi_rev_end
00000000                       33  	.EXTERN _g_uart2_fault
00000000                       34  	.EXTERN _g_uart2_sendend
00000000                       35  	.EXTERN _g_uart3_sendend
00000000                       36  	.EXTERN _g_rx_data
00000000                       37  	.EXTERN _g_uart3_rx_data
00000000                       38  	.PUBLIC _g_adc_ch
00000000                       39  	.PUBLIC _g_e_status
00000000                       40  	.PUBLIC _ret_number_setting
00000000                       41  	.PUBLIC _led_st
00000000                       42  	.PUBLIC _flow_p
00000000                       43  	.PUBLIC _salt_h_p
00000000                       44  	.PUBLIC _g_eeprom_wren
00000000                       45  	.PUBLIC _send_data
00000000                       46  	.PUBLIC _receive_data
00000000                       47  	.PUBLIC _receive_setting
00000000                       48  	.PUBLIC _set
00000000                       49  	.PUBLIC _rx_data
00000000                       50  	.PUBLIC _data_f
00000000                       51  	.PUBLIC _data_f_test
00000000                       52  	.PUBLIC _g_control_buffer_f
00000000                       53  	.PUBLIC _g_control_buffer_u32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _nostop_checkHandSensor
00000000                       65  	.EXTERN _ns_delay_ms
00000000                       66  	.PUBLIC _readHS
00000000                       67  	.EXTERN _delay_ms
00000000                       68  	.PUBLIC _main
00000000                       69  	.PUBLIC _R_MAIN_UserInit
00000000                       70  	.EXTERN _EEPROM_Init
00000000                       71  	.EXTERN _EE_SPI_Read
00000000                       72  	.EXTERN _R_UART2_Receive
00000000                       73  	.EXTERN _R_UART3_Receive
00000000                       74  	.EXTERN _sendRS485
00000000                       75  	.EXTERN _handSensorLED
00000000                       76  	.EXTERN _main_init_20211111
00000000                       77  	.EXTERN _realTimeResponse
00000000                       78  	.EXTERN _main_loop_20211111
00000000                       79  	.EXTERN _UpdateMachineStatus
00000000                       80  	.EXTERN _R_UART2_Stop
00000000                       81  	.EXTERN _R_UART2_Start
00000000                       82  	.EXTERN _sendR485_7byte
00000000                       83  	.EXTERN _R_UART3_Stop
00000000                       84  	.EXTERN _R_UART3_Start
00000000                       85  	.EXTERN _crc8_4
00000000                       86  	.EXTERN _crc8_1
00000000                       87  	.EXTERN _R_WDT_Restart
00000000                       88  	.EXTERN _R_TAU0_Create
00000000                       89  	.EXTERN _R_SAU0_Create
00000000                       90  	.EXTERN _R_SAU1_Create
00000000                       91  	.EXTERN _R_UART1_Create
00000000                       92  	.EXTERN _R_UART2_Create
00000000                       93  	.EXTERN _R_UART3_Create
00000000                       94  	.EXTERN _R_RTC_Create
00000000                       95  	.EXTERN _R_PORT_Create_UserInit
00000000                       96  	.EXTERN _R_CSI01_Create
00000000                       97  	.EXTERN _R_CSI00_Create
00000000                       98  	.EXTERN _R_TAU0_Channel0_Start
00000000                       99  	.EXTERN _R_UART1_Start
00000000                      100  	.EXTERN _R_CSI00_Start
00000000                      101  	.EXTERN _R_ADC_Create
00000000                      102  	.EXTERN _R_ADC_Set_OperationOn
00000000                      103  	.EXTERN _R_ADC_Start
00000000                      104  	.EXTERN _R_DAC_Create
00000000                      105  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                      106  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                      107  	.EXTERN _R_DAC0_Start
00000000                      108  	.EXTERN _R_DAC1_Start
00000000                      109  
00000000                      110  	.SECTION .textf,TEXTF
00000000                      111  _nostop_checkHandSensor:
00000000                      112  	.STACK _nostop_checkHandSensor = 4
00000000                      113  	;***        1 : /***********************************************************************************************************************
00000000                      114  	;***        2 :  * DISCLAIMER
00000000                      115  	;***        3 :  * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      116  	;***        4 :  * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      117  	;***        5 :  * applicable laws, including copyright laws.
00000000                      118  	;***        6 :  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      119  	;***        7 :  * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      120  	;***        8 :  * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      121  	;***        9 :  * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      122  	;***       10 :  * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      123  	;***       11 :  * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      124  	;***       12 :  * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability
00000000                      125  	;***       13 :  * of this software. By using this software, you agree to the additional terms and conditions found by accessing the
00000000                      126  	;***       14 :  * following link:
00000000                      127  	;***       15 :  * http://www.renesas.com/disclaimer
00000000                      128  	;***       16 :  *
00000000                      129  	;***       17 :  * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      130  	;***       18 :  ***********************************************************************************************************************/
00000000                      131  	;***       19 : 
00000000                      132  	;***       20 : /***********************************************************************************************************************
00000000                      133  	;***       21 :  * File Name    : r_main.c
00000000                      134  	;***       22 :  * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      135  	;***       23 :  * Device(s)    : R5F104ML
00000000                      136  	;***       24 :  * Tool-Chain   : CCRL
00000000                      137  	;***       25 :  * Description  : This file implements main function.
00000000                      138  	;***       26 :  * Creation Date: 30/11/2021
00000000                      139  	;***       27 :  ***********************************************************************************************************************/
00000000                      140  	;***       28 : 
00000000                      141  	;***       29 : /***********************************************************************************************************************
00000000                      142  	;***       30 :  Includes
00000000                      143  	;***       31 :  ***********************************************************************************************************************/
00000000                      144  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      145  	;***       33 : #include "r_cg_cgc.h"
00000000                      146  	;***       34 : #include "r_cg_port.h"
00000000                      147  	;***       35 : #include "r_cg_serial.h"
00000000                      148  	;***       36 : #include "r_cg_adc.h"
00000000                      149  	;***       37 : #include "r_cg_dac.h"
00000000                      150  	;***       38 : #include "r_cg_timer.h"
00000000                      151  	;***       39 : #include "r_cg_wdt.h"
00000000                      152  	;***       40 : #include "r_cg_rtc.h"
00000000                      153  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      154  	;***       42 : #include "EEPROM.h"
00000000                      155  	;***       43 : #include "usr_timer.h"
00000000                      156  	;***       44 : #include "usr_setting_sheet.h"
00000000                      157  	;***       45 : #include "crc8.h"
00000000                      158  	;***       46 : #include "hwm/main.h"
00000000                      159  	;***       47 : #include "r_cg_userdefine.h"
00000000                      160  	;***       48 : 
00000000                      161  	;***       49 : /***********************************************************************************************************************
00000000                      162  	;***       50 :  Pragma directive
00000000                      163  	;***       51 :  ***********************************************************************************************************************/
00000000                      164  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      165  	;***       53 : #define CVCC_Current_Set(a) R_DAC0_Set_ConversionValue(a)
00000000                      166  	;***       54 : #define Salt_Analog_Set(a) R_DAC1_Set_ConversionValue(a)
00000000                      167  	;***       55 : //#define TESTING_FIRMWARE
00000000                      168  	;***       56 : /* End user code. Do not edit comment generated here */
00000000                      169  	;***       57 : 
00000000                      170  	;***       58 : /***********************************************************************************************************************
00000000                      171  	;***       59 :  Global variables and functions
00000000                      172  	;***       60 :  ***********************************************************************************************************************/
00000000                      173  	;***       61 : /* Start user code for global. Do not edit comment generated here */
00000000                      174  	;***       62 : 
00000000                      175  	;***       63 : volatile int g_adc_ch = 0;
00000000                      176  	;***       64 : union EEPROM_status_u g_e_status;
00000000                      177  	;***       65 : struct Number_Setting_s ret_number_setting;
00000000                      178  	;***       66 : uint8_t led_st = 0xff;
00000000                      179  	;***       67 : uint8_t flow_p, salt_h_p;
00000000                      180  	;***       68 : uint8_t g_eeprom_wren;
00000000                      181  	;***       69 : uint8_t send_data[2] = { 0x23, 0xab };
00000000                      182  	;***       70 : uint8_t receive_data[2];
00000000                      183  	;***       71 : struct Number_Setting_s receive_setting;
00000000                      184  	;***       72 : union EEPROM_status_u set;
00000000                      185  	;***       73 : uint32_t rx_data[3];
00000000                      186  	;***       74 : float data_f;
00000000                      187  	;***       75 : union byte_to_float data_f_test;
00000000                      188  	;***       76 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      189  	;***       77 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      190  	;***       78 : 
00000000                      191  	;***       79 : union {
00000000                      192  	;***       80 : 	struct {
00000000                      193  	;***       81 : 		uint8_t up_signal;
00000000                      194  	;***       82 : 	};
00000000                      195  	;***       83 : 	uint8_t status;
00000000                      196  	;***       84 : } handsensor_status;
00000000                      197  	;***       85 : uint8_t g_handsensor_status[2];
00000000                      198  	;***       86 : void nostop_checkHandSensor(void) {
00000000                      199  	;***       87 : 	if (DETECT_U() == I_ON) {
00000000                      200  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000000 8D07                 201  	mov a, 0xFFF07
00000002 315300               202  	bt a.5, $.BB@LABEL@1_5
00000005                      203  .BB@LABEL@1_1:	; if_then_bb
00000005                      204  	;***       88 : 		if (ns_delay_ms(&g_Tick.tickHandSensor[0], 500)) {
00000005                      205  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000005 F6                   206  	clrw ax
00000006 14                   207  	movw de, ax
00000007 32F401               208  	movw bc, #0x01F4
0000000A 300000               209  	movw ax, #LOWW(_g_Tick+0x00090)
0000000D FC000000             210  	call !!_ns_delay_ms
00000011 F7                   211  	clrw bc
00000012 43                   212  	cmpw ax, bc
00000013 DD00                 213  	bz $.BB@LABEL@1_9
00000015                      214  .BB@LABEL@1_2:	; if_then_bb16
00000015                      215  	;***       89 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0 ? 1 : 0;
00000015                      216  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 89
00000015 D50000               217  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   218  	oneb a
00000019 61E8                 219  	skz
0000001B                      220  .BB@LABEL@1_3:	; bb22
0000001B F1                   221  	clrb a
0000001C                      222  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               223  	mov !LOWW(_g_handsensor_status), a
0000001F                      224  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
0000001F D7                   225  	ret
00000020                      226  .BB@LABEL@1_5:	; if_else_bb
00000020                      227  	;***       90 : 		}
00000020                      228  	;***       91 : 	} else if (DETECT_D() == I_ON) {
00000020                      229  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000020 8D07                 230  	mov a, 0xFFF07
00000022 314300               231  	bt a.4, $.BB@LABEL@1_7
00000025                      232  .BB@LABEL@1_6:	; if_then_bb43
00000025                      233  	;***       92 : 		g_handsensor_status[1] = 1;
00000025                      234  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000025 E50000               235  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   236  	ret
00000029                      237  .BB@LABEL@1_7:	; if_else_bb44
00000029                      238  	;***       93 : 	} else if (DETECT_U() == I_OFF) {
00000029                      239  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 93
00000029 8D07                 240  	mov a, 0xFFF07
0000002B 315300               241  	bt a.5, $.BB@LABEL@1_9
0000002E                      242  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      243  	;***       94 : 
0000002E                      244  	;***       95 : 	} else if (DETECT_D() == I_OFF) {
0000002E                      245  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 95
0000002E 8D07                 246  	mov a, 0xFFF07
00000030                      247  .BB@LABEL@1_9:	; return
00000030                      248  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000030 D7                   249  	ret
00000031                      250  _readHS:
00000031                      251  	.STACK _readHS = 4
00000031                      252  	;***       96 : 
00000031                      253  	;***       97 : 	}
00000031                      254  	;***       98 : }
00000031                      255  	;***       99 : uint8_t readHS(void) {
00000031                      256  	;***      100 : 	if (DETECT_U()) {
00000031                      257  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000031 8D07                 258  	mov a, 0xFFF07
00000033 315300               259  	bt a.5, $.BB@LABEL@2_2
00000036                      260  .BB@LABEL@2_1:	; bb33
00000036                      261  	;***      101 : 		delay_ms(2);
00000036                      262  	;***      102 : 		if (DETECT_U())
00000036                      263  	;***      103 : 			return 1;
00000036                      264  	;***      104 : 		return 0;
00000036                      265  	;***      105 : 	} else
00000036                      266  	;***      106 : 		return 0;
00000036                      267  	;***      107 : }
00000036                      268  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 107
00000036 F1                   269  	clrb a
00000037 D7                   270  	ret
00000038                      271  .BB@LABEL@2_2:	; if_then_bb
00000038                      272  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000038 F7                   273  	clrw bc
00000039 E6                   274  	onew ax
0000003A A1                   275  	incw ax
0000003B FC000000             276  	call !!_delay_ms
0000003F                      277  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 102
0000003F 8D07                 278  	mov a, 0xFFF07
00000041 315A                 279  	shr a, 0x05
00000043 5C01                 280  	and a, #0x01
00000045 D7                   281  	ret
00000046                      282  _main:
00000046                      283  	.STACK _main = 24
00000046                      284  	;***      108 : uint8_t this_size = sizeof(g_io_status);
00000046                      285  	;***      109 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      286  	;***      110 : uint8_t send_buf[7] = { 8, 1, 2, 3, 4, 5, 6 };
00000046                      287  	;***      111 : char g_crc[8];
00000046                      288  	;***      112 : uint32_t g_crc_32[8];
00000046                      289  	;***      113 : uint32_t data_crc[2] = { 30500, 60200 };
00000046                      290  	;***      114 : uint8_t rx_count;
00000046                      291  	;***      115 : uint8_t dac_out[2] = { 0xff, 0xff };
00000046                      292  	;***      116 : /* End user code. Do not edit comment generated here */
00000046                      293  	;***      117 : 
00000046                      294  	;***      118 : void R_MAIN_UserInit(void);
00000046                      295  	;***      119 : 
00000046                      296  	;***      120 : /***********************************************************************************************************************
00000046                      297  	;***      121 :  * Function Name: main
00000046                      298  	;***      122 :  * Description  : This function implements main function.
00000046                      299  	;***      123 :  * Arguments    : None
00000046                      300  	;***      124 :  * Return Value : None
00000046                      301  	;***      125 :  ***********************************************************************************************************************/
00000046                      302  	;***      126 : void main(void) {
00000046                      303  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 126
00000046 2010                 304  	subw sp, #0x10
00000048                      305  	;***      127 : 	R_MAIN_UserInit();
00000048                      306  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 127
00000048 FE0000               307  	call $!_R_MAIN_UserInit
0000004B                      308  	;***      128 : 	/* Start user code. Do not edit comment generated here */
0000004B                      309  	;***      129 : 
0000004B                      310  	;***      130 : 	//TODO: EEPROM Initialize and read Setting
0000004B                      311  	;***      131 : 	EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      312  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
0000004B F2                   313  	clrb c
0000004C 300000               314  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             315  	call !!_EEPROM_Init
00000053 F6                   316  	clrw ax
00000054                      317  	;***      132 : 	EE_SPI_Read((uint8_t*) &g_numberSetting, NUMBER_SETTING_ADDRESS,
00000054                      318  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000054 C1                   319  	push ax
00000055 5025                 320  	mov x, #0x25
00000057 C1                   321  	push ax
00000058 F7                   322  	clrw bc
00000059 300000               323  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             324  	call !!_EE_SPI_Read
00000060 1004                 325  	addw sp, #0x04
00000062 F6                   326  	clrw ax
00000063                      327  	;***      133 : 			numberSettingSize);
00000063                      328  	;***      134 : 	EE_SPI_Read((uint8_t*) &g_timerSetting, TIME_SETTING_ADDRESS,
00000063                      329  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 134
00000063 C1                   330  	push ax
00000064 5095                 331  	mov x, #0x95
00000066 C1                   332  	push ax
00000067 320008               333  	movw bc, #0x0800
0000006A 300000               334  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             335  	call !!_EE_SPI_Read
00000071 1004                 336  	addw sp, #0x04
00000073 F6                   337  	clrw ax
00000074                      338  	;***      135 : 			timeSettingSize);
00000074                      339  	;***      136 : 	EE_SPI_Read((uint8_t*) &g_test_control.data,
00000074                      340  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 136
00000074 C1                   341  	push ax
00000075 A1                   342  	incw ax
00000076 C1                   343  	push ax
00000077 322500               344  	movw bc, #0x0025
0000007A 300000               345  	movw ax, #LOWW(_g_test_control)
0000007D FC000000             346  	call !!_EE_SPI_Read
00000081 1004                 347  	addw sp, #0x04
00000083                      348  	;***      137 : 			NUMBER_SETTING_ADDRESS + numberSettingSize, sizeof(g_test_control.data));
00000083                      349  	;***      138 : 	_settingNumber = g_numberSetting;
00000083                      350  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 138
00000083 342600               351  	movw de, #0x0026
00000086 320000               352  	movw bc, #LOWW(_g_numberSetting)
00000089 300000               353  	movw ax, #LOWW(__settingNumber)
0000008C FC000000             354  	call !!_memcpy
00000090                      355  	;***      139 : 	_settingTime = g_timerSetting;
00000090                      356  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
00000090 349600               357  	movw de, #0x0096
00000093 320000               358  	movw bc, #LOWW(_g_timerSetting)
00000096 300000               359  	movw ax, #LOWW(__settingTime)
00000099 FC000000             360  	call !!_memcpy
0000009D                      361  	;***      140 : 	EEPROM_PROTECT_EN();
0000009D                      362  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 140
0000009D 71030E               363  	clr1 0xFFF0E.0
000000A0                      364  	;***      141 : 
000000A0                      365  	;***      142 : 	//TODO: Start receive command from Raspberry Pi
000000A0                      366  	;***      143 : 	R_UART2_Receive(g_rx_data, 6);
000000A0                      367  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 143
000000A0 320600               368  	movw bc, #0x0006
000000A3 300000               369  	movw ax, #LOWW(_g_rx_data)
000000A6 FC000000             370  	call !!_R_UART2_Receive
000000AA                      371  	;***      144 : 
000000AA                      372  	;***      145 : 	//TODO: Start receive data from RS485
000000AA                      373  	;***      146 : 	O_RS485_MODE_PIN = 0U;
000000AA                      374  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 146
000000AA 710300               375  	clr1 0xFFF00.0
000000AD                      376  	;***      147 : 	R_UART3_Receive(g_uart3_rx_data, 7);
000000AD                      377  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
000000AD 320700               378  	movw bc, #0x0007
000000B0 300000               379  	movw ax, #LOWW(_g_uart3_rx_data)
000000B3 FC000000             380  	call !!_R_UART3_Receive
000000B7 F6                   381  	clrw ax
000000B8                      382  	;***      148 : 	uint8_t wts, vpcb, vpcb_v = 1;
000000B8                      383  	;***      149 : 	sendRS485(0xff, 82, 2, 12);
000000B8                      384  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 149
000000B8 C1                   385  	push ax
000000B9 500C                 386  	mov x, #0x0C
000000BB C1                   387  	push ax
000000BC 5202                 388  	mov c, #0x02
000000BE 3052FF               389  	movw ax, #0xFF52
000000C1 FC000000             390  	call !!_sendRS485
000000C5 1004                 391  	addw sp, #0x04
000000C7                      392  	;***      150 : 
000000C7                      393  	;***      151 : 	//TODO: Turn off Hand Sensor LED
000000C7                      394  	;***      152 : 	g_pre_color = BLUE;
000000C7                      395  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 152
000000C7 CF000003             396  	mov !LOWW(_g_pre_color), #0x03
000000CB                      397  	;***      153 : 	handSensorLED(BLACK);
000000CB                      398  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 153
000000CB F1                   399  	clrb a
000000CC FC000000             400  	call !!_handSensorLED
000000D0 360000               401  	movw hl, #LOWW(_g_test_control)
000000D3                      402  	;***      154 : 
000000D3                      403  	;***      155 : 	//TODO: Set default washing mode
000000D3                      404  	;***      156 : 	g_machine_mode = HAND_WASHING;
000000D3                      405  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 156
000000D3 E50000               406  	oneb !LOWW(_g_machine_mode)
000000D6                      407  	;***      157 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000D6                      408  	;***      158 : 
000000D6                      409  	;***      159 : //TODO: Run Initialize Operation
000000D6                      410  	;***      160 : 	if(g_test_control.raw.power_on == ON){
000000D6                      411  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 160
000000D6                      412  	.bt [hl].1, $!.BB@LABEL@3_12
000000D6 319500                  	 -- Bncond	xxx.bit	,$.BR_TEMP@1
000000D9 EE0000                  	 -- br	**.target2
000000DC                         .BR_TEMP@1:
000000DC                      413  .BB@LABEL@3_1:	; entry.bb224_crit_edge
000000DC E1                   414  	oneb a
000000DD 9802                 415  	mov [sp+0x02], a
000000DF 9801                 416  	mov [sp+0x01], a
000000E1 9800                 417  	mov [sp+0x00], a
000000E3                      418  .BB@LABEL@3_2:	; bb224
000000E3                      419  	;***      161 : 		main_init_20211111();
000000E3                      420  	;***      162 : 	}
000000E3                      421  	;***      163 : 
000000E3                      422  	;***      164 : #ifdef TESTING_FIRMWARE
000000E3                      423  	;***      165 : 	uint8_t state = OFF;
000000E3                      424  	;***      166 : 	while (1) {
000000E3                      425  	;***      167 : 		if (ns_delay_ms(&g_Tick.tickCustom[2], 500)) {
000000E3                      426  	;***      168 : 			//    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
000000E3                      427  	;***      169 : 			//					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
000000E3                      428  	;***      170 : 			//				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
000000E3                      429  	;***      171 : 			//						g_io_status.refined.FlowValue);
000000E3                      430  	;***      172 : 			//			}
000000E3                      431  	;***      173 : 			dac_out[0] += 13;
000000E3                      432  	;***      174 : 			CVCC_Current_Set(dac_out[0]);
000000E3                      433  	;***      175 : 			dac_out[1] += 13;
000000E3                      434  	;***      176 : 			Salt_Analog_Set(dac_out[1]);
000000E3                      435  	;***      177 : 		}
000000E3                      436  	;***      178 : 		if (ns_delay_ms(&g_Tick.tickCustom[3], 1000)) {
000000E3                      437  	;***      179 : 			O_HS_IDA_PIN = O_HS_ICL_PIN = O_SUPPLY_WATER_PIN_SV1 =
000000E3                      438  	;***      180 : 			O_CTRL_OUT_PIN = O_SPOUT_WATER_PIN_SV2 = O_PUMP_SALT_PIN_SP1 =
000000E3                      439  	;***      181 : 			O_ALK_PUMP_PIN_P2 = O_ACID_PUMP_PIN_P1 = O_PUMP_PRESS_PIN =
000000E3                      440  	;***      182 : 			O_ALARM_OUT_PIN = O_NEUTRALIZE_PIN_SV7 =
000000E3                      441  	;***      183 : 			O_DRAIN_ALK_PIN_SV6 = O_DRAIN_ACID_PIN_SV5 = O_SPOUT_ACID_PIN_SV3 =
000000E3                      442  	;***      184 : 			O_SPOUT_ALK_PIN_SV4 = O_CVCC_ON_PIN = O_CVCC_ALARM_RS =
000000E3                      443  	;***      185 : 			O_OPTION_2_PIN_SV8 = O_OPTION_3_PIN_SV9 = O_OPTION_1_BUZZER = state;
000000E3                      444  	;***      186 : 			state = ~state;
000000E3                      445  	;***      187 : 		}
000000E3                      446  	;***      188 : 		R_WDT_Restart();
000000E3                      447  	;***      189 : 	}
000000E3                      448  	;***      190 : #endif
000000E3                      449  	;***      191 : 	while (1U) {
000000E3                      450  	;***      192 : 
000000E3                      451  	;***      193 : 		realTimeResponse();
000000E3                      452  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 193
000000E3 FC000000             453  	call !!_realTimeResponse
000000E7                      454  	;***      194 : 		main_loop_20211111();
000000E7                      455  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 194
000000E7 FC000000             456  	call !!_main_loop_20211111
000000EB                      457  	;***      195 : 
000000EB                      458  	;***      196 : 		handSensorLED(g_color);
000000EB                      459  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
000000EB 8F0000               460  	mov a, !LOWW(_g_color)
000000EE FC000000             461  	call !!_handSensorLED
000000F2                      462  	;***      197 : 		UpdateMachineStatus();
000000F2                      463  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 197
000000F2 FC000000             464  	call !!_UpdateMachineStatus
000000F6                      465  	;***      198 : 		if (g_uart2_fault == 1) {
000000F6                      466  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 198
000000F6 40000001             467  	cmp !LOWW(_g_uart2_fault), #0x01
000000FA DF00                 468  	bnz $.BB@LABEL@3_4
000000FC                      469  .BB@LABEL@3_3:	; if_then_bb28
000000FC                      470  	;***      199 : 			R_UART2_Stop();
000000FC                      471  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 199
000000FC FC000000             472  	call !!_R_UART2_Stop
00000100                      473  	;***      200 : 			delay_ms(10);
00000100                      474  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 200
00000100 F7                   475  	clrw bc
00000101 300A00               476  	movw ax, #0x000A
00000104 FC000000             477  	call !!_delay_ms
00000108                      478  	;***      201 : 			R_UART2_Start();
00000108                      479  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
00000108 FC000000             480  	call !!_R_UART2_Start
0000010C                      481  	;***      202 : 			g_uart2_fault = 0;
0000010C                      482  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 202
0000010C F50000               483  	clrb !LOWW(_g_uart2_fault)
0000010F                      484  .BB@LABEL@3_4:	; if_break_bb29
0000010F                      485  	;***      203 : 		}
0000010F                      486  	;***      204 : 
0000010F                      487  	;***      205 : 		// Communication with WaterSoftener
0000010F                      488  	;***      206 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_response_flag) {
0000010F                      489  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 206
0000010F D50000               490  	cmp0 !LOWW(_g_commnunication_flag+0x0000A)
00000112 DD00                 491  	bz $.BB@LABEL@3_6
00000114                      492  .BB@LABEL@3_5:	; if_then_bb35
00000114 F6                   493  	clrw ax
00000115                      494  	;***      207 : 			sendRS485(0xff, 82, 2, 5);
00000115                      495  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 207
00000115 C1                   496  	push ax
00000116 5005                 497  	mov x, #0x05
00000118 C1                   498  	push ax
00000119 5202                 499  	mov c, #0x02
0000011B 3052FF               500  	movw ax, #0xFF52
0000011E FC000000             501  	call !!_sendRS485
00000122 1004                 502  	addw sp, #0x04
00000124                      503  	;***      208 : //    		rx_count++;
00000124                      504  	;***      209 : 			wts = 1; //Test flag = 1
00000124                      505  	;***      210 : 			g_commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
00000124                      506  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
00000124 F50000               507  	clrb !LOWW(_g_commnunication_flag+0x0000A)
00000127 E1                   508  	oneb a
00000128 9800                 509  	mov [sp+0x00], a
0000012A                      510  .BB@LABEL@3_6:	; if_break_bb36
0000012A                      511  	;***      211 : 		}
0000012A                      512  	;***      212 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1) {
0000012A                      513  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 212
0000012A 40000001             514  	cmp !LOWW(_g_commnunication_flag+0x0000B), #0x01
0000012E DF00                 515  	bnz $.BB@LABEL@3_10
00000130                      516  .BB@LABEL@3_7:	; if_then_bb42
00000130                      517  	;***      213 : 			// Sand to Water softener SV state
00000130                      518  	;***      214 : 			sendRS485(0xff, 82, 24,
00000130                      519  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 214
00000130 360000               520  	movw hl, #LOWW(_g_io_status+0x00001)
00000133 E7                   521  	onew bc
00000134 318300               522  	bt [hl].0, $.BB@LABEL@3_9
00000137                      523  .BB@LABEL@3_8:	; bb50
00000137 B3                   524  	decw bc
00000138                      525  .BB@LABEL@3_9:	; bb51
00000138 F6                   526  	clrw ax
00000139 C1                   527  	push ax
0000013A C3                   528  	push bc
0000013B 5218                 529  	mov c, #0x18
0000013D 3052FF               530  	movw ax, #0xFF52
00000140 FC000000             531  	call !!_sendRS485
00000144 1004                 532  	addw sp, #0x04
00000146                      533  	;***      215 : 					(uint32_t) g_io_status.refined.io.Valve.SV1 == 1 ? 1 : 0);
00000146                      534  	;***      216 : 			g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
00000146                      535  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
00000146 F50000               536  	clrb !LOWW(_g_commnunication_flag+0x0000B)
00000149                      537  .BB@LABEL@3_10:	; if_break_bb55
00000149 8800                 538  	mov a, [sp+0x00]
0000014B                      539  	;***      217 : 		}
0000014B                      540  	;***      218 : 		// Test SV1 for Water Softener
0000014B                      541  	;***      219 : 		if (wts != 0) {
0000014B                      542  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 219
0000014B D1                   543  	cmp0 a
0000014C DF00                 544  	bnz $.BB@LABEL@3_13
0000014E                      545  .BB@LABEL@3_11:	; if_else_bb75
0000014E                      546  	;***      220 : 			if (ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)) {
0000014E                      547  	;***      221 : 				if (wts == 1) {
0000014E                      548  	;***      222 : 					O_SUPPLY_WATER_PIN_SV1 = ON;
0000014E                      549  	;***      223 : //					sendRS485(1, 82, 24,(uint32_t) 1);
0000014E                      550  	;***      224 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
0000014E                      551  	;***      225 : 					wts = 2;
0000014E                      552  	;***      226 : 				} else {
0000014E                      553  	;***      227 : 					O_SUPPLY_WATER_PIN_SV1 = OFF;
0000014E                      554  	;***      228 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
0000014E                      555  	;***      229 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
0000014E                      556  	;***      230 : 					wts = 0;
0000014E                      557  	;***      231 : 				}
0000014E                      558  	;***      232 : 			}
0000014E                      559  	;***      233 : 		} else {
0000014E                      560  	;***      234 : 			g_Tick.tickWaterSoftenerPCB = g_systemTime;
0000014E                      561  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 234
0000014E AF0000               562  	movw ax, !LOWW(_g_systemTime+0x00002)
00000151 BF0000               563  	movw !LOWW(_g_Tick+0x00052), ax
00000154 AF0000               564  	movw ax, !LOWW(_g_systemTime)
00000157 BF0000               565  	movw !LOWW(_g_Tick+0x00050), ax
0000015A EF00                 566  	br $.BB@LABEL@3_17
0000015C                      567  .BB@LABEL@3_12:	; if_then_bb
0000015C                      568  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 161
0000015C FC000000             569  	call !!_main_init_20211111
00000160 EE0000               570  	br $!.BB@LABEL@3_1
00000163                      571  .BB@LABEL@3_13:	; if_then_bb61
00000163                      572  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 220
00000163 F6                   573  	clrw ax
00000164 14                   574  	movw de, ax
00000165 328813               575  	movw bc, #0x1388
00000168 300000               576  	movw ax, #LOWW(_g_Tick+0x00050)
0000016B FC000000             577  	call !!_ns_delay_ms
0000016F F7                   578  	clrw bc
00000170 43                   579  	cmpw ax, bc
00000171 DD00                 580  	bz $.BB@LABEL@3_17
00000173                      581  .BB@LABEL@3_14:	; if_then_bb66
00000173 8800                 582  	mov a, [sp+0x00]
00000175                      583  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
00000175 91                   584  	dec a
00000176 DF00                 585  	bnz $.BB@LABEL@3_16
00000178                      586  .BB@LABEL@3_15:	; if_then_bb72
00000178                      587  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 222
00000178 717201               588  	set1 0xFFF01.7
0000017B C80002               589  	mov [sp+0x00], #0x02
0000017E EF00                 590  	br $.BB@LABEL@3_17
00000180                      591  .BB@LABEL@3_16:	; if_else_bb
00000180                      592  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 227
00000180 717301               593  	clr1 0xFFF01.7
00000183 F1                   594  	clrb a
00000184 9800                 595  	mov [sp+0x00], a
00000186                      596  .BB@LABEL@3_17:	; if_break_bb77
00000186                      597  	;***      235 : 		}
00000186                      598  	;***      236 : 
00000186                      599  	;***      237 : 		//Valve PCB
00000186                      600  	;***      238 : 		if (g_commnunication_flag.rs485_send_to_valve_response_flag == 1) {
00000186                      601  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 238
00000186 40000001             602  	cmp !LOWW(_g_commnunication_flag+0x0000C), #0x01
0000018A DF00                 603  	bnz $.BB@LABEL@3_19
0000018C                      604  .BB@LABEL@3_18:	; if_then_bb83
0000018C AEF8                 605  	movw ax, sp
0000018E 040600               606  	addw ax, #0x0006
00000191 B804                 607  	movw [sp+0x04], ax
00000193                      608  	;***      239 : 			// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
00000193                      609  	;***      240 : 			// 0 - Stand alone 1 - Control Valve
00000193                      610  	;***      241 : 			uint8_t _b[5] = { vpcb_v, g_uart3_sendend % 2, g_systemTime % 2, 0,
00000193                      611  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 241
00000193 340500               612  	movw de, #0x0005
00000196 320000               613  	movw bc, #SMRLW(.STR@1)
00000199 FC000000             614  	call !!_memcpy
0000019D 8802                 615  	mov a, [sp+0x02]
0000019F 9806                 616  	mov [sp+0x06], a
000001A1 E1                   617  	oneb a
000001A2 5F0000               618  	and a, !LOWW(_g_uart3_sendend)
000001A5 9807                 619  	mov [sp+0x07], a
000001A7 AF0000               620  	movw ax, !LOWW(_g_systemTime+0x00002)
000001AA AF0000               621  	movw ax, !LOWW(_g_systemTime)
000001AD 60                   622  	mov a, x
000001AE 5C01                 623  	and a, #0x01
000001B0 9808                 624  	mov [sp+0x08], a
000001B2 A804                 625  	movw ax, [sp+0x04]
000001B4 12                   626  	movw bc, ax
000001B5                      627  	;***      242 : 					1 };
000001B5                      628  	;***      243 : 			sendR485_7byte(0xff, 12, _b);
000001B5                      629  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 243
000001B5 300CFF               630  	movw ax, #0xFF0C
000001B8 FC000000             631  	call !!_sendR485_7byte
000001BC                      632  	;***      244 : 			vpcb++;
000001BC                      633  	;***      245 : 			g_commnunication_flag.rs485_send_to_valve_response_flag = 0;
000001BC                      634  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 245
000001BC F50000               635  	clrb !LOWW(_g_commnunication_flag+0x0000C)
000001BF 8801                 636  	mov a, [sp+0x01]
000001C1                      637  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 244
000001C1 81                   638  	inc a
000001C2 9801                 639  	mov [sp+0x01], a
000001C4 EF00                 640  	br $.BB@LABEL@3_21
000001C6                      641  .BB@LABEL@3_19:	; if_else_bb101
000001C6                      642  	;***      246 : 		} else if (g_commnunication_flag.rs485_get_valve_gesture_flag == 1) {
000001C6                      643  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 246
000001C6 40000001             644  	cmp !LOWW(_g_commnunication_flag+0x0000D), #0x01
000001CA DF00                 645  	bnz $.BB@LABEL@3_21
000001CC                      646  .BB@LABEL@3_20:	; if_then_bb107
000001CC AEF8                 647  	movw ax, sp
000001CE 040B00               648  	addw ax, #0x000B
000001D1 B804                 649  	movw [sp+0x04], ax
000001D3                      650  	;***      247 : 			uint8_t _b[5] = { 0, 1, 0, 0, 1 };
000001D3                      651  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
000001D3 340500               652  	movw de, #0x0005
000001D6 320000               653  	movw bc, #SMRLW(.STR@1683)
000001D9 FC000000             654  	call !!_memcpy
000001DD A804                 655  	movw ax, [sp+0x04]
000001DF 12                   656  	movw bc, ax
000001E0                      657  	;***      248 : 			sendR485_7byte(0xff, 1, _b);
000001E0                      658  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 248
000001E0 3001FF               659  	movw ax, #0xFF01
000001E3 FC000000             660  	call !!_sendR485_7byte
000001E7                      661  	;***      249 : 			g_commnunication_flag.rs485_get_valve_gesture_flag = 0;
000001E7                      662  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 249
000001E7 F50000               663  	clrb !LOWW(_g_commnunication_flag+0x0000D)
000001EA                      664  .BB@LABEL@3_21:	; if_break_bb111
000001EA 8801                 665  	mov a, [sp+0x01]
000001EC                      666  	;***      250 : 		}
000001EC                      667  	;***      251 : 
000001EC                      668  	;***      252 : 		if (vpcb != 0) {
000001EC                      669  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
000001EC D1                   670  	cmp0 a
000001ED DF00                 671  	bnz $.BB@LABEL@3_23
000001EF                      672  .BB@LABEL@3_22:	; if_else_bb135
000001EF                      673  	;***      253 : 			if (ns_delay_ms(&g_Tick.tickValvePCB, 5000)) {
000001EF                      674  	;***      254 : 				vpcb_v = vpcb_v == 1 ? 0 : 1;
000001EF                      675  	;***      255 : 				vpcb = 0;
000001EF                      676  	;***      256 : 			}
000001EF                      677  	;***      257 : 		} else {
000001EF                      678  	;***      258 : 			g_Tick.tickValvePCB = g_systemTime;
000001EF                      679  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 258
000001EF AF0000               680  	movw ax, !LOWW(_g_systemTime+0x00002)
000001F2 BF0000               681  	movw !LOWW(_g_Tick+0x00056), ax
000001F5 AF0000               682  	movw ax, !LOWW(_g_systemTime)
000001F8 BF0000               683  	movw !LOWW(_g_Tick+0x00054), ax
000001FB EF00                 684  	br $.BB@LABEL@3_26
000001FD                      685  .BB@LABEL@3_23:	; if_then_bb117
000001FD                      686  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 253
000001FD F6                   687  	clrw ax
000001FE 14                   688  	movw de, ax
000001FF 328813               689  	movw bc, #0x1388
00000202 300000               690  	movw ax, #LOWW(_g_Tick+0x00054)
00000205 FC000000             691  	call !!_ns_delay_ms
00000209 F7                   692  	clrw bc
0000020A 43                   693  	cmpw ax, bc
0000020B DD00                 694  	bz $.BB@LABEL@3_26
0000020D                      695  .BB@LABEL@3_24:	; if_then_bb122
0000020D 8802                 696  	mov a, [sp+0x02]
0000020F                      697  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 254
0000020F 91                   698  	dec a
00000210 F1                   699  	clrb a
00000211 9801                 700  	mov [sp+0x01], a
00000213 DF00                 701  	bnz $.BB@LABEL@3_28
00000215                      702  .BB@LABEL@3_25:	; if_then_bb122.if_break_bb137_crit_edge
00000215 9802                 703  	mov [sp+0x02], a
00000217                      704  .BB@LABEL@3_26:	; if_break_bb137
00000217                      705  	;***      259 : 		}
00000217                      706  	;***      260 : 
00000217                      707  	;***      261 : 		//RS485 fault check
00000217                      708  	;***      262 : 		if (g_commnunication_flag.rs485_fault == 1) {
00000217                      709  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 262
00000217 40000001             710  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x01
0000021B DF00                 711  	bnz $.BB@LABEL@3_29
0000021D                      712  .BB@LABEL@3_27:	; if_then_bb143
0000021D                      713  	;***      263 : 			R_UART3_Stop();
0000021D                      714  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 263
0000021D FC000000             715  	call !!_R_UART3_Stop
00000221                      716  	;***      264 : 			g_commnunication_flag.rs485_fault++;
00000221                      717  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 264
00000221 A00000               718  	inc !LOWW(_g_commnunication_flag+0x0000E)
00000224                      719  	;***      265 : 			g_Tick.tickRS485 = g_systemTime;
00000224                      720  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 265
00000224 AF0000               721  	movw ax, !LOWW(_g_systemTime+0x00002)
00000227 BF0000               722  	movw !LOWW(_g_Tick+0x0005A), ax
0000022A AF0000               723  	movw ax, !LOWW(_g_systemTime)
0000022D BF0000               724  	movw !LOWW(_g_Tick+0x00058), ax
00000230 EF00                 725  	br $.BB@LABEL@3_32
00000232                      726  .BB@LABEL@3_28:	; bb128
00000232 E1                   727  	oneb a
00000233 EF00                 728  	br $.BB@LABEL@3_25
00000235                      729  .BB@LABEL@3_29:	; if_else_bb147
00000235                      730  	;***      266 : 		} else if (g_commnunication_flag.rs485_fault == 2) {
00000235                      731  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 266
00000235 40000002             732  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x02
00000239 DF00                 733  	bnz $.BB@LABEL@3_32
0000023B                      734  .BB@LABEL@3_30:	; if_then_bb153
0000023B                      735  	;***      267 : 			if (ns_delay_ms(&g_Tick.tickRS485, 500)) {
0000023B                      736  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 267
0000023B F6                   737  	clrw ax
0000023C 14                   738  	movw de, ax
0000023D 32F401               739  	movw bc, #0x01F4
00000240 300000               740  	movw ax, #LOWW(_g_Tick+0x00058)
00000243 FC000000             741  	call !!_ns_delay_ms
00000247 F7                   742  	clrw bc
00000248 43                   743  	cmpw ax, bc
00000249 DD00                 744  	bz $.BB@LABEL@3_32
0000024B                      745  .BB@LABEL@3_31:	; if_then_bb158
0000024B                      746  	;***      268 : 				R_UART3_Start();
0000024B                      747  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 268
0000024B FC000000             748  	call !!_R_UART3_Start
0000024F                      749  	;***      269 : 				R_UART3_Receive(g_uart3_rx_data, 7);
0000024F                      750  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 269
0000024F 320700               751  	movw bc, #0x0007
00000252 300000               752  	movw ax, #LOWW(_g_uart3_rx_data)
00000255 FC000000             753  	call !!_R_UART3_Receive
00000259                      754  	;***      270 : 				g_commnunication_flag.rs485_fault = 0;
00000259                      755  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 270
00000259 F50000               756  	clrb !LOWW(_g_commnunication_flag+0x0000E)
0000025C                      757  .BB@LABEL@3_32:	; if_break_bb162
0000025C                      758  	;***      271 : 			}
0000025C                      759  	;***      272 : 		}
0000025C                      760  	;***      273 : //--------------------------------- Testing code---------------------------------------------------------------
0000025C                      761  	;***      274 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
0000025C                      762  	;***      275 : //    		P6_bit.no3 = ~P6_bit.no3;
0000025C                      763  	;***      276 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
0000025C                      764  	;***      277 : //    	}
0000025C                      765  	;***      278 : //    	if(g_machine_state.user == 1){
0000025C                      766  	;***      279 : //    		HandWashingMode_nostop();
0000025C                      767  	;***      280 : //    	}else{
0000025C                      768  	;***      281 : //    		g_Tick.tickCustom[1] = g_systemTime;
0000025C                      769  	;***      282 : //    	}
0000025C                      770  	;***      283 : 
0000025C                      771  	;***      284 : 		// Check
0000025C                      772  	;***      285 : 		flow_p = I_FLOW_PLUSE_PIN == 1 ? 1 : 0;
0000025C                      773  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 285
0000025C 8D00                 774  	mov a, 0xFFF00
0000025E 719C                 775  	mov1 CY, a.1
00000260 E1                   776  	oneb a
00000261 61C8                 777  	skc
00000263                      778  .BB@LABEL@3_33:	; bb170
00000263 F1                   779  	clrb a
00000264                      780  .BB@LABEL@3_34:	; bb172
00000264 9F0000               781  	mov !LOWW(_flow_p), a
00000267                      782  	;***      286 : 		if (ns_delay_ms(&g_Tick.tickCustom[1], 60000)) {
00000267                      783  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 286
00000267 F6                   784  	clrw ax
00000268 14                   785  	movw de, ax
00000269 3260EA               786  	movw bc, #0xEA60
0000026C 300000               787  	movw ax, #LOWW(_g_Tick+0x0009C)
0000026F FC000000             788  	call !!_ns_delay_ms
00000273                      789  	;***      287 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
00000273                      790  	;***      288 : //				g_TickKeeper.SV1_ON_minutes++;
00000273                      791  	;***      289 : //				g_TickKeeper.SV1_OFF_minutes = 0;
00000273                      792  	;***      290 : //			}else{
00000273                      793  	;***      291 : //				g_TickKeeper.SV1_OFF_minutes++;
00000273                      794  	;***      292 : //				g_TickKeeper.SV1_ON_minutes = 0;
00000273                      795  	;***      293 : //			}
00000273                      796  	;***      294 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
00000273                      797  	;***      295 : //				g_TickKeeper.SV2_ON_minutes++;
00000273                      798  	;***      296 : //				g_TickKeeper.SV2_OFF_minutes = 0;
00000273                      799  	;***      297 : //			}else{
00000273                      800  	;***      298 : //				g_TickKeeper.SV2_OFF_minutes++;
00000273                      801  	;***      299 : //				g_TickKeeper.SV2_ON_minutes = 0;
00000273                      802  	;***      300 : //			}
00000273                      803  	;***      301 : 		}
00000273                      804  	;***      302 : 
00000273                      805  	;***      303 : 		if (ns_delay_ms(&g_Tick.tick1s, 1000)) {
00000273                      806  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 303
00000273 F6                   807  	clrw ax
00000274 14                   808  	movw de, ax
00000275 32E803               809  	movw bc, #0x03E8
00000278 300000               810  	movw ax, #LOWW(_g_Tick+0x00004)
0000027B FC000000             811  	call !!_ns_delay_ms
0000027F F7                   812  	clrw bc
00000280 43                   813  	cmpw ax, bc
00000281 DD00                 814  	bz $.BB@LABEL@3_38
00000283                      815  .BB@LABEL@3_35:	; if_then_bb186
00000283                      816  	;***      304 : 
00000283                      817  	;***      305 : 			led_st = led_st == 0 ? 0xff : 0x00;
00000283                      818  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 305
00000283 D50000               819  	cmp0 !LOWW(_led_st)
00000286 51FF                 820  	mov a, #0xFF
00000288 61E8                 821  	skz
0000028A                      822  .BB@LABEL@3_36:	; bb192
0000028A F1                   823  	clrb a
0000028B                      824  .BB@LABEL@3_37:	; bb194
0000028B 9F0000               825  	mov !LOWW(_led_st), a
0000028E                      826  	;***      306 : 			uint8_t state = g_uart2_sendend;
0000028E                      827  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 306
0000028E 8F0000               828  	mov a, !LOWW(_g_uart2_sendend)
00000291                      829  	;***      307 : 			g_crc[6] = crc8_4((uint8_t*) &g_timerSetting,
00000291                      830  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 307
00000291 5294                 831  	mov c, #0x94
00000293 300000               832  	movw ax, #LOWW(_g_timerSetting)
00000296 FC000000             833  	call !!_crc8_4
0000029A 9F0000               834  	mov !LOWW(_g_crc+0x00006), a
0000029D                      835  	;***      308 : 					sizeof(struct Timer_Setting_s) - 2);
0000029D                      836  	;***      309 : 			g_crc[7] = crc8_1((uint8_t*) &g_timerSetting,
0000029D                      837  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 309
0000029D 5294                 838  	mov c, #0x94
0000029F 300000               839  	movw ax, #LOWW(_g_timerSetting)
000002A2 FC000000             840  	call !!_crc8_1
000002A6 9F0000               841  	mov !LOWW(_g_crc+0x00007), a
000002A9                      842  .BB@LABEL@3_38:	; if_break_bb209
000002A9                      843  	;***      310 : 					sizeof(struct Timer_Setting_s) - 2);
000002A9                      844  	;***      311 : //    	    switch (g_color) {
000002A9                      845  	;***      312 : //				case BLACK:
000002A9                      846  	;***      313 : //					g_color = RED;
000002A9                      847  	;***      314 : //					break;
000002A9                      848  	;***      315 : //				case RED:
000002A9                      849  	;***      316 : //					g_color = BLUE;
000002A9                      850  	;***      317 : //					break;
000002A9                      851  	;***      318 : //				case BLUE:
000002A9                      852  	;***      319 : //					g_color = WHITE;
000002A9                      853  	;***      320 : //					break;
000002A9                      854  	;***      321 : //				default:
000002A9                      855  	;***      322 : //					g_color = BLACK;
000002A9                      856  	;***      323 : //					break;
000002A9                      857  	;***      324 : //			}
000002A9                      858  	;***      325 : 			if (led_st == 0x00) {
000002A9                      859  	;***      326 : 
000002A9                      860  	;***      327 : //    			O_CVCC_ON_PIN = ON;
000002A9                      861  	;***      328 : //    			O_HS_ICL_PIN = 0;
000002A9                      862  	;***      329 : //    			O_HS_IDA_PIN = 1;
000002A9                      863  	;***      330 : //    			handSensorLED(RED);
000002A9                      864  	;***      331 : //    			O_CVCC_ALARM_RS = 1;
000002A9                      865  	;***      332 : //    			O_PUMP_SALT_PIN = ON;
000002A9                      866  	;***      333 : //    			electrolyticOperationON();
000002A9                      867  	;***      334 : //    			g_io_status.refined.Valve.SV4 = 1;
000002A9                      868  	;***      335 : //				g_io_status.refined.Pump2 = 1;
000002A9                      869  	;***      336 : //				g_io_status.refined.Valve.SV5 = 0;
000002A9                      870  	;***      337 : //				g_io_status.refined.Pump1 = 0;
000002A9                      871  	;***      338 : //				g_io_status.refined.SaltLowLevel = 1;
000002A9                      872  	;***      339 : //    			e_send[0]++;
000002A9                      873  	;***      340 : //    			g_numberSetting.upperVoltage1++;
000002A9                      874  	;***      341 : //    			g_numberSetting.crc--;
000002A9                      875  	;***      342 : //    			g_numberSetting.crc2++;
000002A9                      876  	;***      343 : //    			g_numberSetting.lowerFlow++;
000002A9                      877  	;***      344 : //    			g_numberSetting.hello++;
000002A9                      878  	;***      345 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
000002A9                      879  	;***      346 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
000002A9                      880  	;***      347 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
000002A9                      881  	;***      348 : 			} else {
000002A9                      882  	;***      349 : //    			O_CVCC_ON_PIN = OFF;
000002A9                      883  	;***      350 : //    			O_HS_ICL_PIN = 1;
000002A9                      884  	;***      351 : //				O_HS_IDA_PIN = 0;
000002A9                      885  	;***      352 : //    			handSensorLED(WHITE);
000002A9                      886  	;***      353 : //    			O_CVCC_ALARM_RS = 0;
000002A9                      887  	;***      354 : //    			O_PUMP_SALT_PIN = OFF;
000002A9                      888  	;***      355 : //    			electrolyticOperationOFF();
000002A9                      889  	;***      356 : //    			g_io_status.refined.Valve.SV4 = 0;
000002A9                      890  	;***      357 : //				g_io_status.refined.Pump2 = 0;
000002A9                      891  	;***      358 : //				g_io_status.refined.Valve.SV5 = 1;
000002A9                      892  	;***      359 : //				g_io_status.refined.Pump1 = 1;
000002A9                      893  	;***      360 : //				g_io_status.refined.SaltLowLevel = 0;
000002A9                      894  	;***      361 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
000002A9                      895  	;***      362 : 
000002A9                      896  	;***      363 : 			}
000002A9                      897  	;***      364 : 		}
000002A9                      898  	;***      365 : 
000002A9                      899  	;***      366 : //--------------------------------End testing code---------------------------------------------------------
000002A9                      900  	;***      367 : //    	if(g_machine_state.mode == BUSY){
000002A9                      901  	;***      368 : //    		g_machine_state.user = 0;
000002A9                      902  	;***      369 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
000002A9                      903  	;***      370 : //    			g_machine_state.mode = INDIE;
000002A9                      904  	;***      371 : //    		}
000002A9                      905  	;***      372 : //    	}else{
000002A9                      906  	;***      373 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
000002A9                      907  	;***      374 : //    	}
000002A9                      908  	;***      375 : 
000002A9                      909  	;***      376 : 		if ((g_machine_state.mode == WATER_WASHING)
000002A9                      910  	;***      377 : 				| (g_machine_state.mode == INDIE)) {
000002A9                      911  	;***      378 : //			nostop_WaterWashingMode();
000002A9                      912  	;***      379 : 		}
000002A9                      913  	;***      380 : //    	InitialOperationModeStart();
000002A9                      914  	;***      381 : 
000002A9                      915  	;***      382 : //    	if(g_color != g_pre_color){
000002A9                      916  	;***      383 : //			O_RS485_MODE_PIN = 1U;
000002A9                      917  	;***      384 : //			uint8_t _uart3 = g_uart3_sendend;
000002A9                      918  	;***      385 : //			send_buf[3]++;
000002A9                      919  	;***      386 : //			R_UART3_Send(send_buf, 7);
000002A9                      920  	;***      387 : //			while(_uart3 == g_uart3_sendend);
000002A9                      921  	;***      388 : //			O_RS485_MODE_PIN = 0U;
000002A9                      922  	;***      389 : //    	}
000002A9                      923  	;***      390 : 		R_WDT_Restart();
000002A9                      924  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 390
000002A9 FC000000             925  	call !!_R_WDT_Restart
000002AD EE0000               926  	br $!.BB@LABEL@3_2
000002B0                      927  _R_MAIN_UserInit:
000002B0                      928  	.STACK _R_MAIN_UserInit = 4
000002B0                      929  	;***      391 : 	}
000002B0                      930  	;***      392 : 	/* End user code. Do not edit comment generated here */
000002B0                      931  	;***      393 : }
000002B0                      932  	;***      394 : 
000002B0                      933  	;***      395 : /***********************************************************************************************************************
000002B0                      934  	;***      396 :  * Function Name: R_MAIN_UserInit
000002B0                      935  	;***      397 :  * Description  : This function adds user code before implementing main function.
000002B0                      936  	;***      398 :  * Arguments    : None
000002B0                      937  	;***      399 :  * Return Value : None
000002B0                      938  	;***      400 :  ***********************************************************************************************************************/
000002B0                      939  	;***      401 : void R_MAIN_UserInit(void) {
000002B0                      940  	;***      402 : 	/* Start user code. Do not edit comment generated here */
000002B0                      941  	;***      403 : 	EI();
000002B0                      942  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 403
000002B0 717AFA               943  	ei
000002B3                      944  	;***      404 : 	R_TAU0_Create();
000002B3                      945  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 404
000002B3 FC000000             946  	call !!_R_TAU0_Create
000002B7                      947  	;***      405 : 	R_SAU0_Create();
000002B7                      948  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 405
000002B7 FC000000             949  	call !!_R_SAU0_Create
000002BB                      950  	;***      406 : 	R_SAU1_Create();
000002BB                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 406
000002BB FC000000             952  	call !!_R_SAU1_Create
000002BF                      953  	;***      407 : 	R_UART1_Create();
000002BF                      954  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 407
000002BF FC000000             955  	call !!_R_UART1_Create
000002C3                      956  	;***      408 : 	R_UART2_Create();
000002C3                      957  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 408
000002C3 FC000000             958  	call !!_R_UART2_Create
000002C7                      959  	;***      409 : 	R_UART3_Create();
000002C7                      960  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 409
000002C7 FC000000             961  	call !!_R_UART3_Create
000002CB                      962  	;***      410 : 	R_RTC_Create();
000002CB                      963  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 410
000002CB FC000000             964  	call !!_R_RTC_Create
000002CF                      965  	;***      411 : 	R_PORT_Create_UserInit();
000002CF                      966  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 411
000002CF FC000000             967  	call !!_R_PORT_Create_UserInit
000002D3                      968  	;***      412 : 	R_CSI01_Create();
000002D3                      969  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 412
000002D3 FC000000             970  	call !!_R_CSI01_Create
000002D7                      971  	;***      413 : 	R_CSI00_Create();
000002D7                      972  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 413
000002D7 FC000000             973  	call !!_R_CSI00_Create
000002DB                      974  	;***      414 : 
000002DB                      975  	;***      415 : 	R_TAU0_Channel0_Start();
000002DB                      976  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 415
000002DB FC000000             977  	call !!_R_TAU0_Channel0_Start
000002DF                      978  	;***      416 : 	R_UART3_Start();
000002DF                      979  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 416
000002DF FC000000             980  	call !!_R_UART3_Start
000002E3                      981  	;***      417 : 	R_UART1_Start();
000002E3                      982  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 417
000002E3 FC000000             983  	call !!_R_UART1_Start
000002E7                      984  	;***      418 : 	R_UART2_Start();
000002E7                      985  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 418
000002E7 FC000000             986  	call !!_R_UART2_Start
000002EB                      987  	;***      419 : 	R_CSI00_Start();
000002EB                      988  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 419
000002EB FC000000             989  	call !!_R_CSI00_Start
000002EF                      990  	;***      420 : //    R_CSI01_Start();
000002EF                      991  	;***      421 : 
000002EF                      992  	;***      422 : 	R_ADC_Create();
000002EF                      993  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 422
000002EF FC000000             994  	call !!_R_ADC_Create
000002F3                      995  	;***      423 : 	R_ADC_Set_OperationOn();
000002F3                      996  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 423
000002F3 FC000000             997  	call !!_R_ADC_Set_OperationOn
000002F7                      998  	;***      424 : 	R_ADC_Start();
000002F7                      999  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 424
000002F7 FC000000            1000  	call !!_R_ADC_Start
000002FB                     1001  	;***      425 : 
000002FB                     1002  	;***      426 : 	R_DAC_Create();
000002FB                     1003  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 426
000002FB FC000000            1004  	call !!_R_DAC_Create
000002FF                     1005  	;***      427 : 	CVCC_Current_Set(0x0);
000002FF                     1006  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 427
000002FF F1                  1007  	clrb a
00000300 FC000000            1008  	call !!_R_DAC0_Set_ConversionValue
00000304                     1009  	;***      428 : 	Salt_Analog_Set(0x0);
00000304                     1010  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 428
00000304 F1                  1011  	clrb a
00000305 FC000000            1012  	call !!_R_DAC1_Set_ConversionValue
00000309                     1013  	;***      429 : 	R_DAC0_Start();
00000309                     1014  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 429
00000309 FC000000            1015  	call !!_R_DAC0_Start
0000030D                     1016  	;***      430 : 	R_DAC1_Start();
0000030D                     1017  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 430
0000030D EC000000            1018  	br !!_R_DAC1_Start
00000311                     1019  	;***      431 : 	/* End user code. Do not edit comment generated here */
00000311                     1020  	;***      432 : }
00000311                     1021  	;***      433 : 
00000311                     1022  	;***      434 : /* Start user code for adding. Do not edit comment generated here */
00000311                     1023  	;***      435 : /* End user code. Do not edit comment generated here */
00000000                     1024  	.SECTION .data,DATA
00000000                     1025  	.ALIGN 2
00000000                     1026  _g_adc_ch:
00000000 0000                1027  	.DS (2)
00000002                     1028  _led_st:
00000002 FF                  1029  	.DB 0xFF
00000003                     1030  _send_data:
00000003 23                  1031  	.DB 0x23,0xAB
00000004 AB              
00000005                     1032  _this_size:
00000005 12                  1033  	.DB 0x12
00000006                     1034  _this_size_2:
00000006 12                  1035  	.DB 0x12
00000007                     1036  _send_buf:
00000007 08                  1037  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                     1038  	.ALIGN 2
0000000E                     1039  _data_crc:
0000000E 24770000            1040  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                     1041  _dac_out:
00000016 FF                  1042  	.DB 0xFF,0xFF
00000017 FF              
00000000                     1043  	.SECTION .bss,BSS
00000000                     1044  _g_e_status:
00000000                     1045  	.DS (1)
00000001 00                  1046  	.ALIGN 2
00000002                     1047  _ret_number_setting:
00000002                     1048  	.DS (38)
00000028                     1049  _flow_p:
00000028                     1050  	.DS (1)
00000029                     1051  _salt_h_p:
00000029                     1052  	.DS (1)
0000002A                     1053  _g_eeprom_wren:
0000002A                     1054  	.DS (1)
0000002B                     1055  _receive_data:
0000002B                     1056  	.DS (2)
0000002D 00                  1057  	.ALIGN 2
0000002E                     1058  _receive_setting:
0000002E                     1059  	.DS (38)
00000054                     1060  _set:
00000054                     1061  	.DS (1)
00000055 00                  1062  	.ALIGN 2
00000056                     1063  _rx_data:
00000056                     1064  	.DS (12)
00000062                     1065  	.ALIGN 2
00000062                     1066  _data_f:
00000062                     1067  	.DS (4)
00000066                     1068  	.ALIGN 2
00000066                     1069  _data_f_test:
00000066                     1070  	.DS (4)
0000006A                     1071  	.ALIGN 2
0000006A                     1072  _g_control_buffer_f:
0000006A                     1073  	.DS (6)
00000070                     1074  	.ALIGN 2
00000070                     1075  _g_control_buffer_u32:
00000070                     1076  	.DS (6)
00000076                     1077  _handsensor_status:
00000076                     1078  	.DS (1)
00000077                     1079  _g_handsensor_status:
00000077                     1080  	.DS (2)
00000079                     1081  _g_crc:
00000079                     1082  	.DS (8)
00000081 00                  1083  	.ALIGN 2
00000082                     1084  _g_crc_32:
00000082                     1085  	.DS (32)
000000A2                     1086  _rx_count:
000000A2                     1087  	.DS (1)
00000000                     1088  	.SECTION .const,CONST
00000000                     1089  .STR@1:
00000000 00000000            1090  	.DS (4)
00000004 01                  1091  	.DB 0x01
00000005                     1092  .STR@1683:
00000005 00                  1093  	.DS (1)
00000006 01                  1094  	.DB 0x01
00000007 0000                1095  	.DS (2)
00000009 01                  1096  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               785 (00000311) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 163 (000000A3) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl001\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

