RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Fri Jan 28 15:05:25 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_timerSetting
00000000                       25  	.EXTERN _g_numberSetting
00000000                       26  	.EXTERN _g_io_status
00000000                       27  	.EXTERN _g_Tick
00000000                       28  	.EXTERN _g_commnunication_flag
00000000                       29  	.EXTERN _g_machine_mode
00000000                       30  	.EXTERN _g_systemTime
00000000                       31  	.EXTERN _g_csi_rev_end
00000000                       32  	.EXTERN _g_uart2_fault
00000000                       33  	.EXTERN _g_uart2_sendend
00000000                       34  	.EXTERN _g_uart3_sendend
00000000                       35  	.EXTERN _g_rx_data
00000000                       36  	.EXTERN _g_uart3_rx_data
00000000                       37  	.PUBLIC _g_adc_ch
00000000                       38  	.PUBLIC _g_e_status
00000000                       39  	.PUBLIC _ret_number_setting
00000000                       40  	.PUBLIC _led_st
00000000                       41  	.PUBLIC _flow_p
00000000                       42  	.PUBLIC _salt_h_p
00000000                       43  	.PUBLIC _g_eeprom_wren
00000000                       44  	.PUBLIC _send_data
00000000                       45  	.PUBLIC _receive_data
00000000                       46  	.PUBLIC _receive_setting
00000000                       47  	.PUBLIC _set
00000000                       48  	.PUBLIC _rx_data
00000000                       49  	.PUBLIC _data_f
00000000                       50  	.PUBLIC _data_f_test
00000000                       51  	.PUBLIC _g_control_buffer_f
00000000                       52  	.PUBLIC _g_control_buffer_u32
00000000                       53  	.PUBLIC _handsensor_status
00000000                       54  	.PUBLIC _g_handsensor_status
00000000                       55  	.PUBLIC _this_size
00000000                       56  	.PUBLIC _this_size_2
00000000                       57  	.PUBLIC _send_buf
00000000                       58  	.PUBLIC _g_crc
00000000                       59  	.PUBLIC _g_crc_32
00000000                       60  	.PUBLIC _data_crc
00000000                       61  	.PUBLIC _rx_count
00000000                       62  	.PUBLIC _dac_out
00000000                       63  	.PUBLIC _nostop_checkHandSensor
00000000                       64  	.EXTERN _ns_delay_ms
00000000                       65  	.PUBLIC _readHS
00000000                       66  	.EXTERN _delay_ms
00000000                       67  	.PUBLIC _main
00000000                       68  	.PUBLIC _R_MAIN_UserInit
00000000                       69  	.EXTERN _EEPROM_Init
00000000                       70  	.EXTERN _EE_SPI_Read
00000000                       71  	.EXTERN _R_UART2_Receive
00000000                       72  	.EXTERN _R_UART3_Receive
00000000                       73  	.EXTERN _sendRS485
00000000                       74  	.EXTERN _handSensorLED
00000000                       75  	.EXTERN _realTimeResponse
00000000                       76  	.EXTERN _main_loop_20211111
00000000                       77  	.EXTERN _UpdateMachineStatus
00000000                       78  	.EXTERN _R_UART2_Stop
00000000                       79  	.EXTERN _R_UART2_Start
00000000                       80  	.EXTERN _sendR485_7byte
00000000                       81  	.EXTERN _R_UART3_Stop
00000000                       82  	.EXTERN _R_UART3_Start
00000000                       83  	.EXTERN _crc8_4
00000000                       84  	.EXTERN _crc8_1
00000000                       85  	.EXTERN _R_WDT_Restart
00000000                       86  	.EXTERN _R_TAU0_Create
00000000                       87  	.EXTERN _R_SAU0_Create
00000000                       88  	.EXTERN _R_SAU1_Create
00000000                       89  	.EXTERN _R_UART1_Create
00000000                       90  	.EXTERN _R_UART2_Create
00000000                       91  	.EXTERN _R_UART3_Create
00000000                       92  	.EXTERN _R_RTC_Create
00000000                       93  	.EXTERN _R_PORT_Create_UserInit
00000000                       94  	.EXTERN _R_CSI01_Create
00000000                       95  	.EXTERN _R_CSI00_Create
00000000                       96  	.EXTERN _R_TAU0_Channel0_Start
00000000                       97  	.EXTERN _R_UART1_Start
00000000                       98  	.EXTERN _R_CSI00_Start
00000000                       99  	.EXTERN _R_ADC_Create
00000000                      100  	.EXTERN _R_ADC_Set_OperationOn
00000000                      101  	.EXTERN _R_ADC_Start
00000000                      102  	.EXTERN _R_DAC_Create
00000000                      103  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                      104  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                      105  	.EXTERN _R_DAC0_Start
00000000                      106  	.EXTERN _R_DAC1_Start
00000000                      107  
00000000                      108  	.SECTION .textf,TEXTF
00000000                      109  _nostop_checkHandSensor:
00000000                      110  	.STACK _nostop_checkHandSensor = 4
00000000                      111  	;***        1 : /***********************************************************************************************************************
00000000                      112  	;***        2 :  * DISCLAIMER
00000000                      113  	;***        3 :  * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      114  	;***        4 :  * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      115  	;***        5 :  * applicable laws, including copyright laws.
00000000                      116  	;***        6 :  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      117  	;***        7 :  * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      118  	;***        8 :  * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      119  	;***        9 :  * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      120  	;***       10 :  * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      121  	;***       11 :  * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      122  	;***       12 :  * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability
00000000                      123  	;***       13 :  * of this software. By using this software, you agree to the additional terms and conditions found by accessing the
00000000                      124  	;***       14 :  * following link:
00000000                      125  	;***       15 :  * http://www.renesas.com/disclaimer
00000000                      126  	;***       16 :  *
00000000                      127  	;***       17 :  * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      128  	;***       18 :  ***********************************************************************************************************************/
00000000                      129  	;***       19 : 
00000000                      130  	;***       20 : /***********************************************************************************************************************
00000000                      131  	;***       21 :  * File Name    : r_main.c
00000000                      132  	;***       22 :  * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      133  	;***       23 :  * Device(s)    : R5F104ML
00000000                      134  	;***       24 :  * Tool-Chain   : CCRL
00000000                      135  	;***       25 :  * Description  : This file implements main function.
00000000                      136  	;***       26 :  * Creation Date: 30/11/2021
00000000                      137  	;***       27 :  ***********************************************************************************************************************/
00000000                      138  	;***       28 : 
00000000                      139  	;***       29 : /***********************************************************************************************************************
00000000                      140  	;***       30 :  Includes
00000000                      141  	;***       31 :  ***********************************************************************************************************************/
00000000                      142  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      143  	;***       33 : #include "r_cg_cgc.h"
00000000                      144  	;***       34 : #include "r_cg_port.h"
00000000                      145  	;***       35 : #include "r_cg_serial.h"
00000000                      146  	;***       36 : #include "r_cg_adc.h"
00000000                      147  	;***       37 : #include "r_cg_dac.h"
00000000                      148  	;***       38 : #include "r_cg_timer.h"
00000000                      149  	;***       39 : #include "r_cg_wdt.h"
00000000                      150  	;***       40 : #include "r_cg_rtc.h"
00000000                      151  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      152  	;***       42 : #include "EEPROM.h"
00000000                      153  	;***       43 : #include "usr_timer.h"
00000000                      154  	;***       44 : #include "usr_setting_sheet.h"
00000000                      155  	;***       45 : #include "crc8.h"
00000000                      156  	;***       46 : #include "hwm/main.h"
00000000                      157  	;***       47 : #include "r_cg_userdefine.h"
00000000                      158  	;***       48 : 
00000000                      159  	;***       49 : /***********************************************************************************************************************
00000000                      160  	;***       50 :  Pragma directive
00000000                      161  	;***       51 :  ***********************************************************************************************************************/
00000000                      162  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      163  	;***       53 : #define CVCC_Current_Set(a) R_DAC0_Set_ConversionValue(a)
00000000                      164  	;***       54 : #define Salt_Analog_Set(a) R_DAC1_Set_ConversionValue(a)
00000000                      165  	;***       55 : //#define TESTING_FIRMWARE
00000000                      166  	;***       56 : /* End user code. Do not edit comment generated here */
00000000                      167  	;***       57 : 
00000000                      168  	;***       58 : /***********************************************************************************************************************
00000000                      169  	;***       59 :  Global variables and functions
00000000                      170  	;***       60 :  ***********************************************************************************************************************/
00000000                      171  	;***       61 : /* Start user code for global. Do not edit comment generated here */
00000000                      172  	;***       62 : 
00000000                      173  	;***       63 : volatile int g_adc_ch = 0;
00000000                      174  	;***       64 : union EEPROM_status_u g_e_status;
00000000                      175  	;***       65 : struct Number_Setting_s ret_number_setting;
00000000                      176  	;***       66 : uint8_t led_st = 0xff;
00000000                      177  	;***       67 : uint8_t flow_p, salt_h_p;
00000000                      178  	;***       68 : uint8_t g_eeprom_wren;
00000000                      179  	;***       69 : uint8_t send_data[2] = { 0x23, 0xab };
00000000                      180  	;***       70 : uint8_t receive_data[2];
00000000                      181  	;***       71 : struct Number_Setting_s receive_setting;
00000000                      182  	;***       72 : union EEPROM_status_u set;
00000000                      183  	;***       73 : uint32_t rx_data[3];
00000000                      184  	;***       74 : float data_f;
00000000                      185  	;***       75 : union byte_to_float data_f_test;
00000000                      186  	;***       76 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      187  	;***       77 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      188  	;***       78 : 
00000000                      189  	;***       79 : union {
00000000                      190  	;***       80 : 	struct {
00000000                      191  	;***       81 : 		uint8_t up_signal;
00000000                      192  	;***       82 : 	};
00000000                      193  	;***       83 : 	uint8_t status;
00000000                      194  	;***       84 : } handsensor_status;
00000000                      195  	;***       85 : uint8_t g_handsensor_status[2];
00000000                      196  	;***       86 : void nostop_checkHandSensor(void) {
00000000                      197  	;***       87 : 	if (DETECT_U() == I_ON) {
00000000                      198  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000000 8D07                 199  	mov a, 0xFFF07
00000002 315300               200  	bt a.5, $.BB@LABEL@1_5
00000005                      201  .BB@LABEL@1_1:	; if_then_bb
00000005                      202  	;***       88 : 		if (ns_delay_ms(&g_Tick.tickHandSensor[0], 500)) {
00000005                      203  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000005 F6                   204  	clrw ax
00000006 14                   205  	movw de, ax
00000007 32F401               206  	movw bc, #0x01F4
0000000A 300000               207  	movw ax, #LOWW(_g_Tick+0x0008C)
0000000D FC000000             208  	call !!_ns_delay_ms
00000011 F7                   209  	clrw bc
00000012 43                   210  	cmpw ax, bc
00000013 DD00                 211  	bz $.BB@LABEL@1_9
00000015                      212  .BB@LABEL@1_2:	; if_then_bb16
00000015                      213  	;***       89 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0 ? 1 : 0;
00000015                      214  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 89
00000015 D50000               215  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   216  	oneb a
00000019 61E8                 217  	skz
0000001B                      218  .BB@LABEL@1_3:	; bb22
0000001B F1                   219  	clrb a
0000001C                      220  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               221  	mov !LOWW(_g_handsensor_status), a
0000001F                      222  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
0000001F D7                   223  	ret
00000020                      224  .BB@LABEL@1_5:	; if_else_bb
00000020                      225  	;***       90 : 		}
00000020                      226  	;***       91 : 	} else if (DETECT_D() == I_ON) {
00000020                      227  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000020 8D07                 228  	mov a, 0xFFF07
00000022 314300               229  	bt a.4, $.BB@LABEL@1_7
00000025                      230  .BB@LABEL@1_6:	; if_then_bb43
00000025                      231  	;***       92 : 		g_handsensor_status[1] = 1;
00000025                      232  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000025 E50000               233  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   234  	ret
00000029                      235  .BB@LABEL@1_7:	; if_else_bb44
00000029                      236  	;***       93 : 	} else if (DETECT_U() == I_OFF) {
00000029                      237  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 93
00000029 8D07                 238  	mov a, 0xFFF07
0000002B 315300               239  	bt a.5, $.BB@LABEL@1_9
0000002E                      240  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      241  	;***       94 : 
0000002E                      242  	;***       95 : 	} else if (DETECT_D() == I_OFF) {
0000002E                      243  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 95
0000002E 8D07                 244  	mov a, 0xFFF07
00000030                      245  .BB@LABEL@1_9:	; return
00000030                      246  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000030 D7                   247  	ret
00000031                      248  _readHS:
00000031                      249  	.STACK _readHS = 4
00000031                      250  	;***       96 : 
00000031                      251  	;***       97 : 	}
00000031                      252  	;***       98 : }
00000031                      253  	;***       99 : uint8_t readHS(void) {
00000031                      254  	;***      100 : 	if (DETECT_U()) {
00000031                      255  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000031 8D07                 256  	mov a, 0xFFF07
00000033 315300               257  	bt a.5, $.BB@LABEL@2_2
00000036                      258  .BB@LABEL@2_1:	; bb33
00000036                      259  	;***      101 : 		delay_ms(2);
00000036                      260  	;***      102 : 		if (DETECT_U())
00000036                      261  	;***      103 : 			return 1;
00000036                      262  	;***      104 : 		return 0;
00000036                      263  	;***      105 : 	} else
00000036                      264  	;***      106 : 		return 0;
00000036                      265  	;***      107 : }
00000036                      266  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 107
00000036 F1                   267  	clrb a
00000037 D7                   268  	ret
00000038                      269  .BB@LABEL@2_2:	; if_then_bb
00000038                      270  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000038 F7                   271  	clrw bc
00000039 E6                   272  	onew ax
0000003A A1                   273  	incw ax
0000003B FC000000             274  	call !!_delay_ms
0000003F                      275  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 102
0000003F 8D07                 276  	mov a, 0xFFF07
00000041 315A                 277  	shr a, 0x05
00000043 5C01                 278  	and a, #0x01
00000045 D7                   279  	ret
00000046                      280  _main:
00000046                      281  	.STACK _main = 24
00000046                      282  	;***      108 : uint8_t this_size = sizeof(g_io_status);
00000046                      283  	;***      109 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      284  	;***      110 : uint8_t send_buf[7] = { 8, 1, 2, 3, 4, 5, 6 };
00000046                      285  	;***      111 : char g_crc[8];
00000046                      286  	;***      112 : uint32_t g_crc_32[8];
00000046                      287  	;***      113 : uint32_t data_crc[2] = { 30500, 60200 };
00000046                      288  	;***      114 : uint8_t rx_count;
00000046                      289  	;***      115 : uint8_t dac_out[2] = { 0xff, 0xff };
00000046                      290  	;***      116 : /* End user code. Do not edit comment generated here */
00000046                      291  	;***      117 : 
00000046                      292  	;***      118 : void R_MAIN_UserInit(void);
00000046                      293  	;***      119 : 
00000046                      294  	;***      120 : /***********************************************************************************************************************
00000046                      295  	;***      121 :  * Function Name: main
00000046                      296  	;***      122 :  * Description  : This function implements main function.
00000046                      297  	;***      123 :  * Arguments    : None
00000046                      298  	;***      124 :  * Return Value : None
00000046                      299  	;***      125 :  ***********************************************************************************************************************/
00000046                      300  	;***      126 : void main(void) {
00000046                      301  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 126
00000046 2010                 302  	subw sp, #0x10
00000048                      303  	;***      127 : 	R_MAIN_UserInit();
00000048                      304  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 127
00000048 FE0000               305  	call $!_R_MAIN_UserInit
0000004B                      306  	;***      128 : 	/* Start user code. Do not edit comment generated here */
0000004B                      307  	;***      129 : 
0000004B                      308  	;***      130 : 	//TODO: EEPROM Initialize and read Setting
0000004B                      309  	;***      131 : 	EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      310  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
0000004B F2                   311  	clrb c
0000004C 300000               312  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             313  	call !!_EEPROM_Init
00000053 F6                   314  	clrw ax
00000054                      315  	;***      132 : 	EE_SPI_Read((uint8_t*) &g_numberSetting, NUMBER_SETTING_ADDRESS,
00000054                      316  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000054 C1                   317  	push ax
00000055 5025                 318  	mov x, #0x25
00000057 C1                   319  	push ax
00000058 F7                   320  	clrw bc
00000059 300000               321  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             322  	call !!_EE_SPI_Read
00000060 1004                 323  	addw sp, #0x04
00000062 F6                   324  	clrw ax
00000063                      325  	;***      133 : 			numberSettingSize);
00000063                      326  	;***      134 : 	EE_SPI_Read((uint8_t*) &g_timerSetting, TIME_SETTING_ADDRESS,
00000063                      327  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 134
00000063 C1                   328  	push ax
00000064 5095                 329  	mov x, #0x95
00000066 C1                   330  	push ax
00000067 320008               331  	movw bc, #0x0800
0000006A 300000               332  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             333  	call !!_EE_SPI_Read
00000071 1004                 334  	addw sp, #0x04
00000073                      335  	;***      135 : 			timeSettingSize);
00000073                      336  	;***      136 : 	_settingNumber = g_numberSetting;
00000073                      337  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 136
00000073 342600               338  	movw de, #0x0026
00000076 320000               339  	movw bc, #LOWW(_g_numberSetting)
00000079 300000               340  	movw ax, #LOWW(__settingNumber)
0000007C FC000000             341  	call !!_memcpy
00000080                      342  	;***      137 : 	_settingTime = g_timerSetting;
00000080                      343  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 137
00000080 349600               344  	movw de, #0x0096
00000083 320000               345  	movw bc, #LOWW(_g_timerSetting)
00000086 300000               346  	movw ax, #LOWW(__settingTime)
00000089 FC000000             347  	call !!_memcpy
0000008D                      348  	;***      138 : 	EEPROM_PROTECT_EN();
0000008D                      349  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 138
0000008D 71030E               350  	clr1 0xFFF0E.0
00000090                      351  	;***      139 : 
00000090                      352  	;***      140 : 	//TODO: Start receive command from Raspberry Pi
00000090                      353  	;***      141 : 	R_UART2_Receive(g_rx_data, 6);
00000090                      354  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
00000090 320600               355  	movw bc, #0x0006
00000093 300000               356  	movw ax, #LOWW(_g_rx_data)
00000096 FC000000             357  	call !!_R_UART2_Receive
0000009A                      358  	;***      142 : 
0000009A                      359  	;***      143 : 	//TODO: Start receive data from RS485
0000009A                      360  	;***      144 : 	O_RS485_MODE_PIN = 0U;
0000009A                      361  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 144
0000009A 710300               362  	clr1 0xFFF00.0
0000009D                      363  	;***      145 : 	R_UART3_Receive(g_uart3_rx_data, 7);
0000009D                      364  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
0000009D 320700               365  	movw bc, #0x0007
000000A0 300000               366  	movw ax, #LOWW(_g_uart3_rx_data)
000000A3 FC000000             367  	call !!_R_UART3_Receive
000000A7 F6                   368  	clrw ax
000000A8                      369  	;***      146 : 	uint8_t wts, vpcb, vpcb_v = 1;
000000A8                      370  	;***      147 : 	sendRS485(0xff, 82, 2, 12);
000000A8                      371  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
000000A8 C1                   372  	push ax
000000A9 500C                 373  	mov x, #0x0C
000000AB C1                   374  	push ax
000000AC 5202                 375  	mov c, #0x02
000000AE 3052FF               376  	movw ax, #0xFF52
000000B1 FC000000             377  	call !!_sendRS485
000000B5 1004                 378  	addw sp, #0x04
000000B7                      379  	;***      148 : 
000000B7                      380  	;***      149 : 	//TODO: Turn off Hand Sensor LED
000000B7                      381  	;***      150 : 	g_pre_color = BLUE;
000000B7                      382  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
000000B7 CF000003             383  	mov !LOWW(_g_pre_color), #0x03
000000BB                      384  	;***      151 : 	handSensorLED(BLACK);
000000BB                      385  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
000000BB F1                   386  	clrb a
000000BC FC000000             387  	call !!_handSensorLED
000000C0                      388  	;***      152 : 
000000C0                      389  	;***      153 : 	//TODO: Set default washing mode
000000C0                      390  	;***      154 : 	g_machine_mode = HAND_WASHING;
000000C0                      391  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 154
000000C0 E50000               392  	oneb !LOWW(_g_machine_mode)
000000C3 E1                   393  	oneb a
000000C4 9802                 394  	mov [sp+0x02], a
000000C6 9801                 395  	mov [sp+0x01], a
000000C8 9800                 396  	mov [sp+0x00], a
000000CA                      397  .BB@LABEL@3_1:	; bb212
000000CA                      398  	;***      155 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000CA                      399  	;***      156 : 
000000CA                      400  	;***      157 : //TODO: Run Initialize Operation
000000CA                      401  	;***      158 : //    main_init_20211111();
000000CA                      402  	;***      159 : #ifdef TESTING_FIRMWARE
000000CA                      403  	;***      160 : 	uint8_t state = OFF;
000000CA                      404  	;***      161 : 	while (1) {
000000CA                      405  	;***      162 : 		if (ns_delay_ms(&g_Tick.tickCustom[2], 500)) {
000000CA                      406  	;***      163 : 			//    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
000000CA                      407  	;***      164 : 			//					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
000000CA                      408  	;***      165 : 			//				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
000000CA                      409  	;***      166 : 			//						g_io_status.refined.FlowValue);
000000CA                      410  	;***      167 : 			//			}
000000CA                      411  	;***      168 : 			dac_out[0] += 13;
000000CA                      412  	;***      169 : 			CVCC_Current_Set(dac_out[0]);
000000CA                      413  	;***      170 : 			dac_out[1] += 13;
000000CA                      414  	;***      171 : 			Salt_Analog_Set(dac_out[1]);
000000CA                      415  	;***      172 : 		}
000000CA                      416  	;***      173 : 		if (ns_delay_ms(&g_Tick.tickCustom[3], 1000)) {
000000CA                      417  	;***      174 : 			O_HS_IDA_PIN = O_HS_ICL_PIN = O_SUPPLY_WATER_PIN_SV1 =
000000CA                      418  	;***      175 : 			O_CTRL_OUT_PIN = O_SPOUT_WATER_PIN_SV2 = O_PUMP_SALT_PIN_SP1 =
000000CA                      419  	;***      176 : 			O_ALK_PUMP_PIN_P2 = O_ACID_PUMP_PIN_P1 = O_PUMP_PRESS_PIN =
000000CA                      420  	;***      177 : 			O_ALARM_OUT_PIN = O_NEUTRALIZE_PIN_SV7 =
000000CA                      421  	;***      178 : 			O_DRAIN_ALK_PIN_SV6 = O_DRAIN_ACID_PIN_SV5 = O_SPOUT_ACID_PIN_SV3 =
000000CA                      422  	;***      179 : 			O_SPOUT_ALK_PIN_SV4 = O_CVCC_ON_PIN = O_CVCC_ALARM_RS =
000000CA                      423  	;***      180 : 			O_OPTION_2_PIN_SV8 = O_OPTION_3_PIN_SV9 = O_OPTION_1_BUZZER = state;
000000CA                      424  	;***      181 : 			state = ~state;
000000CA                      425  	;***      182 : 		}
000000CA                      426  	;***      183 : 		R_WDT_Restart();
000000CA                      427  	;***      184 : 	}
000000CA                      428  	;***      185 : #endif
000000CA                      429  	;***      186 : 	while (1U) {
000000CA                      430  	;***      187 : 		realTimeResponse();
000000CA                      431  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 187
000000CA FC000000             432  	call !!_realTimeResponse
000000CE                      433  	;***      188 : 		main_loop_20211111();
000000CE                      434  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 188
000000CE FC000000             435  	call !!_main_loop_20211111
000000D2                      436  	;***      189 : 
000000D2                      437  	;***      190 : 		handSensorLED(g_color);
000000D2                      438  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 190
000000D2 8F0000               439  	mov a, !LOWW(_g_color)
000000D5 FC000000             440  	call !!_handSensorLED
000000D9                      441  	;***      191 : 		UpdateMachineStatus();
000000D9                      442  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 191
000000D9 FC000000             443  	call !!_UpdateMachineStatus
000000DD                      444  	;***      192 : 		if (g_uart2_fault == 1) {
000000DD                      445  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 192
000000DD 40000001             446  	cmp !LOWW(_g_uart2_fault), #0x01
000000E1 DF00                 447  	bnz $.BB@LABEL@3_3
000000E3                      448  .BB@LABEL@3_2:	; if_then_bb
000000E3                      449  	;***      193 : 			R_UART2_Stop();
000000E3                      450  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 193
000000E3 FC000000             451  	call !!_R_UART2_Stop
000000E7                      452  	;***      194 : 			delay_ms(10);
000000E7                      453  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 194
000000E7 F7                   454  	clrw bc
000000E8 300A00               455  	movw ax, #0x000A
000000EB FC000000             456  	call !!_delay_ms
000000EF                      457  	;***      195 : 			R_UART2_Start();
000000EF                      458  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 195
000000EF FC000000             459  	call !!_R_UART2_Start
000000F3                      460  	;***      196 : 			g_uart2_fault = 0;
000000F3                      461  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
000000F3 F50000               462  	clrb !LOWW(_g_uart2_fault)
000000F6                      463  .BB@LABEL@3_3:	; if_break_bb
000000F6                      464  	;***      197 : 		}
000000F6                      465  	;***      198 : 
000000F6                      466  	;***      199 : 		// Communication with WaterSoftener
000000F6                      467  	;***      200 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_response_flag) {
000000F6                      468  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 200
000000F6 D50000               469  	cmp0 !LOWW(_g_commnunication_flag+0x0000A)
000000F9 DD00                 470  	bz $.BB@LABEL@3_5
000000FB                      471  .BB@LABEL@3_4:	; if_then_bb23
000000FB F6                   472  	clrw ax
000000FC                      473  	;***      201 : 			sendRS485(0xff, 82, 2, 5);
000000FC                      474  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
000000FC C1                   475  	push ax
000000FD 5005                 476  	mov x, #0x05
000000FF C1                   477  	push ax
00000100 5202                 478  	mov c, #0x02
00000102 3052FF               479  	movw ax, #0xFF52
00000105 FC000000             480  	call !!_sendRS485
00000109 1004                 481  	addw sp, #0x04
0000010B                      482  	;***      202 : //    		rx_count++;
0000010B                      483  	;***      203 : 			wts = 1; //Test flag = 1
0000010B                      484  	;***      204 : 			g_commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
0000010B                      485  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 204
0000010B F50000               486  	clrb !LOWW(_g_commnunication_flag+0x0000A)
0000010E E1                   487  	oneb a
0000010F 9800                 488  	mov [sp+0x00], a
00000111                      489  .BB@LABEL@3_5:	; if_break_bb24
00000111                      490  	;***      205 : 		}
00000111                      491  	;***      206 : 		if (g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1) {
00000111                      492  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 206
00000111 40000001             493  	cmp !LOWW(_g_commnunication_flag+0x0000B), #0x01
00000115 DF00                 494  	bnz $.BB@LABEL@3_9
00000117                      495  .BB@LABEL@3_6:	; if_then_bb30
00000117                      496  	;***      207 : 			// Sand to Water softener SV state
00000117                      497  	;***      208 : 			sendRS485(0xff, 82, 24,
00000117                      498  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
00000117 360000               499  	movw hl, #LOWW(_g_io_status+0x00001)
0000011A E7                   500  	onew bc
0000011B 318300               501  	bt [hl].0, $.BB@LABEL@3_8
0000011E                      502  .BB@LABEL@3_7:	; bb38
0000011E B3                   503  	decw bc
0000011F                      504  .BB@LABEL@3_8:	; bb39
0000011F F6                   505  	clrw ax
00000120 C1                   506  	push ax
00000121 C3                   507  	push bc
00000122 5218                 508  	mov c, #0x18
00000124 3052FF               509  	movw ax, #0xFF52
00000127 FC000000             510  	call !!_sendRS485
0000012B 1004                 511  	addw sp, #0x04
0000012D                      512  	;***      209 : 					(uint32_t) g_io_status.refined.io.Valve.SV1 == 1 ? 1 : 0);
0000012D                      513  	;***      210 : 			g_commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
0000012D                      514  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
0000012D F50000               515  	clrb !LOWW(_g_commnunication_flag+0x0000B)
00000130                      516  .BB@LABEL@3_9:	; if_break_bb43
00000130 8800                 517  	mov a, [sp+0x00]
00000132                      518  	;***      211 : 		}
00000132                      519  	;***      212 : 		// Test SV1 for Water Softener
00000132                      520  	;***      213 : 		if (wts != 0) {
00000132                      521  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 213
00000132 D1                   522  	cmp0 a
00000133 DF00                 523  	bnz $.BB@LABEL@3_11
00000135                      524  .BB@LABEL@3_10:	; if_else_bb63
00000135                      525  	;***      214 : 			if (ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)) {
00000135                      526  	;***      215 : 				if (wts == 1) {
00000135                      527  	;***      216 : 					O_SUPPLY_WATER_PIN_SV1 = ON;
00000135                      528  	;***      217 : //					sendRS485(1, 82, 24,(uint32_t) 1);
00000135                      529  	;***      218 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
00000135                      530  	;***      219 : 					wts = 2;
00000135                      531  	;***      220 : 				} else {
00000135                      532  	;***      221 : 					O_SUPPLY_WATER_PIN_SV1 = OFF;
00000135                      533  	;***      222 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
00000135                      534  	;***      223 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
00000135                      535  	;***      224 : 					wts = 0;
00000135                      536  	;***      225 : 				}
00000135                      537  	;***      226 : 			}
00000135                      538  	;***      227 : 		} else {
00000135                      539  	;***      228 : 			g_Tick.tickWaterSoftenerPCB = g_systemTime;
00000135                      540  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 228
00000135 AF0000               541  	movw ax, !LOWW(_g_systemTime+0x00002)
00000138 BF0000               542  	movw !LOWW(_g_Tick+0x00052), ax
0000013B AF0000               543  	movw ax, !LOWW(_g_systemTime)
0000013E BF0000               544  	movw !LOWW(_g_Tick+0x00050), ax
00000141 EF00                 545  	br $.BB@LABEL@3_15
00000143                      546  .BB@LABEL@3_11:	; if_then_bb49
00000143                      547  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 214
00000143 F6                   548  	clrw ax
00000144 14                   549  	movw de, ax
00000145 328813               550  	movw bc, #0x1388
00000148 300000               551  	movw ax, #LOWW(_g_Tick+0x00050)
0000014B FC000000             552  	call !!_ns_delay_ms
0000014F F7                   553  	clrw bc
00000150 43                   554  	cmpw ax, bc
00000151 DD00                 555  	bz $.BB@LABEL@3_15
00000153                      556  .BB@LABEL@3_12:	; if_then_bb54
00000153 8800                 557  	mov a, [sp+0x00]
00000155                      558  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
00000155 91                   559  	dec a
00000156 DF00                 560  	bnz $.BB@LABEL@3_14
00000158                      561  .BB@LABEL@3_13:	; if_then_bb60
00000158                      562  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
00000158 717201               563  	set1 0xFFF01.7
0000015B C80002               564  	mov [sp+0x00], #0x02
0000015E EF00                 565  	br $.BB@LABEL@3_15
00000160                      566  .BB@LABEL@3_14:	; if_else_bb
00000160                      567  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
00000160 717301               568  	clr1 0xFFF01.7
00000163 F1                   569  	clrb a
00000164 9800                 570  	mov [sp+0x00], a
00000166                      571  .BB@LABEL@3_15:	; if_break_bb65
00000166                      572  	;***      229 : 		}
00000166                      573  	;***      230 : 
00000166                      574  	;***      231 : 		//Valve PCB
00000166                      575  	;***      232 : 		if (g_commnunication_flag.rs485_send_to_valve_response_flag == 1) {
00000166                      576  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 232
00000166 40000001             577  	cmp !LOWW(_g_commnunication_flag+0x0000C), #0x01
0000016A DF00                 578  	bnz $.BB@LABEL@3_17
0000016C                      579  .BB@LABEL@3_16:	; if_then_bb71
0000016C AEF8                 580  	movw ax, sp
0000016E 040600               581  	addw ax, #0x0006
00000171 B804                 582  	movw [sp+0x04], ax
00000173                      583  	;***      233 : 			// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
00000173                      584  	;***      234 : 			// 0 - Stand alone 1 - Control Valve
00000173                      585  	;***      235 : 			uint8_t _b[5] = { vpcb_v, g_uart3_sendend % 2, g_systemTime % 2, 0,
00000173                      586  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 235
00000173 340500               587  	movw de, #0x0005
00000176 320000               588  	movw bc, #SMRLW(.STR@1)
00000179 FC000000             589  	call !!_memcpy
0000017D 8802                 590  	mov a, [sp+0x02]
0000017F 9806                 591  	mov [sp+0x06], a
00000181 E1                   592  	oneb a
00000182 5F0000               593  	and a, !LOWW(_g_uart3_sendend)
00000185 9807                 594  	mov [sp+0x07], a
00000187 AF0000               595  	movw ax, !LOWW(_g_systemTime+0x00002)
0000018A AF0000               596  	movw ax, !LOWW(_g_systemTime)
0000018D 60                   597  	mov a, x
0000018E 5C01                 598  	and a, #0x01
00000190 9808                 599  	mov [sp+0x08], a
00000192 A804                 600  	movw ax, [sp+0x04]
00000194 12                   601  	movw bc, ax
00000195                      602  	;***      236 : 					1 };
00000195                      603  	;***      237 : 			sendR485_7byte(0xff, 12, _b);
00000195                      604  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 237
00000195 300CFF               605  	movw ax, #0xFF0C
00000198 FC000000             606  	call !!_sendR485_7byte
0000019C                      607  	;***      238 : 			vpcb++;
0000019C                      608  	;***      239 : 			g_commnunication_flag.rs485_send_to_valve_response_flag = 0;
0000019C                      609  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 239
0000019C F50000               610  	clrb !LOWW(_g_commnunication_flag+0x0000C)
0000019F 8801                 611  	mov a, [sp+0x01]
000001A1                      612  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 238
000001A1 81                   613  	inc a
000001A2 9801                 614  	mov [sp+0x01], a
000001A4 EF00                 615  	br $.BB@LABEL@3_19
000001A6                      616  .BB@LABEL@3_17:	; if_else_bb89
000001A6                      617  	;***      240 : 		} else if (g_commnunication_flag.rs485_get_valve_gesture_flag == 1) {
000001A6                      618  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 240
000001A6 40000001             619  	cmp !LOWW(_g_commnunication_flag+0x0000D), #0x01
000001AA DF00                 620  	bnz $.BB@LABEL@3_19
000001AC                      621  .BB@LABEL@3_18:	; if_then_bb95
000001AC AEF8                 622  	movw ax, sp
000001AE 040B00               623  	addw ax, #0x000B
000001B1 B804                 624  	movw [sp+0x04], ax
000001B3                      625  	;***      241 : 			uint8_t _b[5] = { 0, 1, 0, 0, 1 };
000001B3                      626  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 241
000001B3 340500               627  	movw de, #0x0005
000001B6 320000               628  	movw bc, #SMRLW(.STR@1658)
000001B9 FC000000             629  	call !!_memcpy
000001BD A804                 630  	movw ax, [sp+0x04]
000001BF 12                   631  	movw bc, ax
000001C0                      632  	;***      242 : 			sendR485_7byte(0xff, 1, _b);
000001C0                      633  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 242
000001C0 3001FF               634  	movw ax, #0xFF01
000001C3 FC000000             635  	call !!_sendR485_7byte
000001C7                      636  	;***      243 : 			g_commnunication_flag.rs485_get_valve_gesture_flag = 0;
000001C7                      637  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 243
000001C7 F50000               638  	clrb !LOWW(_g_commnunication_flag+0x0000D)
000001CA                      639  .BB@LABEL@3_19:	; if_break_bb99
000001CA 8801                 640  	mov a, [sp+0x01]
000001CC                      641  	;***      244 : 		}
000001CC                      642  	;***      245 : 
000001CC                      643  	;***      246 : 		if (vpcb != 0) {
000001CC                      644  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 246
000001CC D1                   645  	cmp0 a
000001CD DF00                 646  	bnz $.BB@LABEL@3_21
000001CF                      647  .BB@LABEL@3_20:	; if_else_bb123
000001CF                      648  	;***      247 : 			if (ns_delay_ms(&g_Tick.tickValvePCB, 5000)) {
000001CF                      649  	;***      248 : 				vpcb_v = vpcb_v == 1 ? 0 : 1;
000001CF                      650  	;***      249 : 				vpcb = 0;
000001CF                      651  	;***      250 : 			}
000001CF                      652  	;***      251 : 		} else {
000001CF                      653  	;***      252 : 			g_Tick.tickValvePCB = g_systemTime;
000001CF                      654  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
000001CF AF0000               655  	movw ax, !LOWW(_g_systemTime+0x00002)
000001D2 BF0000               656  	movw !LOWW(_g_Tick+0x00056), ax
000001D5 AF0000               657  	movw ax, !LOWW(_g_systemTime)
000001D8 BF0000               658  	movw !LOWW(_g_Tick+0x00054), ax
000001DB EF00                 659  	br $.BB@LABEL@3_24
000001DD                      660  .BB@LABEL@3_21:	; if_then_bb105
000001DD                      661  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
000001DD F6                   662  	clrw ax
000001DE 14                   663  	movw de, ax
000001DF 328813               664  	movw bc, #0x1388
000001E2 300000               665  	movw ax, #LOWW(_g_Tick+0x00054)
000001E5 FC000000             666  	call !!_ns_delay_ms
000001E9 F7                   667  	clrw bc
000001EA 43                   668  	cmpw ax, bc
000001EB DD00                 669  	bz $.BB@LABEL@3_24
000001ED                      670  .BB@LABEL@3_22:	; if_then_bb110
000001ED 8802                 671  	mov a, [sp+0x02]
000001EF                      672  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 248
000001EF 91                   673  	dec a
000001F0 F1                   674  	clrb a
000001F1 9801                 675  	mov [sp+0x01], a
000001F3 DF00                 676  	bnz $.BB@LABEL@3_26
000001F5                      677  .BB@LABEL@3_23:	; if_then_bb110.if_break_bb125_crit_edge
000001F5 9802                 678  	mov [sp+0x02], a
000001F7                      679  .BB@LABEL@3_24:	; if_break_bb125
000001F7                      680  	;***      253 : 		}
000001F7                      681  	;***      254 : 
000001F7                      682  	;***      255 : 		//RS485 fault check
000001F7                      683  	;***      256 : 		if (g_commnunication_flag.rs485_fault == 1) {
000001F7                      684  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 256
000001F7 40000001             685  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x01
000001FB DF00                 686  	bnz $.BB@LABEL@3_27
000001FD                      687  .BB@LABEL@3_25:	; if_then_bb131
000001FD                      688  	;***      257 : 			R_UART3_Stop();
000001FD                      689  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 257
000001FD FC000000             690  	call !!_R_UART3_Stop
00000201                      691  	;***      258 : 			g_commnunication_flag.rs485_fault++;
00000201                      692  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 258
00000201 A00000               693  	inc !LOWW(_g_commnunication_flag+0x0000E)
00000204                      694  	;***      259 : 			g_Tick.tickRS485 = g_systemTime;
00000204                      695  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 259
00000204 AF0000               696  	movw ax, !LOWW(_g_systemTime+0x00002)
00000207 BF0000               697  	movw !LOWW(_g_Tick+0x0005A), ax
0000020A AF0000               698  	movw ax, !LOWW(_g_systemTime)
0000020D BF0000               699  	movw !LOWW(_g_Tick+0x00058), ax
00000210 EF00                 700  	br $.BB@LABEL@3_30
00000212                      701  .BB@LABEL@3_26:	; bb116
00000212 E1                   702  	oneb a
00000213 EF00                 703  	br $.BB@LABEL@3_23
00000215                      704  .BB@LABEL@3_27:	; if_else_bb135
00000215                      705  	;***      260 : 		} else if (g_commnunication_flag.rs485_fault == 2) {
00000215                      706  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 260
00000215 40000002             707  	cmp !LOWW(_g_commnunication_flag+0x0000E), #0x02
00000219 DF00                 708  	bnz $.BB@LABEL@3_30
0000021B                      709  .BB@LABEL@3_28:	; if_then_bb141
0000021B                      710  	;***      261 : 			if (ns_delay_ms(&g_Tick.tickRS485, 500)) {
0000021B                      711  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 261
0000021B F6                   712  	clrw ax
0000021C 14                   713  	movw de, ax
0000021D 32F401               714  	movw bc, #0x01F4
00000220 300000               715  	movw ax, #LOWW(_g_Tick+0x00058)
00000223 FC000000             716  	call !!_ns_delay_ms
00000227 F7                   717  	clrw bc
00000228 43                   718  	cmpw ax, bc
00000229 DD00                 719  	bz $.BB@LABEL@3_30
0000022B                      720  .BB@LABEL@3_29:	; if_then_bb146
0000022B                      721  	;***      262 : 				R_UART3_Start();
0000022B                      722  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 262
0000022B FC000000             723  	call !!_R_UART3_Start
0000022F                      724  	;***      263 : 				R_UART3_Receive(g_uart3_rx_data, 7);
0000022F                      725  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 263
0000022F 320700               726  	movw bc, #0x0007
00000232 300000               727  	movw ax, #LOWW(_g_uart3_rx_data)
00000235 FC000000             728  	call !!_R_UART3_Receive
00000239                      729  	;***      264 : 				g_commnunication_flag.rs485_fault = 0;
00000239                      730  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 264
00000239 F50000               731  	clrb !LOWW(_g_commnunication_flag+0x0000E)
0000023C                      732  .BB@LABEL@3_30:	; if_break_bb150
0000023C                      733  	;***      265 : 			}
0000023C                      734  	;***      266 : 		}
0000023C                      735  	;***      267 : //--------------------------------- Testing code---------------------------------------------------------------
0000023C                      736  	;***      268 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
0000023C                      737  	;***      269 : //    		P6_bit.no3 = ~P6_bit.no3;
0000023C                      738  	;***      270 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
0000023C                      739  	;***      271 : //    	}
0000023C                      740  	;***      272 : //    	if(g_machine_state.user == 1){
0000023C                      741  	;***      273 : //    		HandWashingMode_nostop();
0000023C                      742  	;***      274 : //    	}else{
0000023C                      743  	;***      275 : //    		g_Tick.tickCustom[1] = g_systemTime;
0000023C                      744  	;***      276 : //    	}
0000023C                      745  	;***      277 : 
0000023C                      746  	;***      278 : 		// Check
0000023C                      747  	;***      279 : 		flow_p = I_FLOW_PLUSE_PIN == 1 ? 1 : 0;
0000023C                      748  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 279
0000023C 8D00                 749  	mov a, 0xFFF00
0000023E 719C                 750  	mov1 CY, a.1
00000240 E1                   751  	oneb a
00000241 61C8                 752  	skc
00000243                      753  .BB@LABEL@3_31:	; bb158
00000243 F1                   754  	clrb a
00000244                      755  .BB@LABEL@3_32:	; bb160
00000244 9F0000               756  	mov !LOWW(_flow_p), a
00000247                      757  	;***      280 : 		if (ns_delay_ms(&g_Tick.tickCustom[1], 60000)) {
00000247                      758  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 280
00000247 F6                   759  	clrw ax
00000248 14                   760  	movw de, ax
00000249 3260EA               761  	movw bc, #0xEA60
0000024C 300000               762  	movw ax, #LOWW(_g_Tick+0x00098)
0000024F FC000000             763  	call !!_ns_delay_ms
00000253                      764  	;***      281 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
00000253                      765  	;***      282 : //				g_TickKeeper.SV1_ON_minutes++;
00000253                      766  	;***      283 : //				g_TickKeeper.SV1_OFF_minutes = 0;
00000253                      767  	;***      284 : //			}else{
00000253                      768  	;***      285 : //				g_TickKeeper.SV1_OFF_minutes++;
00000253                      769  	;***      286 : //				g_TickKeeper.SV1_ON_minutes = 0;
00000253                      770  	;***      287 : //			}
00000253                      771  	;***      288 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
00000253                      772  	;***      289 : //				g_TickKeeper.SV2_ON_minutes++;
00000253                      773  	;***      290 : //				g_TickKeeper.SV2_OFF_minutes = 0;
00000253                      774  	;***      291 : //			}else{
00000253                      775  	;***      292 : //				g_TickKeeper.SV2_OFF_minutes++;
00000253                      776  	;***      293 : //				g_TickKeeper.SV2_ON_minutes = 0;
00000253                      777  	;***      294 : //			}
00000253                      778  	;***      295 : 		}
00000253                      779  	;***      296 : 
00000253                      780  	;***      297 : 		if (ns_delay_ms(&g_Tick.tick1s, 1000)) {
00000253                      781  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 297
00000253 F6                   782  	clrw ax
00000254 14                   783  	movw de, ax
00000255 32E803               784  	movw bc, #0x03E8
00000258 300000               785  	movw ax, #LOWW(_g_Tick+0x00004)
0000025B FC000000             786  	call !!_ns_delay_ms
0000025F F7                   787  	clrw bc
00000260 43                   788  	cmpw ax, bc
00000261 DD00                 789  	bz $.BB@LABEL@3_36
00000263                      790  .BB@LABEL@3_33:	; if_then_bb174
00000263                      791  	;***      298 : 
00000263                      792  	;***      299 : 			led_st = led_st == 0 ? 0xff : 0x00;
00000263                      793  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 299
00000263 D50000               794  	cmp0 !LOWW(_led_st)
00000266 51FF                 795  	mov a, #0xFF
00000268 61E8                 796  	skz
0000026A                      797  .BB@LABEL@3_34:	; bb180
0000026A F1                   798  	clrb a
0000026B                      799  .BB@LABEL@3_35:	; bb182
0000026B 9F0000               800  	mov !LOWW(_led_st), a
0000026E                      801  	;***      300 : 			uint8_t state = g_uart2_sendend;
0000026E                      802  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 300
0000026E 8F0000               803  	mov a, !LOWW(_g_uart2_sendend)
00000271                      804  	;***      301 : 			g_crc[6] = crc8_4((uint8_t*) &g_timerSetting,
00000271                      805  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 301
00000271 5294                 806  	mov c, #0x94
00000273 300000               807  	movw ax, #LOWW(_g_timerSetting)
00000276 FC000000             808  	call !!_crc8_4
0000027A 9F0000               809  	mov !LOWW(_g_crc+0x00006), a
0000027D                      810  	;***      302 : 					sizeof(struct Timer_Setting_s) - 2);
0000027D                      811  	;***      303 : 			g_crc[7] = crc8_1((uint8_t*) &g_timerSetting,
0000027D                      812  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 303
0000027D 5294                 813  	mov c, #0x94
0000027F 300000               814  	movw ax, #LOWW(_g_timerSetting)
00000282 FC000000             815  	call !!_crc8_1
00000286 9F0000               816  	mov !LOWW(_g_crc+0x00007), a
00000289                      817  .BB@LABEL@3_36:	; if_break_bb197
00000289                      818  	;***      304 : 					sizeof(struct Timer_Setting_s) - 2);
00000289                      819  	;***      305 : //    	    switch (g_color) {
00000289                      820  	;***      306 : //				case BLACK:
00000289                      821  	;***      307 : //					g_color = RED;
00000289                      822  	;***      308 : //					break;
00000289                      823  	;***      309 : //				case RED:
00000289                      824  	;***      310 : //					g_color = BLUE;
00000289                      825  	;***      311 : //					break;
00000289                      826  	;***      312 : //				case BLUE:
00000289                      827  	;***      313 : //					g_color = WHITE;
00000289                      828  	;***      314 : //					break;
00000289                      829  	;***      315 : //				default:
00000289                      830  	;***      316 : //					g_color = BLACK;
00000289                      831  	;***      317 : //					break;
00000289                      832  	;***      318 : //			}
00000289                      833  	;***      319 : 			if (led_st == 0x00) {
00000289                      834  	;***      320 : 
00000289                      835  	;***      321 : //    			O_CVCC_ON_PIN = ON;
00000289                      836  	;***      322 : //    			O_HS_ICL_PIN = 0;
00000289                      837  	;***      323 : //    			O_HS_IDA_PIN = 1;
00000289                      838  	;***      324 : //    			handSensorLED(RED);
00000289                      839  	;***      325 : //    			O_CVCC_ALARM_RS = 1;
00000289                      840  	;***      326 : //    			O_PUMP_SALT_PIN = ON;
00000289                      841  	;***      327 : //    			electrolyticOperationON();
00000289                      842  	;***      328 : //    			g_io_status.refined.Valve.SV4 = 1;
00000289                      843  	;***      329 : //				g_io_status.refined.Pump2 = 1;
00000289                      844  	;***      330 : //				g_io_status.refined.Valve.SV5 = 0;
00000289                      845  	;***      331 : //				g_io_status.refined.Pump1 = 0;
00000289                      846  	;***      332 : //				g_io_status.refined.SaltLowLevel = 1;
00000289                      847  	;***      333 : //    			e_send[0]++;
00000289                      848  	;***      334 : //    			g_numberSetting.upperVoltage1++;
00000289                      849  	;***      335 : //    			g_numberSetting.crc--;
00000289                      850  	;***      336 : //    			g_numberSetting.crc2++;
00000289                      851  	;***      337 : //    			g_numberSetting.lowerFlow++;
00000289                      852  	;***      338 : //    			g_numberSetting.hello++;
00000289                      853  	;***      339 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
00000289                      854  	;***      340 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
00000289                      855  	;***      341 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
00000289                      856  	;***      342 : 			} else {
00000289                      857  	;***      343 : //    			O_CVCC_ON_PIN = OFF;
00000289                      858  	;***      344 : //    			O_HS_ICL_PIN = 1;
00000289                      859  	;***      345 : //				O_HS_IDA_PIN = 0;
00000289                      860  	;***      346 : //    			handSensorLED(WHITE);
00000289                      861  	;***      347 : //    			O_CVCC_ALARM_RS = 0;
00000289                      862  	;***      348 : //    			O_PUMP_SALT_PIN = OFF;
00000289                      863  	;***      349 : //    			electrolyticOperationOFF();
00000289                      864  	;***      350 : //    			g_io_status.refined.Valve.SV4 = 0;
00000289                      865  	;***      351 : //				g_io_status.refined.Pump2 = 0;
00000289                      866  	;***      352 : //				g_io_status.refined.Valve.SV5 = 1;
00000289                      867  	;***      353 : //				g_io_status.refined.Pump1 = 1;
00000289                      868  	;***      354 : //				g_io_status.refined.SaltLowLevel = 0;
00000289                      869  	;***      355 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
00000289                      870  	;***      356 : 
00000289                      871  	;***      357 : 			}
00000289                      872  	;***      358 : 		}
00000289                      873  	;***      359 : 
00000289                      874  	;***      360 : //--------------------------------End testing code---------------------------------------------------------
00000289                      875  	;***      361 : //    	if(g_machine_state.mode == BUSY){
00000289                      876  	;***      362 : //    		g_machine_state.user = 0;
00000289                      877  	;***      363 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
00000289                      878  	;***      364 : //    			g_machine_state.mode = INDIE;
00000289                      879  	;***      365 : //    		}
00000289                      880  	;***      366 : //    	}else{
00000289                      881  	;***      367 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
00000289                      882  	;***      368 : //    	}
00000289                      883  	;***      369 : 
00000289                      884  	;***      370 : 		if ((g_machine_state.mode == WATER_WASHING)
00000289                      885  	;***      371 : 				| (g_machine_state.mode == INDIE)) {
00000289                      886  	;***      372 : //			nostop_WaterWashingMode();
00000289                      887  	;***      373 : 		}
00000289                      888  	;***      374 : //    	InitialOperationModeStart();
00000289                      889  	;***      375 : 
00000289                      890  	;***      376 : //    	if(g_color != g_pre_color){
00000289                      891  	;***      377 : //			O_RS485_MODE_PIN = 1U;
00000289                      892  	;***      378 : //			uint8_t _uart3 = g_uart3_sendend;
00000289                      893  	;***      379 : //			send_buf[3]++;
00000289                      894  	;***      380 : //			R_UART3_Send(send_buf, 7);
00000289                      895  	;***      381 : //			while(_uart3 == g_uart3_sendend);
00000289                      896  	;***      382 : //			O_RS485_MODE_PIN = 0U;
00000289                      897  	;***      383 : //    	}
00000289                      898  	;***      384 : 		R_WDT_Restart();
00000289                      899  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 384
00000289 FC000000             900  	call !!_R_WDT_Restart
0000028D EE0000               901  	br $!.BB@LABEL@3_1
00000290                      902  _R_MAIN_UserInit:
00000290                      903  	.STACK _R_MAIN_UserInit = 4
00000290                      904  	;***      385 : 	}
00000290                      905  	;***      386 : 	/* End user code. Do not edit comment generated here */
00000290                      906  	;***      387 : }
00000290                      907  	;***      388 : 
00000290                      908  	;***      389 : /***********************************************************************************************************************
00000290                      909  	;***      390 :  * Function Name: R_MAIN_UserInit
00000290                      910  	;***      391 :  * Description  : This function adds user code before implementing main function.
00000290                      911  	;***      392 :  * Arguments    : None
00000290                      912  	;***      393 :  * Return Value : None
00000290                      913  	;***      394 :  ***********************************************************************************************************************/
00000290                      914  	;***      395 : void R_MAIN_UserInit(void) {
00000290                      915  	;***      396 : 	/* Start user code. Do not edit comment generated here */
00000290                      916  	;***      397 : 	EI();
00000290                      917  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 397
00000290 717AFA               918  	ei
00000293                      919  	;***      398 : 	R_TAU0_Create();
00000293                      920  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 398
00000293 FC000000             921  	call !!_R_TAU0_Create
00000297                      922  	;***      399 : 	R_SAU0_Create();
00000297                      923  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 399
00000297 FC000000             924  	call !!_R_SAU0_Create
0000029B                      925  	;***      400 : 	R_SAU1_Create();
0000029B                      926  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 400
0000029B FC000000             927  	call !!_R_SAU1_Create
0000029F                      928  	;***      401 : 	R_UART1_Create();
0000029F                      929  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 401
0000029F FC000000             930  	call !!_R_UART1_Create
000002A3                      931  	;***      402 : 	R_UART2_Create();
000002A3                      932  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 402
000002A3 FC000000             933  	call !!_R_UART2_Create
000002A7                      934  	;***      403 : 	R_UART3_Create();
000002A7                      935  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 403
000002A7 FC000000             936  	call !!_R_UART3_Create
000002AB                      937  	;***      404 : 	R_RTC_Create();
000002AB                      938  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 404
000002AB FC000000             939  	call !!_R_RTC_Create
000002AF                      940  	;***      405 : 	R_PORT_Create_UserInit();
000002AF                      941  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 405
000002AF FC000000             942  	call !!_R_PORT_Create_UserInit
000002B3                      943  	;***      406 : 	R_CSI01_Create();
000002B3                      944  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 406
000002B3 FC000000             945  	call !!_R_CSI01_Create
000002B7                      946  	;***      407 : 	R_CSI00_Create();
000002B7                      947  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 407
000002B7 FC000000             948  	call !!_R_CSI00_Create
000002BB                      949  	;***      408 : 
000002BB                      950  	;***      409 : 	R_TAU0_Channel0_Start();
000002BB                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 409
000002BB FC000000             952  	call !!_R_TAU0_Channel0_Start
000002BF                      953  	;***      410 : 	R_UART3_Start();
000002BF                      954  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 410
000002BF FC000000             955  	call !!_R_UART3_Start
000002C3                      956  	;***      411 : 	R_UART1_Start();
000002C3                      957  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 411
000002C3 FC000000             958  	call !!_R_UART1_Start
000002C7                      959  	;***      412 : 	R_UART2_Start();
000002C7                      960  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 412
000002C7 FC000000             961  	call !!_R_UART2_Start
000002CB                      962  	;***      413 : 	R_CSI00_Start();
000002CB                      963  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 413
000002CB FC000000             964  	call !!_R_CSI00_Start
000002CF                      965  	;***      414 : //    R_CSI01_Start();
000002CF                      966  	;***      415 : 
000002CF                      967  	;***      416 : 	R_ADC_Create();
000002CF                      968  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 416
000002CF FC000000             969  	call !!_R_ADC_Create
000002D3                      970  	;***      417 : 	R_ADC_Set_OperationOn();
000002D3                      971  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 417
000002D3 FC000000             972  	call !!_R_ADC_Set_OperationOn
000002D7                      973  	;***      418 : 	R_ADC_Start();
000002D7                      974  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 418
000002D7 FC000000             975  	call !!_R_ADC_Start
000002DB                      976  	;***      419 : 
000002DB                      977  	;***      420 : 	R_DAC_Create();
000002DB                      978  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 420
000002DB FC000000             979  	call !!_R_DAC_Create
000002DF                      980  	;***      421 : 	CVCC_Current_Set(0x0);
000002DF                      981  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 421
000002DF F1                   982  	clrb a
000002E0 FC000000             983  	call !!_R_DAC0_Set_ConversionValue
000002E4                      984  	;***      422 : 	Salt_Analog_Set(0x0);
000002E4                      985  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 422
000002E4 F1                   986  	clrb a
000002E5 FC000000             987  	call !!_R_DAC1_Set_ConversionValue
000002E9                      988  	;***      423 : 	R_DAC0_Start();
000002E9                      989  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 423
000002E9 FC000000             990  	call !!_R_DAC0_Start
000002ED                      991  	;***      424 : 	R_DAC1_Start();
000002ED                      992  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 424
000002ED EC000000             993  	br !!_R_DAC1_Start
000002F1                      994  	;***      425 : 	/* End user code. Do not edit comment generated here */
000002F1                      995  	;***      426 : }
000002F1                      996  	;***      427 : 
000002F1                      997  	;***      428 : /* Start user code for adding. Do not edit comment generated here */
000002F1                      998  	;***      429 : /* End user code. Do not edit comment generated here */
00000000                      999  	.SECTION .data,DATA
00000000                     1000  	.ALIGN 2
00000000                     1001  _g_adc_ch:
00000000 0000                1002  	.DS (2)
00000002                     1003  _led_st:
00000002 FF                  1004  	.DB 0xFF
00000003                     1005  _send_data:
00000003 23                  1006  	.DB 0x23,0xAB
00000004 AB              
00000005                     1007  _this_size:
00000005 12                  1008  	.DB 0x12
00000006                     1009  _this_size_2:
00000006 12                  1010  	.DB 0x12
00000007                     1011  _send_buf:
00000007 08                  1012  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                     1013  	.ALIGN 2
0000000E                     1014  _data_crc:
0000000E 24770000            1015  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                     1016  _dac_out:
00000016 FF                  1017  	.DB 0xFF,0xFF
00000017 FF              
00000000                     1018  	.SECTION .bss,BSS
00000000                     1019  _g_e_status:
00000000                     1020  	.DS (1)
00000001 00                  1021  	.ALIGN 2
00000002                     1022  _ret_number_setting:
00000002                     1023  	.DS (38)
00000028                     1024  _flow_p:
00000028                     1025  	.DS (1)
00000029                     1026  _salt_h_p:
00000029                     1027  	.DS (1)
0000002A                     1028  _g_eeprom_wren:
0000002A                     1029  	.DS (1)
0000002B                     1030  _receive_data:
0000002B                     1031  	.DS (2)
0000002D 00                  1032  	.ALIGN 2
0000002E                     1033  _receive_setting:
0000002E                     1034  	.DS (38)
00000054                     1035  _set:
00000054                     1036  	.DS (1)
00000055 00                  1037  	.ALIGN 2
00000056                     1038  _rx_data:
00000056                     1039  	.DS (12)
00000062                     1040  	.ALIGN 2
00000062                     1041  _data_f:
00000062                     1042  	.DS (4)
00000066                     1043  	.ALIGN 2
00000066                     1044  _data_f_test:
00000066                     1045  	.DS (4)
0000006A                     1046  	.ALIGN 2
0000006A                     1047  _g_control_buffer_f:
0000006A                     1048  	.DS (6)
00000070                     1049  	.ALIGN 2
00000070                     1050  _g_control_buffer_u32:
00000070                     1051  	.DS (6)
00000076                     1052  _handsensor_status:
00000076                     1053  	.DS (1)
00000077                     1054  _g_handsensor_status:
00000077                     1055  	.DS (2)
00000079                     1056  _g_crc:
00000079                     1057  	.DS (8)
00000081 00                  1058  	.ALIGN 2
00000082                     1059  _g_crc_32:
00000082                     1060  	.DS (32)
000000A2                     1061  _rx_count:
000000A2                     1062  	.DS (1)
00000000                     1063  	.SECTION .const,CONST
00000000                     1064  .STR@1:
00000000 00000000            1065  	.DS (4)
00000004 01                  1066  	.DB 0x01
00000005                     1067  .STR@1658:
00000005 00                  1068  	.DS (1)
00000006 01                  1069  	.DB 0x01
00000007 0000                1070  	.DS (2)
00000009 01                  1071  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               753 (000002F1) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 163 (000000A3) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

