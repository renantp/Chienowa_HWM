RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Fri Dec 31 09:01:39 2021
00000000                       19  
00000000                       20  	.EXTERN _g_timerSetting
00000000                       21  	.EXTERN _g_numberSetting
00000000                       22  	.EXTERN _g_io_status
00000000                       23  	.EXTERN _g_Tick
00000000                       24  	.EXTERN _g_machine_mode
00000000                       25  	.EXTERN _g_systemTime
00000000                       26  	.EXTERN _g_csi_rev_end
00000000                       27  	.EXTERN _g_uart2_fault
00000000                       28  	.EXTERN _g_uart2_sendend
00000000                       29  	.EXTERN _g_uart3_sendend
00000000                       30  	.EXTERN _g_rx_data
00000000                       31  	.EXTERN _g_uart3_rx_data
00000000                       32  	.EXTERN _g_color
00000000                       33  	.EXTERN _g_pre_color
00000000                       34  	.EXTERN _commnunication_flag
00000000                       35  	.EXTERN __settingTime
00000000                       36  	.EXTERN __settingNumber
00000000                       37  	.PUBLIC _g_error
00000000                       38  	.PUBLIC _g_adc_ch
00000000                       39  	.PUBLIC _g_e_status
00000000                       40  	.PUBLIC _ret_number_setting
00000000                       41  	.PUBLIC _led_st
00000000                       42  	.PUBLIC _flow_p
00000000                       43  	.PUBLIC _salt_h_p
00000000                       44  	.PUBLIC _g_eeprom_wren
00000000                       45  	.PUBLIC _send_data
00000000                       46  	.PUBLIC _receive_data
00000000                       47  	.PUBLIC _receive_setting
00000000                       48  	.PUBLIC _set
00000000                       49  	.PUBLIC _rx_data
00000000                       50  	.PUBLIC _data_f
00000000                       51  	.PUBLIC _data_f_test
00000000                       52  	.PUBLIC _g_control_buffer_f
00000000                       53  	.PUBLIC _g_control_buffer_u32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _nostop_checkHandSensor
00000000                       65  	.EXTERN _ns_delay_ms
00000000                       66  	.PUBLIC _readHS
00000000                       67  	.EXTERN _delay_ms
00000000                       68  	.PUBLIC _main
00000000                       69  	.PUBLIC _R_MAIN_UserInit
00000000                       70  	.EXTERN _EEPROM_Init
00000000                       71  	.EXTERN _EE_SPI_Read
00000000                       72  	.EXTERN _R_UART2_Receive
00000000                       73  	.EXTERN _R_UART3_Receive
00000000                       74  	.EXTERN _handSensorLED
00000000                       75  	.EXTERN _sendToRasPi_f
00000000                       76  	.EXTERN _sendRS485
00000000                       77  	.EXTERN _realTimeResponse
00000000                       78  	.EXTERN _main_loop_20211111
00000000                       79  	.EXTERN _UpdateMachineStatus
00000000                       80  	.EXTERN _R_UART2_Stop
00000000                       81  	.EXTERN _R_UART2_Start
00000000                       82  	.EXTERN _sendR485_7byte
00000000                       83  	.EXTERN _R_UART3_Stop
00000000                       84  	.EXTERN _R_UART3_Start
00000000                       85  	.EXTERN _crc8_4
00000000                       86  	.EXTERN _crc8_1
00000000                       87  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       88  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       89  	.EXTERN _R_WDT_Restart
00000000                       90  	.EXTERN _R_TAU0_Create
00000000                       91  	.EXTERN _R_SAU0_Create
00000000                       92  	.EXTERN _R_SAU1_Create
00000000                       93  	.EXTERN _R_UART1_Create
00000000                       94  	.EXTERN _R_UART2_Create
00000000                       95  	.EXTERN _R_UART3_Create
00000000                       96  	.EXTERN _R_RTC_Create
00000000                       97  	.EXTERN _R_PORT_Create_UserInit
00000000                       98  	.EXTERN _R_CSI01_Create
00000000                       99  	.EXTERN _R_CSI00_Create
00000000                      100  	.EXTERN _R_TAU0_Channel0_Start
00000000                      101  	.EXTERN _R_UART1_Start
00000000                      102  	.EXTERN _R_CSI00_Start
00000000                      103  	.EXTERN _R_ADC_Create
00000000                      104  	.EXTERN _R_ADC_Set_OperationOn
00000000                      105  	.EXTERN _R_ADC_Start
00000000                      106  	.EXTERN _R_DAC_Create
00000000                      107  	.EXTERN _R_DAC0_Start
00000000                      108  	.EXTERN _R_DAC1_Start
00000000                      109  
00000000                      110  	.SECTION .textf,TEXTF
00000000                      111  _nostop_checkHandSensor:
00000000                      112  	.STACK _nostop_checkHandSensor = 4
00000000                      113  	;***        1 : /***********************************************************************************************************************
00000000                      114  	;***        2 : * DISCLAIMER
00000000                      115  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      116  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      117  	;***        5 : * applicable laws, including copyright laws. 
00000000                      118  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      119  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      120  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      121  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      122  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      123  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      124  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                      125  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                      126  	;***       14 : * following link:
00000000                      127  	;***       15 : * http://www.renesas.com/disclaimer
00000000                      128  	;***       16 : *
00000000                      129  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      130  	;***       18 : ***********************************************************************************************************************/
00000000                      131  	;***       19 : 
00000000                      132  	;***       20 : /***********************************************************************************************************************
00000000                      133  	;***       21 : * File Name    : r_main.c
00000000                      134  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      135  	;***       23 : * Device(s)    : R5F104ML
00000000                      136  	;***       24 : * Tool-Chain   : CCRL
00000000                      137  	;***       25 : * Description  : This file implements main function.
00000000                      138  	;***       26 : * Creation Date: 30/11/2021
00000000                      139  	;***       27 : ***********************************************************************************************************************/
00000000                      140  	;***       28 : 
00000000                      141  	;***       29 : /***********************************************************************************************************************
00000000                      142  	;***       30 : Includes
00000000                      143  	;***       31 : ***********************************************************************************************************************/
00000000                      144  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      145  	;***       33 : #include "r_cg_cgc.h"
00000000                      146  	;***       34 : #include "r_cg_port.h"
00000000                      147  	;***       35 : #include "r_cg_serial.h"
00000000                      148  	;***       36 : #include "r_cg_adc.h"
00000000                      149  	;***       37 : #include "r_cg_dac.h"
00000000                      150  	;***       38 : #include "r_cg_timer.h"
00000000                      151  	;***       39 : #include "r_cg_wdt.h"
00000000                      152  	;***       40 : #include "r_cg_rtc.h"
00000000                      153  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      154  	;***       42 : #include "EEPROM.h"
00000000                      155  	;***       43 : #include "usr_timer.h"
00000000                      156  	;***       44 : #include "usr_setting_sheet.h"
00000000                      157  	;***       45 : #include "crc8.h"
00000000                      158  	;***       46 : #include "main.h"
00000000                      159  	;***       47 : /* End user code. Do not edit comment generated here */
00000000                      160  	;***       48 : #include "r_cg_userdefine.h"
00000000                      161  	;***       49 : 
00000000                      162  	;***       50 : /***********************************************************************************************************************
00000000                      163  	;***       51 : Pragma directive
00000000                      164  	;***       52 : ***********************************************************************************************************************/
00000000                      165  	;***       53 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      166  	;***       54 : #define CVCC_Current_Set(a) R_DAC0_Set_ConversionValue(a)
00000000                      167  	;***       55 : #define Salt_Analog_Set(a) R_DAC1_Set_ConversionValue(a)
00000000                      168  	;***       56 : /* End user code. Do not edit comment generated here */
00000000                      169  	;***       57 : 
00000000                      170  	;***       58 : /***********************************************************************************************************************
00000000                      171  	;***       59 : Global variables and functions
00000000                      172  	;***       60 : ***********************************************************************************************************************/
00000000                      173  	;***       61 : /* Start user code for global. Do not edit comment generated here */
00000000                      174  	;***       62 : volatile int g_error = 0;
00000000                      175  	;***       63 : volatile int g_adc_ch = 0;
00000000                      176  	;***       64 : union EEPROM_status_u g_e_status;
00000000                      177  	;***       65 : struct Number_Setting_s ret_number_setting;
00000000                      178  	;***       66 : uint8_t led_st = 0xff;
00000000                      179  	;***       67 : uint8_t flow_p, salt_h_p;
00000000                      180  	;***       68 : uint8_t g_eeprom_wren;
00000000                      181  	;***       69 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      182  	;***       70 : uint8_t receive_data[2];
00000000                      183  	;***       71 : struct Number_Setting_s receive_setting;
00000000                      184  	;***       72 : union EEPROM_status_u set;
00000000                      185  	;***       73 : uint32_t rx_data[3];
00000000                      186  	;***       74 : float data_f;
00000000                      187  	;***       75 : union byte_to_float data_f_test;
00000000                      188  	;***       76 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      189  	;***       77 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      190  	;***       78 : 
00000000                      191  	;***       79 : union {
00000000                      192  	;***       80 : 	struct{
00000000                      193  	;***       81 : 		uint8_t up_signal;
00000000                      194  	;***       82 : 	};
00000000                      195  	;***       83 : 	uint8_t status;
00000000                      196  	;***       84 : }handsensor_status;
00000000                      197  	;***       85 : uint8_t g_handsensor_status[2];
00000000                      198  	;***       86 : void nostop_checkHandSensor(void){
00000000                      199  	;***       87 : 	if(DETECT_U == I_ON){
00000000                      200  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000000 8D07                 201  	mov a, 0xFFF07
00000002 315300               202  	bt a.5, $.BB@LABEL@1_5
00000005                      203  .BB@LABEL@1_1:	; if_then_bb
00000005                      204  	;***       88 : 		if(ns_delay_ms(&g_Tick.tickHandSensor[0], 500)){
00000005                      205  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000005 F6                   206  	clrw ax
00000006 14                   207  	movw de, ax
00000007 32F401               208  	movw bc, #0x01F4
0000000A 300000               209  	movw ax, #LOWW(_g_Tick+0x00080)
0000000D FC000000             210  	call !!_ns_delay_ms
00000011 F7                   211  	clrw bc
00000012 43                   212  	cmpw ax, bc
00000013 DD00                 213  	bz $.BB@LABEL@1_9
00000015                      214  .BB@LABEL@1_2:	; if_then_bb10
00000015                      215  	;***       89 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0? 1:0;
00000015                      216  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 89
00000015 D50000               217  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   218  	oneb a
00000019 61E8                 219  	skz
0000001B                      220  .BB@LABEL@1_3:	; bb15
0000001B F1                   221  	clrb a
0000001C                      222  .BB@LABEL@1_4:	; bb16
0000001C 9F0000               223  	mov !LOWW(_g_handsensor_status), a
0000001F                      224  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
0000001F D7                   225  	ret
00000020                      226  .BB@LABEL@1_5:	; if_else_bb
00000020                      227  	;***       90 : 		}
00000020                      228  	;***       91 : 	}else if(DETECT_D == I_ON){
00000020                      229  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000020 8D07                 230  	mov a, 0xFFF07
00000022 314300               231  	bt a.4, $.BB@LABEL@1_7
00000025                      232  .BB@LABEL@1_6:	; if_then_bb27
00000025                      233  	;***       92 : 		g_handsensor_status[1] = 1;
00000025                      234  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000025 E50000               235  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   236  	ret
00000029                      237  .BB@LABEL@1_7:	; if_else_bb28
00000029                      238  	;***       93 : 	}else if(DETECT_U == I_OFF){
00000029                      239  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 93
00000029 8D07                 240  	mov a, 0xFFF07
0000002B 315300               241  	bt a.5, $.BB@LABEL@1_9
0000002E                      242  .BB@LABEL@1_8:	; if_else_bb37
0000002E                      243  	;***       94 : 
0000002E                      244  	;***       95 : 	}else if(DETECT_D == I_OFF){
0000002E                      245  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 95
0000002E 8D07                 246  	mov a, 0xFFF07
00000030                      247  .BB@LABEL@1_9:	; return
00000030                      248  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000030 D7                   249  	ret
00000031                      250  _readHS:
00000031                      251  	.STACK _readHS = 4
00000031                      252  	;***       96 : 
00000031                      253  	;***       97 : 	}
00000031                      254  	;***       98 : }
00000031                      255  	;***       99 : uint8_t readHS(void){
00000031                      256  	;***      100 :    if(DETECT_U){
00000031                      257  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000031 8D07                 258  	mov a, 0xFFF07
00000033 315300               259  	bt a.5, $.BB@LABEL@2_2
00000036                      260  .BB@LABEL@2_1:	; bb18
00000036                      261  	;***      101 : 	  delay_ms(2);
00000036                      262  	;***      102 :       if(DETECT_U) return 1;return 0;
00000036                      263  	;***      103 :    }else return 0;
00000036                      264  	;***      104 : }
00000036                      265  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 104
00000036 F1                   266  	clrb a
00000037 D7                   267  	ret
00000038                      268  .BB@LABEL@2_2:	; if_then_bb
00000038                      269  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000038 F7                   270  	clrw bc
00000039 E6                   271  	onew ax
0000003A A1                   272  	incw ax
0000003B FC000000             273  	call !!_delay_ms
0000003F                      274  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 102
0000003F 8D07                 275  	mov a, 0xFFF07
00000041 315A                 276  	shr a, 0x05
00000043 5C01                 277  	and a, #0x01
00000045 D7                   278  	ret
00000046                      279  _main:
00000046                      280  	.STACK _main = 24
00000046                      281  	;***      105 : uint8_t this_size = sizeof(g_io_status);
00000046                      282  	;***      106 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      283  	;***      107 : uint8_t send_buf[7] = {8,1,2,3,4,5,6};
00000046                      284  	;***      108 : char g_crc[8];
00000046                      285  	;***      109 : uint32_t g_crc_32[8];
00000046                      286  	;***      110 : uint32_t data_crc[2] = {30500, 60200};
00000046                      287  	;***      111 : uint8_t rx_count;
00000046                      288  	;***      112 : uint8_t dac_out[2] = {0xff, 0xff};
00000046                      289  	;***      113 : /* End user code. Do not edit comment generated here */
00000046                      290  	;***      114 : 
00000046                      291  	;***      115 : void R_MAIN_UserInit(void);
00000046                      292  	;***      116 : 
00000046                      293  	;***      117 : /***********************************************************************************************************************
00000046                      294  	;***      118 : * Function Name: main
00000046                      295  	;***      119 : * Description  : This function implements main function.
00000046                      296  	;***      120 : * Arguments    : None
00000046                      297  	;***      121 : * Return Value : None
00000046                      298  	;***      122 : ***********************************************************************************************************************/
00000046                      299  	;***      123 : void main(void)
00000046                      300  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 123
00000046 2010                 301  	subw sp, #0x10
00000048                      302  	;***      124 : {
00000048                      303  	;***      125 :     R_MAIN_UserInit();
00000048                      304  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 125
00000048 FE0000               305  	call $!_R_MAIN_UserInit
0000004B                      306  	;***      126 :     /* Start user code. Do not edit comment generated here */
0000004B                      307  	;***      127 : 
0000004B                      308  	;***      128 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      309  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 128
0000004B F2                   310  	clrb c
0000004C 300000               311  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             312  	call !!_EEPROM_Init
00000053 F6                   313  	clrw ax
00000054                      314  	;***      129 :     EE_SPI_Read((uint8_t *)&g_numberSetting, NUMBER_SETTING_ADDRESS, numberSettingSize);
00000054                      315  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 129
00000054 C1                   316  	push ax
00000055 5025                 317  	mov x, #0x25
00000057 C1                   318  	push ax
00000058 F7                   319  	clrw bc
00000059 300000               320  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             321  	call !!_EE_SPI_Read
00000060 1004                 322  	addw sp, #0x04
00000062 F6                   323  	clrw ax
00000063                      324  	;***      130 :     EE_SPI_Read((uint8_t *)&g_timerSetting, TIME_SETTING_ADDRESS, timeSettingSize);
00000063                      325  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
00000063 C1                   326  	push ax
00000064 508D                 327  	mov x, #0x8D
00000066 C1                   328  	push ax
00000067 320008               329  	movw bc, #0x0800
0000006A 300000               330  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             331  	call !!_EE_SPI_Read
00000071 1004                 332  	addw sp, #0x04
00000073                      333  	;***      131 :     _settingNumber = g_numberSetting;
00000073                      334  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
00000073 342600               335  	movw de, #0x0026
00000076 320000               336  	movw bc, #LOWW(_g_numberSetting)
00000079 300000               337  	movw ax, #LOWW(__settingNumber)
0000007C FC000000             338  	call !!_memcpy
00000080                      339  	;***      132 :     _settingTime = g_timerSetting;
00000080                      340  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000080 348E00               341  	movw de, #0x008E
00000083 320000               342  	movw bc, #LOWW(_g_timerSetting)
00000086 300000               343  	movw ax, #LOWW(__settingTime)
00000089 FC000000             344  	call !!_memcpy
0000008D                      345  	;***      133 :     R_UART2_Receive(g_rx_data, 6);
0000008D                      346  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
0000008D 320600               347  	movw bc, #0x0006
00000090 300000               348  	movw ax, #LOWW(_g_rx_data)
00000093 FC000000             349  	call !!_R_UART2_Receive
00000097                      350  	;***      134 :     O_RS485_MODE_PIN = 0U;
00000097                      351  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 134
00000097 710300               352  	clr1 0xFFF00.0
0000009A                      353  	;***      135 :     R_UART3_Receive(g_uart3_rx_data, 7);
0000009A                      354  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 135
0000009A 320700               355  	movw bc, #0x0007
0000009D 300000               356  	movw ax, #LOWW(_g_uart3_rx_data)
000000A0 FC000000             357  	call !!_R_UART3_Receive
000000A4                      358  	;***      136 : //    Test gui
000000A4                      359  	;***      137 : //    O_RS485_MODE_PIN = 1U;
000000A4                      360  	;***      138 : //    R_UART3_Send(send_buf, 7);
000000A4                      361  	;***      139 :     EEPROM_PROTECT_EN();
000000A4                      362  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
000000A4 71030E               363  	clr1 0xFFF0E.0
000000A7                      364  	;***      140 : 
000000A7                      365  	;***      141 :     g_pre_color = BLUE;
000000A7                      366  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
000000A7 CF000003             367  	mov !LOWW(_g_pre_color), #0x03
000000AB                      368  	;***      142 :     handSensorLED(BLACK);
000000AB                      369  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 142
000000AB F1                   370  	clrb a
000000AC FC000000             371  	call !!_handSensorLED
000000B0                      372  	;***      143 : //    g_machine_state.mode = INDIE; // Set as indie-mode
000000B0                      373  	;***      144 : //    g_timerSetting.t26_onDelayEmptyLevel_s = g_timerSetting.t26_onDelayEmptyLevel_s = 2;
000000B0                      374  	;***      145 : //    g_timerSetting.t55_waterDischargeDelay_s = 10;
000000B0                      375  	;***      146 : //    g_timerSetting.t26_onDelayEmptyLevel_s = 2;
000000B0                      376  	;***      147 : //    g_timerSetting.t4_electrolysisOperationStart_s = 5;
000000B0                      377  	;***      148 : //    g_timerSetting.t2_flowSensorStartTime_s = 1;
000000B0                      378  	;***      149 : //    g_timerSetting.t3_flowSensorMonitorTime_s = 5;
000000B0                      379  	;***      150 :     g_machine_mode = HAND_WASHING;
000000B0                      380  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
000000B0 E50000               381  	oneb !LOWW(_g_machine_mode)
000000B3                      382  	;***      151 :     sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000B3                      383  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 151
000000B3 F6                   384  	clrw ax
000000B4 14                   385  	movw de, ax
000000B5 F7                   386  	clrw bc
000000B6 300053               387  	movw ax, #0x5300
000000B9 FC000000             388  	call !!_sendToRasPi_f
000000BD F6                   389  	clrw ax
000000BE                      390  	;***      152 : //    main_init_20211111();
000000BE                      391  	;***      153 :     //Test
000000BE                      392  	;***      154 : //    g_timerSetting.t53_washingWaterSpoutingTime_s = 4;
000000BE                      393  	;***      155 : //    g_timerSetting.t51_alkalineWaterSpoutingTime_s = 5;
000000BE                      394  	;***      156 : //    g_timerSetting.t52_acidWaterSpoutingTime_s = 6;
000000BE                      395  	;***      157 :     uint8_t wts, vpcb, vpcb_v = 1;
000000BE                      396  	;***      158 :     sendRS485(0xff, 82, 2, 12);
000000BE                      397  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 158
000000BE C1                   398  	push ax
000000BF 500C                 399  	mov x, #0x0C
000000C1 C1                   400  	push ax
000000C2 5202                 401  	mov c, #0x02
000000C4 3052FF               402  	movw ax, #0xFF52
000000C7 FC000000             403  	call !!_sendRS485
000000CB 1004                 404  	addw sp, #0x04
000000CD E1                   405  	oneb a
000000CE 9802                 406  	mov [sp+0x02], a
000000D0 9801                 407  	mov [sp+0x01], a
000000D2 9800                 408  	mov [sp+0x00], a
000000D4                      409  .BB@LABEL@3_1:	; bb222
000000D4                      410  	;***      159 :     while (1U)
000000D4                      411  	;***      160 :     {
000000D4                      412  	;***      161 :     	realTimeResponse();
000000D4                      413  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 161
000000D4 FC000000             414  	call !!_realTimeResponse
000000D8                      415  	;***      162 :     	main_loop_20211111();
000000D8                      416  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 162
000000D8 FC000000             417  	call !!_main_loop_20211111
000000DC                      418  	;***      163 : 
000000DC                      419  	;***      164 :     	handSensorLED(g_color);
000000DC                      420  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 164
000000DC 8F0000               421  	mov a, !LOWW(_g_color)
000000DF FC000000             422  	call !!_handSensorLED
000000E3                      423  	;***      165 : 		UpdateMachineStatus();
000000E3                      424  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 165
000000E3 FC000000             425  	call !!_UpdateMachineStatus
000000E7                      426  	;***      166 :     	if(g_uart2_fault == 1){
000000E7                      427  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
000000E7 40000001             428  	cmp !LOWW(_g_uart2_fault), #0x01
000000EB DF00                 429  	bnz $.BB@LABEL@3_3
000000ED                      430  .BB@LABEL@3_2:	; if_then_bb
000000ED                      431  	;***      167 :     		R_UART2_Stop();
000000ED                      432  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 167
000000ED FC000000             433  	call !!_R_UART2_Stop
000000F1                      434  	;***      168 :     		delay_ms(10);
000000F1                      435  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 168
000000F1 F7                   436  	clrw bc
000000F2 300A00               437  	movw ax, #0x000A
000000F5 FC000000             438  	call !!_delay_ms
000000F9                      439  	;***      169 :     		R_UART2_Start();
000000F9                      440  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 169
000000F9 FC000000             441  	call !!_R_UART2_Start
000000FD                      442  	;***      170 :     		g_uart2_fault = 0;
000000FD                      443  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
000000FD F50000               444  	clrb !LOWW(_g_uart2_fault)
00000100                      445  .BB@LABEL@3_3:	; if_break_bb
00000100                      446  	;***      171 :     	}
00000100                      447  	;***      172 : 
00000100                      448  	;***      173 :     	// Communication with WaterSoftener
00000100                      449  	;***      174 :     	if(commnunication_flag.rs485_send_to_watersolfner_response_flag){
00000100                      450  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 174
00000100 D50000               451  	cmp0 !LOWW(_commnunication_flag+0x00008)
00000103 DD00                 452  	bz $.BB@LABEL@3_5
00000105                      453  .BB@LABEL@3_4:	; if_then_bb23
00000105 F6                   454  	clrw ax
00000106                      455  	;***      175 :     		sendRS485(0xff, 82, 2, 5);
00000106                      456  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
00000106 C1                   457  	push ax
00000107 5005                 458  	mov x, #0x05
00000109 C1                   459  	push ax
0000010A 5202                 460  	mov c, #0x02
0000010C 3052FF               461  	movw ax, #0xFF52
0000010F FC000000             462  	call !!_sendRS485
00000113 1004                 463  	addw sp, #0x04
00000115                      464  	;***      176 : //    		rx_count++;
00000115                      465  	;***      177 :     		wts = 1; //Test flag = 1
00000115                      466  	;***      178 : 			commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
00000115                      467  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
00000115 F50000               468  	clrb !LOWW(_commnunication_flag+0x00008)
00000118 E1                   469  	oneb a
00000119 9800                 470  	mov [sp+0x00], a
0000011B                      471  .BB@LABEL@3_5:	; if_break_bb24
0000011B                      472  	;***      179 :     	}
0000011B                      473  	;***      180 : 		if(commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1){
0000011B                      474  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 180
0000011B 40000001             475  	cmp !LOWW(_commnunication_flag+0x00009), #0x01
0000011F DF00                 476  	bnz $.BB@LABEL@3_9
00000121                      477  .BB@LABEL@3_6:	; if_then_bb30
00000121                      478  	;***      181 :     		// Sand to Water softener SV state
00000121                      479  	;***      182 :     		sendRS485(0xff, 82, 24,(uint32_t) g_io_status.refined.Valve.SV1 == 1?1:0);
00000121                      480  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 182
00000121 360000               481  	movw hl, #LOWW(_g_io_status+0x00001)
00000124 E7                   482  	onew bc
00000125 318300               483  	bt [hl].0, $.BB@LABEL@3_8
00000128                      484  .BB@LABEL@3_7:	; bb38
00000128 B3                   485  	decw bc
00000129                      486  .BB@LABEL@3_8:	; bb39
00000129 F6                   487  	clrw ax
0000012A C1                   488  	push ax
0000012B C3                   489  	push bc
0000012C 5218                 490  	mov c, #0x18
0000012E 3052FF               491  	movw ax, #0xFF52
00000131 FC000000             492  	call !!_sendRS485
00000135 1004                 493  	addw sp, #0x04
00000137                      494  	;***      183 :     		commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
00000137                      495  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
00000137 F50000               496  	clrb !LOWW(_commnunication_flag+0x00009)
0000013A                      497  .BB@LABEL@3_9:	; if_break_bb43
0000013A 8800                 498  	mov a, [sp+0x00]
0000013C                      499  	;***      184 :     	}
0000013C                      500  	;***      185 : 		// Test SV1 for Water Softener
0000013C                      501  	;***      186 :     	if(wts != 0){
0000013C                      502  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 186
0000013C D1                   503  	cmp0 a
0000013D DF00                 504  	bnz $.BB@LABEL@3_11
0000013F                      505  .BB@LABEL@3_10:	; if_else_bb63
0000013F                      506  	;***      187 :     		if(ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)){
0000013F                      507  	;***      188 :     			if(wts == 1){
0000013F                      508  	;***      189 :     				O_SUPPLY_WATER_PIN_SV1 = ON;
0000013F                      509  	;***      190 : //					sendRS485(1, 82, 24,(uint32_t) 1);
0000013F                      510  	;***      191 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
0000013F                      511  	;***      192 : 					wts = 2;
0000013F                      512  	;***      193 :     			}else{
0000013F                      513  	;***      194 :     				O_SUPPLY_WATER_PIN_SV1 = OFF;
0000013F                      514  	;***      195 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
0000013F                      515  	;***      196 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
0000013F                      516  	;***      197 : 					wts = 0;
0000013F                      517  	;***      198 :     			}
0000013F                      518  	;***      199 :     		}
0000013F                      519  	;***      200 :     	}else{
0000013F                      520  	;***      201 :     		g_Tick.tickWaterSoftenerPCB = g_systemTime;
0000013F                      521  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
0000013F AF0000               522  	movw ax, !LOWW(_g_systemTime+0x00002)
00000142 BF0000               523  	movw !LOWW(_g_Tick+0x0004A), ax
00000145 AF0000               524  	movw ax, !LOWW(_g_systemTime)
00000148 BF0000               525  	movw !LOWW(_g_Tick+0x00048), ax
0000014B EF00                 526  	br $.BB@LABEL@3_15
0000014D                      527  .BB@LABEL@3_11:	; if_then_bb49
0000014D                      528  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 187
0000014D F6                   529  	clrw ax
0000014E 14                   530  	movw de, ax
0000014F 328813               531  	movw bc, #0x1388
00000152 300000               532  	movw ax, #LOWW(_g_Tick+0x00048)
00000155 FC000000             533  	call !!_ns_delay_ms
00000159 F7                   534  	clrw bc
0000015A 43                   535  	cmpw ax, bc
0000015B DD00                 536  	bz $.BB@LABEL@3_15
0000015D                      537  .BB@LABEL@3_12:	; if_then_bb54
0000015D 8800                 538  	mov a, [sp+0x00]
0000015F                      539  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 188
0000015F 91                   540  	dec a
00000160 DF00                 541  	bnz $.BB@LABEL@3_14
00000162                      542  .BB@LABEL@3_13:	; if_then_bb60
00000162                      543  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 189
00000162 717201               544  	set1 0xFFF01.7
00000165 C80002               545  	mov [sp+0x00], #0x02
00000168 EF00                 546  	br $.BB@LABEL@3_15
0000016A                      547  .BB@LABEL@3_14:	; if_else_bb
0000016A                      548  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 194
0000016A 717301               549  	clr1 0xFFF01.7
0000016D F1                   550  	clrb a
0000016E 9800                 551  	mov [sp+0x00], a
00000170                      552  .BB@LABEL@3_15:	; if_break_bb65
00000170                      553  	;***      202 :     	}
00000170                      554  	;***      203 : 
00000170                      555  	;***      204 :     	//Valve PCB
00000170                      556  	;***      205 :     	if(commnunication_flag.rs485_send_to_valve_response_flag == 1){
00000170                      557  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 205
00000170 40000001             558  	cmp !LOWW(_commnunication_flag+0x0000A), #0x01
00000174 DF00                 559  	bnz $.BB@LABEL@3_17
00000176                      560  .BB@LABEL@3_16:	; if_then_bb71
00000176 AEF8                 561  	movw ax, sp
00000178 040600               562  	addw ax, #0x0006
0000017B B804                 563  	movw [sp+0x04], ax
0000017D                      564  	;***      206 :     		// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
0000017D                      565  	;***      207 :     		// 0 - Stand alone 1 - Control Valve
0000017D                      566  	;***      208 :     		uint8_t _b[5] = {vpcb_v, g_uart3_sendend%2,g_systemTime%2,0,1};
0000017D                      567  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
0000017D 340500               568  	movw de, #0x0005
00000180 320000               569  	movw bc, #SMRLW(.STR@1)
00000183 FC000000             570  	call !!_memcpy
00000187 8802                 571  	mov a, [sp+0x02]
00000189 9806                 572  	mov [sp+0x06], a
0000018B E1                   573  	oneb a
0000018C 5F0000               574  	and a, !LOWW(_g_uart3_sendend)
0000018F 9807                 575  	mov [sp+0x07], a
00000191 AF0000               576  	movw ax, !LOWW(_g_systemTime+0x00002)
00000194 AF0000               577  	movw ax, !LOWW(_g_systemTime)
00000197 60                   578  	mov a, x
00000198 5C01                 579  	and a, #0x01
0000019A 9808                 580  	mov [sp+0x08], a
0000019C A804                 581  	movw ax, [sp+0x04]
0000019E 12                   582  	movw bc, ax
0000019F                      583  	;***      209 :     		sendR485_7byte(0xff, 12, _b);
0000019F                      584  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 209
0000019F 300CFF               585  	movw ax, #0xFF0C
000001A2 FC000000             586  	call !!_sendR485_7byte
000001A6                      587  	;***      210 :     		vpcb++;
000001A6                      588  	;***      211 :     		commnunication_flag.rs485_send_to_valve_response_flag  = 0;
000001A6                      589  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001A6 F50000               590  	clrb !LOWW(_commnunication_flag+0x0000A)
000001A9 8801                 591  	mov a, [sp+0x01]
000001AB                      592  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
000001AB 81                   593  	inc a
000001AC 9801                 594  	mov [sp+0x01], a
000001AE EF00                 595  	br $.BB@LABEL@3_19
000001B0                      596  .BB@LABEL@3_17:	; if_else_bb89
000001B0                      597  	;***      212 :     	}else if(commnunication_flag.rs485_get_valve_gesture_flag == 1){
000001B0                      598  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 212
000001B0 40000001             599  	cmp !LOWW(_commnunication_flag+0x0000B), #0x01
000001B4 DF00                 600  	bnz $.BB@LABEL@3_19
000001B6                      601  .BB@LABEL@3_18:	; if_then_bb95
000001B6 AEF8                 602  	movw ax, sp
000001B8 040B00               603  	addw ax, #0x000B
000001BB B804                 604  	movw [sp+0x04], ax
000001BD                      605  	;***      213 :     		uint8_t _b[5] = {0,1,0,0,1};
000001BD                      606  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 213
000001BD 340500               607  	movw de, #0x0005
000001C0 320000               608  	movw bc, #SMRLW(.STR@1623)
000001C3 FC000000             609  	call !!_memcpy
000001C7 A804                 610  	movw ax, [sp+0x04]
000001C9 12                   611  	movw bc, ax
000001CA                      612  	;***      214 :     		sendR485_7byte(0xff, 1, _b);
000001CA                      613  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 214
000001CA 3001FF               614  	movw ax, #0xFF01
000001CD FC000000             615  	call !!_sendR485_7byte
000001D1                      616  	;***      215 :     		rx_count++;
000001D1                      617  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
000001D1 A00000               618  	inc !LOWW(_rx_count)
000001D4                      619  	;***      216 :     		commnunication_flag.rs485_get_valve_gesture_flag = 0;
000001D4                      620  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
000001D4 F50000               621  	clrb !LOWW(_commnunication_flag+0x0000B)
000001D7                      622  .BB@LABEL@3_19:	; if_break_bb101
000001D7 8801                 623  	mov a, [sp+0x01]
000001D9                      624  	;***      217 :     	}
000001D9                      625  	;***      218 : 
000001D9                      626  	;***      219 :     	if(vpcb != 0){
000001D9                      627  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 219
000001D9 D1                   628  	cmp0 a
000001DA DF00                 629  	bnz $.BB@LABEL@3_21
000001DC                      630  .BB@LABEL@3_20:	; if_else_bb125
000001DC                      631  	;***      220 :     		if(ns_delay_ms(&g_Tick.tickValvePCB, 5000)){
000001DC                      632  	;***      221 :     			vpcb_v = vpcb_v == 1 ? 0 : 1;
000001DC                      633  	;***      222 :     			vpcb = 0;
000001DC                      634  	;***      223 :     		}
000001DC                      635  	;***      224 :     	}else{
000001DC                      636  	;***      225 :     		g_Tick.tickValvePCB = g_systemTime;
000001DC                      637  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 225
000001DC AF0000               638  	movw ax, !LOWW(_g_systemTime+0x00002)
000001DF BF0000               639  	movw !LOWW(_g_Tick+0x0004E), ax
000001E2 AF0000               640  	movw ax, !LOWW(_g_systemTime)
000001E5 BF0000               641  	movw !LOWW(_g_Tick+0x0004C), ax
000001E8 EF00                 642  	br $.BB@LABEL@3_24
000001EA                      643  .BB@LABEL@3_21:	; if_then_bb107
000001EA                      644  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 220
000001EA F6                   645  	clrw ax
000001EB 14                   646  	movw de, ax
000001EC 328813               647  	movw bc, #0x1388
000001EF 300000               648  	movw ax, #LOWW(_g_Tick+0x0004C)
000001F2 FC000000             649  	call !!_ns_delay_ms
000001F6 F7                   650  	clrw bc
000001F7 43                   651  	cmpw ax, bc
000001F8 DD00                 652  	bz $.BB@LABEL@3_24
000001FA                      653  .BB@LABEL@3_22:	; if_then_bb112
000001FA 8802                 654  	mov a, [sp+0x02]
000001FC                      655  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
000001FC 91                   656  	dec a
000001FD F1                   657  	clrb a
000001FE 9801                 658  	mov [sp+0x01], a
00000200 DF00                 659  	bnz $.BB@LABEL@3_26
00000202                      660  .BB@LABEL@3_23:	; if_then_bb112.if_break_bb127_crit_edge
00000202 9802                 661  	mov [sp+0x02], a
00000204                      662  .BB@LABEL@3_24:	; if_break_bb127
00000204                      663  	;***      226 :     	}
00000204                      664  	;***      227 : 
00000204                      665  	;***      228 :     	//RS485 fault check
00000204                      666  	;***      229 :     	if(commnunication_flag.rs485_fault == 1){
00000204                      667  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 229
00000204 40000001             668  	cmp !LOWW(_commnunication_flag+0x0000C), #0x01
00000208 DF00                 669  	bnz $.BB@LABEL@3_27
0000020A                      670  .BB@LABEL@3_25:	; if_then_bb133
0000020A                      671  	;***      230 :     		R_UART3_Stop();
0000020A                      672  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
0000020A FC000000             673  	call !!_R_UART3_Stop
0000020E                      674  	;***      231 :     		commnunication_flag.rs485_fault++;
0000020E                      675  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 231
0000020E A00000               676  	inc !LOWW(_commnunication_flag+0x0000C)
00000211                      677  	;***      232 :     		g_Tick.tickRS485 = g_systemTime;
00000211                      678  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 232
00000211 AF0000               679  	movw ax, !LOWW(_g_systemTime+0x00002)
00000214 BF0000               680  	movw !LOWW(_g_Tick+0x00052), ax
00000217 AF0000               681  	movw ax, !LOWW(_g_systemTime)
0000021A BF0000               682  	movw !LOWW(_g_Tick+0x00050), ax
0000021D EF00                 683  	br $.BB@LABEL@3_30
0000021F                      684  .BB@LABEL@3_26:	; bb118
0000021F E1                   685  	oneb a
00000220 EF00                 686  	br $.BB@LABEL@3_23
00000222                      687  .BB@LABEL@3_27:	; if_else_bb137
00000222                      688  	;***      233 :     	}else if(commnunication_flag.rs485_fault == 2){
00000222                      689  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 233
00000222 40000002             690  	cmp !LOWW(_commnunication_flag+0x0000C), #0x02
00000226 DF00                 691  	bnz $.BB@LABEL@3_30
00000228                      692  .BB@LABEL@3_28:	; if_then_bb143
00000228                      693  	;***      234 :     		if(ns_delay_ms(&g_Tick.tickRS485, 500)){
00000228                      694  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 234
00000228 F6                   695  	clrw ax
00000229 14                   696  	movw de, ax
0000022A 32F401               697  	movw bc, #0x01F4
0000022D 300000               698  	movw ax, #LOWW(_g_Tick+0x00050)
00000230 FC000000             699  	call !!_ns_delay_ms
00000234 F7                   700  	clrw bc
00000235 43                   701  	cmpw ax, bc
00000236 DD00                 702  	bz $.BB@LABEL@3_30
00000238                      703  .BB@LABEL@3_29:	; if_then_bb148
00000238                      704  	;***      235 : 				R_UART3_Start();
00000238                      705  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 235
00000238 FC000000             706  	call !!_R_UART3_Start
0000023C                      707  	;***      236 : 				R_UART3_Receive(g_uart3_rx_data, 7);
0000023C                      708  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 236
0000023C 320700               709  	movw bc, #0x0007
0000023F 300000               710  	movw ax, #LOWW(_g_uart3_rx_data)
00000242 FC000000             711  	call !!_R_UART3_Receive
00000246                      712  	;***      237 : 				commnunication_flag.rs485_fault = 0;
00000246                      713  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 237
00000246 F50000               714  	clrb !LOWW(_commnunication_flag+0x0000C)
00000249                      715  .BB@LABEL@3_30:	; if_break_bb152
00000249                      716  	;***      238 :     		}
00000249                      717  	;***      239 :     	}
00000249                      718  	;***      240 : //--------------------------------- Testing code---------------------------------------------------------------
00000249                      719  	;***      241 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
00000249                      720  	;***      242 : //    		P6_bit.no3 = ~P6_bit.no3;
00000249                      721  	;***      243 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
00000249                      722  	;***      244 : //    	}
00000249                      723  	;***      245 : //    	if(g_machine_state.user == 1){
00000249                      724  	;***      246 : //    		HandWashingMode_nostop();
00000249                      725  	;***      247 : //    	}else{
00000249                      726  	;***      248 : //    		g_Tick.tickCustom[1] = g_systemTime;
00000249                      727  	;***      249 : //    	}
00000249                      728  	;***      250 : 
00000249                      729  	;***      251 :     	// Check
00000249                      730  	;***      252 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
00000249                      731  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
00000249 8D00                 732  	mov a, 0xFFF00
0000024B 719C                 733  	mov1 CY, a.1
0000024D E1                   734  	oneb a
0000024E 61C8                 735  	skc
00000250                      736  .BB@LABEL@3_31:	; bb160
00000250 F1                   737  	clrb a
00000251                      738  .BB@LABEL@3_32:	; bb162
00000251 9F0000               739  	mov !LOWW(_flow_p), a
00000254                      740  	;***      253 :     	if(ns_delay_ms(&g_Tick.tickCustom[1], 60000)){
00000254                      741  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 253
00000254 F6                   742  	clrw ax
00000255 14                   743  	movw de, ax
00000256 3260EA               744  	movw bc, #0xEA60
00000259 300000               745  	movw ax, #LOWW(_g_Tick+0x0008C)
0000025C FC000000             746  	call !!_ns_delay_ms
00000260                      747  	;***      254 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
00000260                      748  	;***      255 : //				g_TickKeeper.SV1_ON_minutes++;
00000260                      749  	;***      256 : //				g_TickKeeper.SV1_OFF_minutes = 0;
00000260                      750  	;***      257 : //			}else{
00000260                      751  	;***      258 : //				g_TickKeeper.SV1_OFF_minutes++;
00000260                      752  	;***      259 : //				g_TickKeeper.SV1_ON_minutes = 0;
00000260                      753  	;***      260 : //			}
00000260                      754  	;***      261 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
00000260                      755  	;***      262 : //				g_TickKeeper.SV2_ON_minutes++;
00000260                      756  	;***      263 : //				g_TickKeeper.SV2_OFF_minutes = 0;
00000260                      757  	;***      264 : //			}else{
00000260                      758  	;***      265 : //				g_TickKeeper.SV2_OFF_minutes++;
00000260                      759  	;***      266 : //				g_TickKeeper.SV2_ON_minutes = 0;
00000260                      760  	;***      267 : //			}
00000260                      761  	;***      268 :     	}
00000260                      762  	;***      269 :     	if(ns_delay_ms(&g_Tick.tickCustom[2], 15000)){
00000260                      763  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 269
00000260 F6                   764  	clrw ax
00000261 14                   765  	movw de, ax
00000262 32983A               766  	movw bc, #0x3A98
00000265 300000               767  	movw ax, #LOWW(_g_Tick+0x00090)
00000268 FC000000             768  	call !!_ns_delay_ms
0000026C                      769  	;***      270 : //    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
0000026C                      770  	;***      271 : //					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
0000026C                      771  	;***      272 : //				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
0000026C                      772  	;***      273 : //						g_io_status.refined.FlowValue);
0000026C                      773  	;***      274 : //			}
0000026C                      774  	;***      275 :     	}
0000026C                      775  	;***      276 :     	if(ns_delay_ms(&g_Tick.tick1s, 1000)){
0000026C                      776  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 276
0000026C F6                   777  	clrw ax
0000026D 14                   778  	movw de, ax
0000026E 32E803               779  	movw bc, #0x03E8
00000271 300000               780  	movw ax, #LOWW(_g_Tick+0x00004)
00000274 FC000000             781  	call !!_ns_delay_ms
00000278 F7                   782  	clrw bc
00000279 43                   783  	cmpw ax, bc
0000027A DD00                 784  	bz $.BB@LABEL@3_36
0000027C                      785  .BB@LABEL@3_33:	; if_then_bb182
0000027C                      786  	;***      277 : 
0000027C                      787  	;***      278 :     		led_st = led_st == 0?0xff:0x00;
0000027C                      788  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 278
0000027C D50000               789  	cmp0 !LOWW(_led_st)
0000027F 51FF                 790  	mov a, #0xFF
00000281 61E8                 791  	skz
00000283                      792  .BB@LABEL@3_34:	; bb188
00000283 F1                   793  	clrb a
00000284                      794  .BB@LABEL@3_35:	; bb190
00000284 9F0000               795  	mov !LOWW(_led_st), a
00000287                      796  	;***      279 :     	    uint8_t state = g_uart2_sendend;
00000287                      797  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 279
00000287 8F0000               798  	mov a, !LOWW(_g_uart2_sendend)
0000028A                      799  	;***      280 :     	    g_crc[6] = crc8_4((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
0000028A                      800  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 280
0000028A 528C                 801  	mov c, #0x8C
0000028C 300000               802  	movw ax, #LOWW(_g_timerSetting)
0000028F FC000000             803  	call !!_crc8_4
00000293 9F0000               804  	mov !LOWW(_g_crc+0x00006), a
00000296                      805  	;***      281 :     	    g_crc[7] = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
00000296                      806  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 281
00000296 528C                 807  	mov c, #0x8C
00000298 300000               808  	movw ax, #LOWW(_g_timerSetting)
0000029B FC000000             809  	call !!_crc8_1
0000029F 9F0000               810  	mov !LOWW(_g_crc+0x00007), a
000002A2                      811  	;***      282 : //    	    switch (g_color) {
000002A2                      812  	;***      283 : //				case BLACK:
000002A2                      813  	;***      284 : //					g_color = RED;
000002A2                      814  	;***      285 : //					break;
000002A2                      815  	;***      286 : //				case RED:
000002A2                      816  	;***      287 : //					g_color = BLUE;
000002A2                      817  	;***      288 : //					break;
000002A2                      818  	;***      289 : //				case BLUE:
000002A2                      819  	;***      290 : //					g_color = WHITE;
000002A2                      820  	;***      291 : //					break;
000002A2                      821  	;***      292 : //				default:
000002A2                      822  	;***      293 : //					g_color = BLACK;
000002A2                      823  	;***      294 : //					break;
000002A2                      824  	;***      295 : //			}
000002A2                      825  	;***      296 : //    	    dac_out[0]+= 10;
000002A2                      826  	;***      297 : 			CVCC_Current_Set(dac_out[0]);
000002A2                      827  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 297
000002A2 8F0000               828  	mov a, !LOWW(_dac_out)
000002A5 FC000000             829  	call !!_R_DAC0_Set_ConversionValue
000002A9                      830  	;***      298 : //			dac_out[1]+= 10;
000002A9                      831  	;***      299 : 			Salt_Analog_Set(dac_out[1]);
000002A9                      832  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 299
000002A9 8F0000               833  	mov a, !LOWW(_dac_out+0x00001)
000002AC FC000000             834  	call !!_R_DAC1_Set_ConversionValue
000002B0                      835  .BB@LABEL@3_36:	; if_break_bb207
000002B0                      836  	;***      300 :     		if(led_st == 0x00){
000002B0                      837  	;***      301 : 
000002B0                      838  	;***      302 : //    			O_CVCC_ON_PIN = ON;
000002B0                      839  	;***      303 : //    			O_HS_ICL_PIN = 0;
000002B0                      840  	;***      304 : //    			O_HS_IDA_PIN = 1;
000002B0                      841  	;***      305 : //    			handSensorLED(RED);
000002B0                      842  	;***      306 : //    			O_CVCC_ALARM_RS = 1;
000002B0                      843  	;***      307 : //    			O_PUMP_SALT_PIN = ON;
000002B0                      844  	;***      308 : //    			electrolyticOperationON();
000002B0                      845  	;***      309 : //    			g_io_status.refined.Valve.SV4 = 1;
000002B0                      846  	;***      310 : //				g_io_status.refined.Pump2 = 1;
000002B0                      847  	;***      311 : //				g_io_status.refined.Valve.SV5 = 0;
000002B0                      848  	;***      312 : //				g_io_status.refined.Pump1 = 0;
000002B0                      849  	;***      313 : //				g_io_status.refined.SaltLowLevel = 1;
000002B0                      850  	;***      314 : //    			e_send[0]++;
000002B0                      851  	;***      315 : //    			g_numberSetting.upperVoltage1++;
000002B0                      852  	;***      316 : //    			g_numberSetting.crc--;
000002B0                      853  	;***      317 : //    			g_numberSetting.crc2++;
000002B0                      854  	;***      318 : //    			g_numberSetting.lowerFlow++;
000002B0                      855  	;***      319 : //    			g_numberSetting.hello++;
000002B0                      856  	;***      320 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
000002B0                      857  	;***      321 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
000002B0                      858  	;***      322 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
000002B0                      859  	;***      323 :     		}else{
000002B0                      860  	;***      324 : //    			O_CVCC_ON_PIN = OFF;
000002B0                      861  	;***      325 : //    			O_HS_ICL_PIN = 1;
000002B0                      862  	;***      326 : //				O_HS_IDA_PIN = 0;
000002B0                      863  	;***      327 : //    			handSensorLED(WHITE);
000002B0                      864  	;***      328 : //    			O_CVCC_ALARM_RS = 0;
000002B0                      865  	;***      329 : //    			O_PUMP_SALT_PIN = OFF;
000002B0                      866  	;***      330 : //    			electrolyticOperationOFF();
000002B0                      867  	;***      331 : //    			g_io_status.refined.Valve.SV4 = 0;
000002B0                      868  	;***      332 : //				g_io_status.refined.Pump2 = 0;
000002B0                      869  	;***      333 : //				g_io_status.refined.Valve.SV5 = 1;
000002B0                      870  	;***      334 : //				g_io_status.refined.Pump1 = 1;
000002B0                      871  	;***      335 : //				g_io_status.refined.SaltLowLevel = 0;
000002B0                      872  	;***      336 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
000002B0                      873  	;***      337 : 
000002B0                      874  	;***      338 :     		}
000002B0                      875  	;***      339 :     	}
000002B0                      876  	;***      340 : 
000002B0                      877  	;***      341 : 
000002B0                      878  	;***      342 : //--------------------------------End testing code---------------------------------------------------------
000002B0                      879  	;***      343 : //    	if(g_machine_state.mode == BUSY){
000002B0                      880  	;***      344 : //    		g_machine_state.user = 0;
000002B0                      881  	;***      345 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
000002B0                      882  	;***      346 : //    			g_machine_state.mode = INDIE;
000002B0                      883  	;***      347 : //    		}
000002B0                      884  	;***      348 : //    	}else{
000002B0                      885  	;***      349 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
000002B0                      886  	;***      350 : //    	}
000002B0                      887  	;***      351 : 
000002B0                      888  	;***      352 : 		if((g_machine_state.mode == WATER_WASHING)|(g_machine_state.mode == INDIE)){
000002B0                      889  	;***      353 : //			nostop_WaterWashingMode();
000002B0                      890  	;***      354 : 		}
000002B0                      891  	;***      355 : //    	InitialOperationModeStart();
000002B0                      892  	;***      356 : 
000002B0                      893  	;***      357 : //    	if(g_color != g_pre_color){
000002B0                      894  	;***      358 : //			O_RS485_MODE_PIN = 1U;
000002B0                      895  	;***      359 : //			uint8_t _uart3 = g_uart3_sendend;
000002B0                      896  	;***      360 : //			send_buf[3]++;
000002B0                      897  	;***      361 : //			R_UART3_Send(send_buf, 7);
000002B0                      898  	;***      362 : //			while(_uart3 == g_uart3_sendend);
000002B0                      899  	;***      363 : //			O_RS485_MODE_PIN = 0U;
000002B0                      900  	;***      364 : //    	}
000002B0                      901  	;***      365 :     	R_WDT_Restart();
000002B0                      902  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 365
000002B0 FC000000             903  	call !!_R_WDT_Restart
000002B4 EE0000               904  	br $!.BB@LABEL@3_1
000002B7                      905  _R_MAIN_UserInit:
000002B7                      906  	.STACK _R_MAIN_UserInit = 4
000002B7                      907  	;***      366 :     }
000002B7                      908  	;***      367 :     /* End user code. Do not edit comment generated here */
000002B7                      909  	;***      368 : }
000002B7                      910  	;***      369 : 
000002B7                      911  	;***      370 : /***********************************************************************************************************************
000002B7                      912  	;***      371 : * Function Name: R_MAIN_UserInit
000002B7                      913  	;***      372 : * Description  : This function adds user code before implementing main function.
000002B7                      914  	;***      373 : * Arguments    : None
000002B7                      915  	;***      374 : * Return Value : None
000002B7                      916  	;***      375 : ***********************************************************************************************************************/
000002B7                      917  	;***      376 : void R_MAIN_UserInit(void)
000002B7                      918  	;***      377 : {
000002B7                      919  	;***      378 :     /* Start user code. Do not edit comment generated here */
000002B7                      920  	;***      379 :     EI();
000002B7                      921  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 379
000002B7 717AFA               922  	ei
000002BA                      923  	;***      380 :     R_TAU0_Create();
000002BA                      924  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 380
000002BA FC000000             925  	call !!_R_TAU0_Create
000002BE                      926  	;***      381 :     R_SAU0_Create();
000002BE                      927  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 381
000002BE FC000000             928  	call !!_R_SAU0_Create
000002C2                      929  	;***      382 :     R_SAU1_Create();
000002C2                      930  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 382
000002C2 FC000000             931  	call !!_R_SAU1_Create
000002C6                      932  	;***      383 :     R_UART1_Create();
000002C6                      933  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 383
000002C6 FC000000             934  	call !!_R_UART1_Create
000002CA                      935  	;***      384 :     R_UART2_Create();
000002CA                      936  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 384
000002CA FC000000             937  	call !!_R_UART2_Create
000002CE                      938  	;***      385 :     R_UART3_Create();
000002CE                      939  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 385
000002CE FC000000             940  	call !!_R_UART3_Create
000002D2                      941  	;***      386 :     R_RTC_Create();
000002D2                      942  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 386
000002D2 FC000000             943  	call !!_R_RTC_Create
000002D6                      944  	;***      387 :     R_PORT_Create_UserInit();
000002D6                      945  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 387
000002D6 FC000000             946  	call !!_R_PORT_Create_UserInit
000002DA                      947  	;***      388 :     R_CSI01_Create();
000002DA                      948  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 388
000002DA FC000000             949  	call !!_R_CSI01_Create
000002DE                      950  	;***      389 :     R_CSI00_Create();
000002DE                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 389
000002DE FC000000             952  	call !!_R_CSI00_Create
000002E2                      953  	;***      390 : 
000002E2                      954  	;***      391 :     R_TAU0_Channel0_Start();
000002E2                      955  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 391
000002E2 FC000000             956  	call !!_R_TAU0_Channel0_Start
000002E6                      957  	;***      392 :     R_UART3_Start();
000002E6                      958  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 392
000002E6 FC000000             959  	call !!_R_UART3_Start
000002EA                      960  	;***      393 :     R_UART1_Start();
000002EA                      961  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 393
000002EA FC000000             962  	call !!_R_UART1_Start
000002EE                      963  	;***      394 :     R_UART2_Start();
000002EE                      964  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 394
000002EE FC000000             965  	call !!_R_UART2_Start
000002F2                      966  	;***      395 :     R_CSI00_Start();
000002F2                      967  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 395
000002F2 FC000000             968  	call !!_R_CSI00_Start
000002F6                      969  	;***      396 : //    R_CSI01_Start();
000002F6                      970  	;***      397 : 
000002F6                      971  	;***      398 : 
000002F6                      972  	;***      399 :     R_ADC_Create();
000002F6                      973  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 399
000002F6 FC000000             974  	call !!_R_ADC_Create
000002FA                      975  	;***      400 :     R_ADC_Set_OperationOn();
000002FA                      976  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 400
000002FA FC000000             977  	call !!_R_ADC_Set_OperationOn
000002FE                      978  	;***      401 :     R_ADC_Start();
000002FE                      979  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 401
000002FE FC000000             980  	call !!_R_ADC_Start
00000302                      981  	;***      402 : 
00000302                      982  	;***      403 :     R_DAC_Create();
00000302                      983  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 403
00000302 FC000000             984  	call !!_R_DAC_Create
00000306                      985  	;***      404 : 	CVCC_Current_Set(0x0);
00000306                      986  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 404
00000306 F1                   987  	clrb a
00000307 FC000000             988  	call !!_R_DAC0_Set_ConversionValue
0000030B                      989  	;***      405 : 	Salt_Analog_Set(0x0);
0000030B                      990  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 405
0000030B F1                   991  	clrb a
0000030C FC000000             992  	call !!_R_DAC1_Set_ConversionValue
00000310                      993  	;***      406 :     R_DAC0_Start();
00000310                      994  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 406
00000310 FC000000             995  	call !!_R_DAC0_Start
00000314                      996  	;***      407 :     R_DAC1_Start();
00000314                      997  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 407
00000314 EC000000             998  	br !!_R_DAC1_Start
00000318                      999  	;***      408 :     /* End user code. Do not edit comment generated here */
00000318                     1000  	;***      409 : }
00000318                     1001  	;***      410 : 
00000318                     1002  	;***      411 : /* Start user code for adding. Do not edit comment generated here */
00000318                     1003  	;***      412 : /* End user code. Do not edit comment generated here */
00000000                     1004  	.SECTION .data,DATA
00000000                     1005  	.ALIGN 2
00000000                     1006  _g_error:
00000000 0000                1007  	.DS (2)
00000002                     1008  	.ALIGN 2
00000002                     1009  _g_adc_ch:
00000002 0000                1010  	.DS (2)
00000004                     1011  _led_st:
00000004 FF                  1012  	.DB 0xFF
00000005                     1013  _send_data:
00000005 23                  1014  	.DB 0x23,0xAB
00000006 AB              
00000007                     1015  _this_size:
00000007 12                  1016  	.DB 0x12
00000008                     1017  _this_size_2:
00000008 12                  1018  	.DB 0x12
00000009                     1019  _send_buf:
00000009 08                  1020  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
0000000A 01              
0000000B 02              
0000000C 03              
0000000D 04              
0000000E 05              
0000000F 06              
00000010                     1021  	.ALIGN 2
00000010                     1022  _data_crc:
00000010 24770000            1023  	.DB4 0x00007724,0x0000EB28
00000014 28EB0000        
00000018                     1024  _dac_out:
00000018 FF                  1025  	.DB 0xFF,0xFF
00000019 FF              
00000000                     1026  	.SECTION .bss,BSS
00000000                     1027  _g_e_status:
00000000                     1028  	.DS (1)
00000001 00                  1029  	.ALIGN 2
00000002                     1030  _ret_number_setting:
00000002                     1031  	.DS (38)
00000028                     1032  _flow_p:
00000028                     1033  	.DS (1)
00000029                     1034  _salt_h_p:
00000029                     1035  	.DS (1)
0000002A                     1036  _g_eeprom_wren:
0000002A                     1037  	.DS (1)
0000002B                     1038  _receive_data:
0000002B                     1039  	.DS (2)
0000002D 00                  1040  	.ALIGN 2
0000002E                     1041  _receive_setting:
0000002E                     1042  	.DS (38)
00000054                     1043  _set:
00000054                     1044  	.DS (1)
00000055 00                  1045  	.ALIGN 2
00000056                     1046  _rx_data:
00000056                     1047  	.DS (12)
00000062                     1048  	.ALIGN 2
00000062                     1049  _data_f:
00000062                     1050  	.DS (4)
00000066                     1051  	.ALIGN 2
00000066                     1052  _data_f_test:
00000066                     1053  	.DS (4)
0000006A                     1054  	.ALIGN 2
0000006A                     1055  _g_control_buffer_f:
0000006A                     1056  	.DS (6)
00000070                     1057  	.ALIGN 2
00000070                     1058  _g_control_buffer_u32:
00000070                     1059  	.DS (6)
00000076                     1060  _handsensor_status:
00000076                     1061  	.DS (1)
00000077                     1062  _g_handsensor_status:
00000077                     1063  	.DS (2)
00000079                     1064  _g_crc:
00000079                     1065  	.DS (8)
00000081 00                  1066  	.ALIGN 2
00000082                     1067  _g_crc_32:
00000082                     1068  	.DS (32)
000000A2                     1069  _rx_count:
000000A2                     1070  	.DS (1)
00000000                     1071  	.SECTION .const,CONST
00000000                     1072  .STR@1:
00000000 00000000            1073  	.DS (4)
00000004 01                  1074  	.DB 0x01
00000005                     1075  .STR@1623:
00000005 00                  1076  	.DS (1)
00000006 01                  1077  	.DB 0x01
00000007 0000                1078  	.DS (2)
00000009 01                  1079  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               792 (00000318) .textf
CONST                10 (0000000A) .const
DATA                 26 (0000001A) .data
BSS                 163 (000000A3) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl001\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

