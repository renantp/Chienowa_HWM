RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Mon Nov 22 14:17:36 2021
00000000                       19  
00000000                       20  	.EXTERN _g_rtc
00000000                       21  	.EXTERN _g_csi_rev_end
00000000                       22  	.EXTERN _g_uart2_fault
00000000                       23  	.EXTERN _g_rx_data
00000000                       24  	.PUBLIC _g_error
00000000                       25  	.PUBLIC _g_adc_ch
00000000                       26  	.PUBLIC __stamp
00000000                       27  	.PUBLIC _g_e_status
00000000                       28  	.PUBLIC _led_st
00000000                       29  	.PUBLIC _flow_p
00000000                       30  	.PUBLIC _salt_h_p
00000000                       31  	.PUBLIC _e_send
00000000                       32  	.PUBLIC _e_data
00000000                       33  	.PUBLIC _g_eeprom_wren
00000000                       34  	.PUBLIC _send_data
00000000                       35  	.PUBLIC _receive_data
00000000                       36  	.PUBLIC _receive_setting
00000000                       37  	.PUBLIC _set
00000000                       38  	.PUBLIC _rx_data
00000000                       39  	.PUBLIC _data_f
00000000                       40  	.PUBLIC _data_f_test
00000000                       41  	.PUBLIC _g_control_buffer
00000000                       42  	.PUBLIC _main
00000000                       43  	.PUBLIC _R_MAIN_UserInit
00000000                       44  	.EXTERN _EEPROM_Init
00000000                       45  	.EXTERN _setting_default
00000000                       46  	.EXTERN _R_RTC_Set_CounterValue
00000000                       47  	.EXTERN _R_RTC_Start
00000000                       48  	.EXTERN _R_UART2_Receive
00000000                       49  	.EXTERN _ns_delay_ms
00000000                       50  	.EXTERN _R_UART2_Stop
00000000                       51  	.EXTERN _delay_ms
00000000                       52  	.EXTERN _R_UART2_Start
00000000                       53  	.EXTERN _sendToRasPi
00000000                       54  	.EXTERN _R_WDT_Restart
00000000                       55  	.EXTERN _R_TAU0_Create
00000000                       56  	.EXTERN _R_SAU0_Create
00000000                       57  	.EXTERN _R_SAU1_Create
00000000                       58  	.EXTERN _R_UART1_Create
00000000                       59  	.EXTERN _R_UART2_Create
00000000                       60  	.EXTERN _R_UART3_Create
00000000                       61  	.EXTERN _R_RTC_Create
00000000                       62  	.EXTERN _R_PORT_Create_UserInit
00000000                       63  	.EXTERN _R_CSI01_Create
00000000                       64  	.EXTERN _R_CSI00_Create
00000000                       65  	.EXTERN _R_TAU0_Channel0_Start
00000000                       66  	.EXTERN _R_UART3_Start
00000000                       67  	.EXTERN _R_UART1_Start
00000000                       68  	.EXTERN _R_CSI00_Start
00000000                       69  	.EXTERN _R_ADC_Create
00000000                       70  	.EXTERN _R_ADC_Set_OperationOn
00000000                       71  	.EXTERN _R_ADC_Start
00000000                       72  
00000000                       73  	.SECTION .textf,TEXTF
00000000                       74  _main:
00000000                       75  	.STACK _main = 12
00000000                       76  	;***        1 : /***********************************************************************************************************************
00000000                       77  	;***        2 : * DISCLAIMER
00000000                       78  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                       79  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                       80  	;***        5 : * applicable laws, including copyright laws. 
00000000                       81  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                       82  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                       83  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                       84  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                       85  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                       86  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                       87  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                       88  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                       89  	;***       14 : * following link:
00000000                       90  	;***       15 : * http://www.renesas.com/disclaimer
00000000                       91  	;***       16 : *
00000000                       92  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                       93  	;***       18 : ***********************************************************************************************************************/
00000000                       94  	;***       19 : 
00000000                       95  	;***       20 : /***********************************************************************************************************************
00000000                       96  	;***       21 : * File Name    : r_main.c
00000000                       97  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                       98  	;***       23 : * Device(s)    : R5F104ML
00000000                       99  	;***       24 : * Tool-Chain   : CCRL
00000000                      100  	;***       25 : * Description  : This file implements main function.
00000000                      101  	;***       26 : * Creation Date: 17/11/2021
00000000                      102  	;***       27 : ***********************************************************************************************************************/
00000000                      103  	;***       28 : 
00000000                      104  	;***       29 : /***********************************************************************************************************************
00000000                      105  	;***       30 : Includes
00000000                      106  	;***       31 : ***********************************************************************************************************************/
00000000                      107  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      108  	;***       33 : #include "r_cg_cgc.h"
00000000                      109  	;***       34 : #include "r_cg_port.h"
00000000                      110  	;***       35 : #include "r_cg_serial.h"
00000000                      111  	;***       36 : #include "r_cg_adc.h"
00000000                      112  	;***       37 : #include "r_cg_dac.h"
00000000                      113  	;***       38 : #include "r_cg_timer.h"
00000000                      114  	;***       39 : #include "r_cg_wdt.h"
00000000                      115  	;***       40 : #include "r_cg_rtc.h"
00000000                      116  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      117  	;***       42 : #include "EEPROM.h"
00000000                      118  	;***       43 : #include "usr_timer.h"
00000000                      119  	;***       44 : #include "usr_setting_sheet.h"
00000000                      120  	;***       45 : /* End user code. Do not edit comment generated here */
00000000                      121  	;***       46 : #include "r_cg_userdefine.h"
00000000                      122  	;***       47 : 
00000000                      123  	;***       48 : /***********************************************************************************************************************
00000000                      124  	;***       49 : Pragma directive
00000000                      125  	;***       50 : ***********************************************************************************************************************/
00000000                      126  	;***       51 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      127  	;***       52 : /* End user code. Do not edit comment generated here */
00000000                      128  	;***       53 : 
00000000                      129  	;***       54 : /***********************************************************************************************************************
00000000                      130  	;***       55 : Global variables and functions
00000000                      131  	;***       56 : ***********************************************************************************************************************/
00000000                      132  	;***       57 : /* Start user code for global. Do not edit comment generated here */
00000000                      133  	;***       58 : volatile int g_error = 0;
00000000                      134  	;***       59 : volatile int g_adc_ch = 0;
00000000                      135  	;***       60 : uint32_t _stamp[3];
00000000                      136  	;***       61 : union EEPROM_status_u g_e_status;
00000000                      137  	;***       62 : uint8_t led_st = 0xff;
00000000                      138  	;***       63 : uint8_t flow_p, salt_h_p;
00000000                      139  	;***       64 : uint8_t e_send[12] = {EEPROM_RDSR, 0b10100101, EEPROM_WRSR, 0x00, EEPROM_WRSR, 0x02, EEPROM_WREN, EEPROM_WRDI};
00000000                      140  	;***       65 : uint8_t e_data[12] = {0,0};
00000000                      141  	;***       66 : uint8_t g_eeprom_wren;
00000000                      142  	;***       67 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      143  	;***       68 : uint8_t receive_data[2];
00000000                      144  	;***       69 : struct Number_Setting_s receive_setting;
00000000                      145  	;***       70 : union EEPROM_status_u set;
00000000                      146  	;***       71 : uint32_t rx_data[3];
00000000                      147  	;***       72 : float data_f;
00000000                      148  	;***       73 : union byte_to_float data_f_test;
00000000                      149  	;***       74 : struct UART_Buffer_s g_control_buffer;
00000000                      150  	;***       75 : /* End user code. Do not edit comment generated here */
00000000                      151  	;***       76 : void R_MAIN_UserInit(void);
00000000                      152  	;***       77 : 
00000000                      153  	;***       78 : /***********************************************************************************************************************
00000000                      154  	;***       79 : * Function Name: main
00000000                      155  	;***       80 : * Description  : This function implements main function.
00000000                      156  	;***       81 : * Arguments    : None
00000000                      157  	;***       82 : * Return Value : None
00000000                      158  	;***       83 : ***********************************************************************************************************************/
00000000                      159  	;***       84 : void main(void)
00000000                      160  	;***       85 : {
00000000                      161  	;***       86 :     R_MAIN_UserInit();
00000000                      162  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 86
00000000 FE0000               163  	call $!_R_MAIN_UserInit
00000003                      164  	;***       87 :     /* Start user code. Do not edit comment generated here */
00000003                      165  	;***       88 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
00000003                      166  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000003 F2                   167  	clrb c
00000004 300000               168  	movw ax, #LOWW(_g_csi_rev_end)
00000007 FC000000             169  	call !!_EEPROM_Init
0000000B                      170  	;***       89 : //    O_RS485_MODE_PIN = 1U;
0000000B                      171  	;***       90 : //    EEPROM_SPI_WriteBuffer(e_send, 0x000f, 4);
0000000B                      172  	;***       91 : //    delay_ms(1000);
0000000B                      173  	;***       92 : //    EEPROM_SPI_ReadBuffer(e_data, 0x000f, 3);
0000000B                      174  	;***       93 : //    R_UART0_Send("Hello \r\n", sizeof("Hello \r\n") - 1);
0000000B                      175  	;***       94 : //    csi01_status = STATUS_COMPLETE;
0000000B                      176  	;***       95 :     //Power ON
0000000B                      177  	;***       96 :     setting_default();
0000000B                      178  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 96
0000000B FC000000             179  	call !!_setting_default
0000000F                      180  	;***       97 :     g_rtc.hour = 10;
0000000F                      181  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
0000000F CF00000A             182  	mov !LOWW(_g_rtc+0x00002), #0x0A
00000013                      183  	;***       98 :     g_rtc.sec = 2;
00000013                      184  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000013 CF000002             185  	mov !LOWW(_g_rtc), #0x02
00000017                      186  	;***       99 :     R_RTC_Set_CounterValue(g_rtc);
00000017                      187  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 99
00000017 2008                 188  	subw sp, #0x08
00000019 AEF8                 189  	movw ax, sp
0000001B 340700               190  	movw de, #0x0007
0000001E 320000               191  	movw bc, #LOWW(_g_rtc)
00000021 FC000000             192  	call !!_memcpy
00000025 FC000000             193  	call !!_R_RTC_Set_CounterValue
00000029 1008                 194  	addw sp, #0x08
0000002B                      195  	;***      100 :     R_RTC_Start();
0000002B                      196  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
0000002B FC000000             197  	call !!_R_RTC_Start
0000002F                      198  	;***      101 :     R_UART2_Receive(g_rx_data, sizeof(struct UART_Buffer_s));
0000002F                      199  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
0000002F 320600               200  	movw bc, #0x0006
00000032 300000               201  	movw ax, #LOWW(_g_rx_data)
00000035 FC000000             202  	call !!_R_UART2_Receive
00000039                      203  .BB@LABEL@1_1:	; bb57
00000039                      204  	;***      102 : //    EEPROM_PROTECT_EN();
00000039                      205  	;***      103 :     while (1U)
00000039                      206  	;***      104 :     {
00000039                      207  	;***      105 : //--------------------------------- Testing code---------------------------------------------------------------
00000039                      208  	;***      106 :     	if(ns_delay_ms(&_stamp[0], 200)){
00000039                      209  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 106
00000039 F6                   210  	clrw ax
0000003A 14                   211  	movw de, ax
0000003B 32C800               212  	movw bc, #0x00C8
0000003E 300000               213  	movw ax, #LOWW(__stamp)
00000041 FC000000             214  	call !!_ns_delay_ms
00000045                      215  	;***      107 : ////    		P6_bit.no3 = ~P6_bit.no3;
00000045                      216  	;***      108 : //    		R_UART3_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000045                      217  	;***      109 : //    		R_UART1_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000045                      218  	;***      110 : //    		g_e_status.raw = rEE_Status();
00000045                      219  	;***      111 :     	}
00000045                      220  	;***      112 :     	if(g_uart2_fault == 1){
00000045                      221  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 112
00000045 40000001             222  	cmp !LOWW(_g_uart2_fault), #0x01
00000049 DF00                 223  	bnz $.BB@LABEL@1_3
0000004B                      224  .BB@LABEL@1_2:	; if_then_bb10
0000004B                      225  	;***      113 :     		R_UART2_Stop();
0000004B                      226  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 113
0000004B FC000000             227  	call !!_R_UART2_Stop
0000004F                      228  	;***      114 :     		delay_ms(10);
0000004F                      229  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 114
0000004F F7                   230  	clrw bc
00000050 300A00               231  	movw ax, #0x000A
00000053 FC000000             232  	call !!_delay_ms
00000057                      233  	;***      115 :     		R_UART2_Start();
00000057                      234  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 115
00000057 FC000000             235  	call !!_R_UART2_Start
0000005B                      236  	;***      116 :     		g_uart2_fault = 0;
0000005B                      237  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 116
0000005B F50000               238  	clrb !LOWW(_g_uart2_fault)
0000005E                      239  .BB@LABEL@1_3:	; if_break_bb11
0000005E                      240  	;***      117 :     	}
0000005E                      241  	;***      118 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
0000005E                      242  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 118
0000005E 8D00                 243  	mov a, 0xFFF00
00000060 719C                 244  	mov1 CY, a.1
00000062 E1                   245  	oneb a
00000063 61C8                 246  	skc
00000065                      247  .BB@LABEL@1_4:	; bb19
00000065 F1                   248  	clrb a
00000066                      249  .BB@LABEL@1_5:	; bb20
00000066 9F0000               250  	mov !LOWW(_flow_p), a
00000069                      251  	;***      119 :     	if(ns_delay_ms(&_stamp[1], 1000)){
00000069                      252  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 119
00000069 F6                   253  	clrw ax
0000006A 14                   254  	movw de, ax
0000006B 32E803               255  	movw bc, #0x03E8
0000006E 300000               256  	movw ax, #LOWW(__stamp+0x00004)
00000071 FC000000             257  	call !!_ns_delay_ms
00000075 F7                   258  	clrw bc
00000076 43                   259  	cmpw ax, bc
00000077 DD00                 260  	bz $.BB@LABEL@1_9
00000079                      261  .BB@LABEL@1_6:	; if_then_bb28
00000079                      262  	;***      120 :     		O_CTRL_OUT_PIN = led_st&0x01;
00000079                      263  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 120
00000079 8F0000               264  	mov a, !LOWW(_led_st)
0000007C 70                   265  	mov x, a
0000007D 718C                 266  	mov1 CY, a.0
0000007F 8D03                 267  	mov a, 0xFFF03
00000081 7199                 268  	mov1 a.1, CY
00000083 9D03                 269  	mov 0xFFF03, a
00000085                      270  	;***      121 :     		led_st = led_st == 0?0xff:0x00;
00000085                      271  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 121
00000085 D0                   272  	cmp0 x
00000086 51FF                 273  	mov a, #0xFF
00000088 61E8                 274  	skz
0000008A                      275  .BB@LABEL@1_7:	; bb43
0000008A F1                   276  	clrb a
0000008B                      277  .BB@LABEL@1_8:	; bb45
0000008B 9F0000               278  	mov !LOWW(_led_st), a
0000008E                      279  	;***      122 : //    		uint32_t buf[3] = {H_ALARM, 0x11100100, 0xffffffff};
0000008E                      280  	;***      123 : //    	    uint8_t state = g_uart2_send;
0000008E                      281  	;***      124 : //    	    R_UART2_Send((uint8_t *)buf, sizeof(uint32_t)*3);
0000008E                      282  	;***      125 : //			while(state == g_uart2_send);
0000008E                      283  	;***      126 : //			g_rx_data[0]= g_rx_data[1]=g_rx_data[2]= 0x00;
0000008E                      284  	;***      127 : //			g_control_buffer.head = H_ALARM;
0000008E                      285  	;***      128 : //			g_control_buffer.set_number = 4;
0000008E                      286  	;***      129 : //			g_control_buffer.set_value = 1;
0000008E                      287  	;***      130 : //			R_UART2_Send((uint8_t *)&g_control_buffer, sizeof(struct UART_Buffer_s));
0000008E                      288  	;***      131 : //			while(state == g_uart2_send);
0000008E                      289  	;***      132 : 			sendToRasPi(H_ALARM, OVER_CURRENT, 1);
0000008E                      290  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
0000008E 34803F               291  	movw de, #0x3F80
00000091 300741               292  	movw ax, #0x4107
00000094 FC000000             293  	call !!_sendToRasPi
00000098                      294  .BB@LABEL@1_9:	; if_break_bb56
00000098                      295  	;***      133 : //			R_UART2_Receive((uint8_t *)rx_data, 12);
00000098                      296  	;***      134 : //			data_f = (float)rx_data[0];
00000098                      297  	;***      135 : ////			data_f_test.refined.b[0] = rx_data[0]>>24;
00000098                      298  	;***      136 : ////			data_f_test.refined.b[1] = rx_data[0]>>16;
00000098                      299  	;***      137 : ////			data_f_test.refined.b[2] = rx_data[0]>>8;
00000098                      300  	;***      138 : ////			data_f_test.refined.b[3] = rx_data[0];
00000098                      301  	;***      139 : //			data_f_test.refined.b[0] = rx_data[0];
00000098                      302  	;***      140 : //			data_f_test.refined.b[1] = rx_data[0]>>8;
00000098                      303  	;***      141 : //			data_f_test.refined.b[2] = rx_data[0]>>16;
00000098                      304  	;***      142 : //			data_f_test.refined.b[3] = rx_data[0]>>24;
00000098                      305  	;***      143 :     		if(led_st == 0x00){
00000098                      306  	;***      144 :     		}else{
00000098                      307  	;***      145 :     		}
00000098                      308  	;***      146 :     	}
00000098                      309  	;***      147 : //--------------------------------End testing code---------------------------------------------------------
00000098                      310  	;***      148 : //    	main_20211111();
00000098                      311  	;***      149 :     	R_WDT_Restart();
00000098                      312  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 149
00000098 FC000000             313  	call !!_R_WDT_Restart
0000009C EF00                 314  	br $.BB@LABEL@1_1
0000009E                      315  _R_MAIN_UserInit:
0000009E                      316  	.STACK _R_MAIN_UserInit = 4
0000009E                      317  	;***      150 :     }
0000009E                      318  	;***      151 :     /* End user code. Do not edit comment generated here */
0000009E                      319  	;***      152 : }
0000009E                      320  	;***      153 : 
0000009E                      321  	;***      154 : /***********************************************************************************************************************
0000009E                      322  	;***      155 : * Function Name: R_MAIN_UserInit
0000009E                      323  	;***      156 : * Description  : This function adds user code before implementing main function.
0000009E                      324  	;***      157 : * Arguments    : None
0000009E                      325  	;***      158 : * Return Value : None
0000009E                      326  	;***      159 : ***********************************************************************************************************************/
0000009E                      327  	;***      160 : void R_MAIN_UserInit(void)
0000009E                      328  	;***      161 : {
0000009E                      329  	;***      162 :     /* Start user code. Do not edit comment generated here */
0000009E                      330  	;***      163 :     EI();
0000009E                      331  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
0000009E 717AFA               332  	ei
000000A1                      333  	;***      164 :     R_TAU0_Create();
000000A1                      334  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 164
000000A1 FC000000             335  	call !!_R_TAU0_Create
000000A5                      336  	;***      165 :     R_SAU0_Create();
000000A5                      337  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 165
000000A5 FC000000             338  	call !!_R_SAU0_Create
000000A9                      339  	;***      166 :     R_SAU1_Create();
000000A9                      340  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
000000A9 FC000000             341  	call !!_R_SAU1_Create
000000AD                      342  	;***      167 :     R_UART1_Create();
000000AD                      343  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 167
000000AD FC000000             344  	call !!_R_UART1_Create
000000B1                      345  	;***      168 :     R_UART2_Create();
000000B1                      346  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 168
000000B1 FC000000             347  	call !!_R_UART2_Create
000000B5                      348  	;***      169 :     R_UART3_Create();
000000B5                      349  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 169
000000B5 FC000000             350  	call !!_R_UART3_Create
000000B9                      351  	;***      170 :     R_RTC_Create();
000000B9                      352  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
000000B9 FC000000             353  	call !!_R_RTC_Create
000000BD                      354  	;***      171 :     R_PORT_Create_UserInit();
000000BD                      355  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 171
000000BD FC000000             356  	call !!_R_PORT_Create_UserInit
000000C1                      357  	;***      172 :     R_CSI01_Create();
000000C1                      358  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 172
000000C1 FC000000             359  	call !!_R_CSI01_Create
000000C5                      360  	;***      173 :     R_CSI00_Create();
000000C5                      361  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 173
000000C5 FC000000             362  	call !!_R_CSI00_Create
000000C9                      363  	;***      174 : 
000000C9                      364  	;***      175 :     R_TAU0_Channel0_Start();
000000C9                      365  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
000000C9 FC000000             366  	call !!_R_TAU0_Channel0_Start
000000CD                      367  	;***      176 :     R_UART3_Start();
000000CD                      368  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 176
000000CD FC000000             369  	call !!_R_UART3_Start
000000D1                      370  	;***      177 :     R_UART1_Start();
000000D1                      371  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
000000D1 FC000000             372  	call !!_R_UART1_Start
000000D5                      373  	;***      178 :     R_UART2_Start();
000000D5                      374  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
000000D5 FC000000             375  	call !!_R_UART2_Start
000000D9                      376  	;***      179 :     R_CSI00_Start();
000000D9                      377  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 179
000000D9 FC000000             378  	call !!_R_CSI00_Start
000000DD                      379  	;***      180 : //    R_CSI01_Start();
000000DD                      380  	;***      181 : 
000000DD                      381  	;***      182 : 
000000DD                      382  	;***      183 :     R_ADC_Create();
000000DD                      383  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
000000DD FC000000             384  	call !!_R_ADC_Create
000000E1                      385  	;***      184 :     R_ADC_Set_OperationOn();
000000E1                      386  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 184
000000E1 FC000000             387  	call !!_R_ADC_Set_OperationOn
000000E5                      388  	;***      185 : //    R_ADC_Set_ADChannel(ADCHANNEL0);
000000E5                      389  	;***      186 :     R_ADC_Start();
000000E5                      390  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 186
000000E5 EC000000             391  	br !!_R_ADC_Start
000000E9                      392  	;***      187 :     /* End user code. Do not edit comment generated here */
000000E9                      393  	;***      188 : }
000000E9                      394  	;***      189 : 
000000E9                      395  	;***      190 : /* Start user code for adding. Do not edit comment generated here */
000000E9                      396  	;***      191 : /* End user code. Do not edit comment generated here */
00000000                      397  	.SECTION .data,DATA
00000000                      398  	.ALIGN 2
00000000                      399  _g_error:
00000000 0000                 400  	.DS (2)
00000002                      401  	.ALIGN 2
00000002                      402  _g_adc_ch:
00000002 0000                 403  	.DS (2)
00000004                      404  _led_st:
00000004 FF                   405  	.DB 0xFF
00000005                      406  _e_send:
00000005 05                   407  	.DB 0x05,0xA5,0x01
00000006 A5              
00000007 01              
00000008 00                   408  	.DS (1)
00000009 01                   409  	.DB 0x01,0x02,0x06,0x04
0000000A 02              
0000000B 06              
0000000C 04              
0000000D 00000000             410  	.DS (4)
00000011                      411  _e_data:
00000011 0000000000000000     412  	.DS (12)
00000019 00000000
0000001D                      413  _send_data:
0000001D 23                   414  	.DB 0x23,0xAB
0000001E AB              
00000000                      415  	.SECTION .bss,BSS
00000000                      416  	.ALIGN 2
00000000                      417  __stamp:
00000000                      418  	.DS (12)
0000000C                      419  _g_e_status:
0000000C                      420  	.DS (1)
0000000D                      421  _flow_p:
0000000D                      422  	.DS (1)
0000000E                      423  _salt_h_p:
0000000E                      424  	.DS (1)
0000000F                      425  _g_eeprom_wren:
0000000F                      426  	.DS (1)
00000010                      427  _receive_data:
00000010                      428  	.DS (2)
00000012                      429  	.ALIGN 2
00000012                      430  _receive_setting:
00000012                      431  	.DS (32)
00000032                      432  _set:
00000032                      433  	.DS (1)
00000033 00                   434  	.ALIGN 2
00000034                      435  _rx_data:
00000034                      436  	.DS (12)
00000040                      437  	.ALIGN 2
00000040                      438  _data_f:
00000040                      439  	.DS (4)
00000044                      440  	.ALIGN 2
00000044                      441  _data_f_test:
00000044                      442  	.DS (4)
00000048                      443  	.ALIGN 2
00000048                      444  _g_control_buffer:
00000048                      445  	.DS (6)

Section List
Attr     Size                Name

TEXTF               233 (000000E9) .textf
DATA                 31 (0000001F) .data
BSS                  78 (0000004E) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

