RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Thu Jan 06 18:03:46 2022
00000000                       19  
00000000                       20  	.EXTERN _g_color
00000000                       21  	.EXTERN _g_pre_color
00000000                       22  	.EXTERN __settingTime
00000000                       23  	.EXTERN __settingNumber
00000000                       24  	.EXTERN _g_timerSetting
00000000                       25  	.EXTERN _g_numberSetting
00000000                       26  	.EXTERN _g_io_status
00000000                       27  	.EXTERN _g_Tick
00000000                       28  	.EXTERN _commnunication_flag
00000000                       29  	.EXTERN _g_machine_mode
00000000                       30  	.EXTERN _g_systemTime
00000000                       31  	.EXTERN _g_csi_rev_end
00000000                       32  	.EXTERN _g_uart2_fault
00000000                       33  	.EXTERN _g_uart2_sendend
00000000                       34  	.EXTERN _g_uart3_sendend
00000000                       35  	.EXTERN _g_rx_data
00000000                       36  	.EXTERN _g_uart3_rx_data
00000000                       37  	.PUBLIC _g_adc_ch
00000000                       38  	.PUBLIC _g_e_status
00000000                       39  	.PUBLIC _ret_number_setting
00000000                       40  	.PUBLIC _led_st
00000000                       41  	.PUBLIC _flow_p
00000000                       42  	.PUBLIC _salt_h_p
00000000                       43  	.PUBLIC _g_eeprom_wren
00000000                       44  	.PUBLIC _send_data
00000000                       45  	.PUBLIC _receive_data
00000000                       46  	.PUBLIC _receive_setting
00000000                       47  	.PUBLIC _set
00000000                       48  	.PUBLIC _rx_data
00000000                       49  	.PUBLIC _data_f
00000000                       50  	.PUBLIC _data_f_test
00000000                       51  	.PUBLIC _g_control_buffer_f
00000000                       52  	.PUBLIC _g_control_buffer_u32
00000000                       53  	.PUBLIC _handsensor_status
00000000                       54  	.PUBLIC _g_handsensor_status
00000000                       55  	.PUBLIC _this_size
00000000                       56  	.PUBLIC _this_size_2
00000000                       57  	.PUBLIC _send_buf
00000000                       58  	.PUBLIC _g_crc
00000000                       59  	.PUBLIC _g_crc_32
00000000                       60  	.PUBLIC _data_crc
00000000                       61  	.PUBLIC _rx_count
00000000                       62  	.PUBLIC _dac_out
00000000                       63  	.PUBLIC _nostop_checkHandSensor
00000000                       64  	.EXTERN _ns_delay_ms
00000000                       65  	.PUBLIC _readHS
00000000                       66  	.EXTERN _delay_ms
00000000                       67  	.PUBLIC _main
00000000                       68  	.PUBLIC _R_MAIN_UserInit
00000000                       69  	.EXTERN _EEPROM_Init
00000000                       70  	.EXTERN _EE_SPI_Read
00000000                       71  	.EXTERN _R_UART2_Receive
00000000                       72  	.EXTERN _R_UART3_Receive
00000000                       73  	.EXTERN _sendRS485
00000000                       74  	.EXTERN _handSensorLED
00000000                       75  	.EXTERN _realTimeResponse
00000000                       76  	.EXTERN _main_loop_20211111
00000000                       77  	.EXTERN _UpdateMachineStatus
00000000                       78  	.EXTERN _R_UART2_Stop
00000000                       79  	.EXTERN _R_UART2_Start
00000000                       80  	.EXTERN _sendR485_7byte
00000000                       81  	.EXTERN _R_UART3_Stop
00000000                       82  	.EXTERN _R_UART3_Start
00000000                       83  	.EXTERN _crc8_4
00000000                       84  	.EXTERN _crc8_1
00000000                       85  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       86  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       87  	.EXTERN _R_WDT_Restart
00000000                       88  	.EXTERN _R_TAU0_Create
00000000                       89  	.EXTERN _R_SAU0_Create
00000000                       90  	.EXTERN _R_SAU1_Create
00000000                       91  	.EXTERN _R_UART1_Create
00000000                       92  	.EXTERN _R_UART2_Create
00000000                       93  	.EXTERN _R_UART3_Create
00000000                       94  	.EXTERN _R_RTC_Create
00000000                       95  	.EXTERN _R_PORT_Create_UserInit
00000000                       96  	.EXTERN _R_CSI01_Create
00000000                       97  	.EXTERN _R_CSI00_Create
00000000                       98  	.EXTERN _R_TAU0_Channel0_Start
00000000                       99  	.EXTERN _R_UART1_Start
00000000                      100  	.EXTERN _R_CSI00_Start
00000000                      101  	.EXTERN _R_ADC_Create
00000000                      102  	.EXTERN _R_ADC_Set_OperationOn
00000000                      103  	.EXTERN _R_ADC_Start
00000000                      104  	.EXTERN _R_DAC_Create
00000000                      105  	.EXTERN _R_DAC0_Start
00000000                      106  	.EXTERN _R_DAC1_Start
00000000                      107  
00000000                      108  	.SECTION .textf,TEXTF
00000000                      109  _nostop_checkHandSensor:
00000000                      110  	.STACK _nostop_checkHandSensor = 4
00000000                      111  	;***        1 : /***********************************************************************************************************************
00000000                      112  	;***        2 : * DISCLAIMER
00000000                      113  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      114  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      115  	;***        5 : * applicable laws, including copyright laws. 
00000000                      116  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      117  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      118  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      119  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      120  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      121  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      122  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                      123  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                      124  	;***       14 : * following link:
00000000                      125  	;***       15 : * http://www.renesas.com/disclaimer
00000000                      126  	;***       16 : *
00000000                      127  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      128  	;***       18 : ***********************************************************************************************************************/
00000000                      129  	;***       19 : 
00000000                      130  	;***       20 : /***********************************************************************************************************************
00000000                      131  	;***       21 : * File Name    : r_main.c
00000000                      132  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      133  	;***       23 : * Device(s)    : R5F104ML
00000000                      134  	;***       24 : * Tool-Chain   : CCRL
00000000                      135  	;***       25 : * Description  : This file implements main function.
00000000                      136  	;***       26 : * Creation Date: 30/11/2021
00000000                      137  	;***       27 : ***********************************************************************************************************************/
00000000                      138  	;***       28 : 
00000000                      139  	;***       29 : /***********************************************************************************************************************
00000000                      140  	;***       30 : Includes
00000000                      141  	;***       31 : ***********************************************************************************************************************/
00000000                      142  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      143  	;***       33 : #include "r_cg_cgc.h"
00000000                      144  	;***       34 : #include "r_cg_port.h"
00000000                      145  	;***       35 : #include "r_cg_serial.h"
00000000                      146  	;***       36 : #include "r_cg_adc.h"
00000000                      147  	;***       37 : #include "r_cg_dac.h"
00000000                      148  	;***       38 : #include "r_cg_timer.h"
00000000                      149  	;***       39 : #include "r_cg_wdt.h"
00000000                      150  	;***       40 : #include "r_cg_rtc.h"
00000000                      151  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      152  	;***       42 : #include "EEPROM.h"
00000000                      153  	;***       43 : #include "usr_timer.h"
00000000                      154  	;***       44 : #include "usr_setting_sheet.h"
00000000                      155  	;***       45 : #include "crc8.h"
00000000                      156  	;***       46 : #include "hwm/main.h"
00000000                      157  	;***       47 : #include "r_cg_userdefine.h"
00000000                      158  	;***       48 : 
00000000                      159  	;***       49 : /***********************************************************************************************************************
00000000                      160  	;***       50 : Pragma directive
00000000                      161  	;***       51 : ***********************************************************************************************************************/
00000000                      162  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      163  	;***       53 : #define CVCC_Current_Set(a) R_DAC0_Set_ConversionValue(a)
00000000                      164  	;***       54 : #define Salt_Analog_Set(a) R_DAC1_Set_ConversionValue(a)
00000000                      165  	;***       55 : /* End user code. Do not edit comment generated here */
00000000                      166  	;***       56 : 
00000000                      167  	;***       57 : /***********************************************************************************************************************
00000000                      168  	;***       58 : Global variables and functions
00000000                      169  	;***       59 : ***********************************************************************************************************************/
00000000                      170  	;***       60 : /* Start user code for global. Do not edit comment generated here */
00000000                      171  	;***       61 : 
00000000                      172  	;***       62 : volatile int g_adc_ch = 0;
00000000                      173  	;***       63 : union EEPROM_status_u g_e_status;
00000000                      174  	;***       64 : struct Number_Setting_s ret_number_setting;
00000000                      175  	;***       65 : uint8_t led_st = 0xff;
00000000                      176  	;***       66 : uint8_t flow_p, salt_h_p;
00000000                      177  	;***       67 : uint8_t g_eeprom_wren;
00000000                      178  	;***       68 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      179  	;***       69 : uint8_t receive_data[2];
00000000                      180  	;***       70 : struct Number_Setting_s receive_setting;
00000000                      181  	;***       71 : union EEPROM_status_u set;
00000000                      182  	;***       72 : uint32_t rx_data[3];
00000000                      183  	;***       73 : float data_f;
00000000                      184  	;***       74 : union byte_to_float data_f_test;
00000000                      185  	;***       75 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      186  	;***       76 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      187  	;***       77 : 
00000000                      188  	;***       78 : union {
00000000                      189  	;***       79 : 	struct{
00000000                      190  	;***       80 : 		uint8_t up_signal;
00000000                      191  	;***       81 : 	};
00000000                      192  	;***       82 : 	uint8_t status;
00000000                      193  	;***       83 : }handsensor_status;
00000000                      194  	;***       84 : uint8_t g_handsensor_status[2];
00000000                      195  	;***       85 : void nostop_checkHandSensor(void){
00000000                      196  	;***       86 : 	if(DETECT_U() == I_ON){
00000000                      197  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 86
00000000 8D07                 198  	mov a, 0xFFF07
00000002 315300               199  	bt a.5, $.BB@LABEL@1_5
00000005                      200  .BB@LABEL@1_1:	; if_then_bb
00000005                      201  	;***       87 : 		if(ns_delay_ms(&g_Tick.tickHandSensor[0], 500)){
00000005                      202  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000005 F6                   203  	clrw ax
00000006 14                   204  	movw de, ax
00000007 32F401               205  	movw bc, #0x01F4
0000000A 300000               206  	movw ax, #LOWW(_g_Tick+0x00088)
0000000D FC000000             207  	call !!_ns_delay_ms
00000011 F7                   208  	clrw bc
00000012 43                   209  	cmpw ax, bc
00000013 DD00                 210  	bz $.BB@LABEL@1_9
00000015                      211  .BB@LABEL@1_2:	; if_then_bb16
00000015                      212  	;***       88 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0? 1:0;
00000015                      213  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000015 D50000               214  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   215  	oneb a
00000019 61E8                 216  	skz
0000001B                      217  .BB@LABEL@1_3:	; bb22
0000001B F1                   218  	clrb a
0000001C                      219  .BB@LABEL@1_4:	; bb24
0000001C 9F0000               220  	mov !LOWW(_g_handsensor_status), a
0000001F                      221  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
0000001F D7                   222  	ret
00000020                      223  .BB@LABEL@1_5:	; if_else_bb
00000020                      224  	;***       89 : 		}
00000020                      225  	;***       90 : 	}else if(DETECT_D() == I_ON){
00000020                      226  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 90
00000020 8D07                 227  	mov a, 0xFFF07
00000022 314300               228  	bt a.4, $.BB@LABEL@1_7
00000025                      229  .BB@LABEL@1_6:	; if_then_bb43
00000025                      230  	;***       91 : 		g_handsensor_status[1] = 1;
00000025                      231  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000025 E50000               232  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   233  	ret
00000029                      234  .BB@LABEL@1_7:	; if_else_bb44
00000029                      235  	;***       92 : 	}else if(DETECT_U() == I_OFF){
00000029                      236  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000029 8D07                 237  	mov a, 0xFFF07
0000002B 315300               238  	bt a.5, $.BB@LABEL@1_9
0000002E                      239  .BB@LABEL@1_8:	; if_else_bb61
0000002E                      240  	;***       93 : 
0000002E                      241  	;***       94 : 	}else if(DETECT_D() == I_OFF){
0000002E                      242  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 94
0000002E 8D07                 243  	mov a, 0xFFF07
00000030                      244  .BB@LABEL@1_9:	; return
00000030                      245  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 97
00000030 D7                   246  	ret
00000031                      247  _readHS:
00000031                      248  	.STACK _readHS = 4
00000031                      249  	;***       95 : 
00000031                      250  	;***       96 : 	}
00000031                      251  	;***       97 : }
00000031                      252  	;***       98 : uint8_t readHS(void){
00000031                      253  	;***       99 :    if(DETECT_U()){
00000031                      254  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 99
00000031 8D07                 255  	mov a, 0xFFF07
00000033 315300               256  	bt a.5, $.BB@LABEL@2_2
00000036                      257  .BB@LABEL@2_1:	; bb33
00000036                      258  	;***      100 : 	  delay_ms(2);
00000036                      259  	;***      101 :       if(DETECT_U()) return 1;return 0;
00000036                      260  	;***      102 :    }else return 0;
00000036                      261  	;***      103 : }
00000036                      262  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 103
00000036 F1                   263  	clrb a
00000037 D7                   264  	ret
00000038                      265  .BB@LABEL@2_2:	; if_then_bb
00000038                      266  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000038 F7                   267  	clrw bc
00000039 E6                   268  	onew ax
0000003A A1                   269  	incw ax
0000003B FC000000             270  	call !!_delay_ms
0000003F                      271  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
0000003F 8D07                 272  	mov a, 0xFFF07
00000041 315A                 273  	shr a, 0x05
00000043 5C01                 274  	and a, #0x01
00000045 D7                   275  	ret
00000046                      276  _main:
00000046                      277  	.STACK _main = 24
00000046                      278  	;***      104 : uint8_t this_size = sizeof(g_io_status);
00000046                      279  	;***      105 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      280  	;***      106 : uint8_t send_buf[7] = {8,1,2,3,4,5,6};
00000046                      281  	;***      107 : char g_crc[8];
00000046                      282  	;***      108 : uint32_t g_crc_32[8];
00000046                      283  	;***      109 : uint32_t data_crc[2] = {30500, 60200};
00000046                      284  	;***      110 : uint8_t rx_count;
00000046                      285  	;***      111 : uint8_t dac_out[2] = {0xff, 0xff};
00000046                      286  	;***      112 : /* End user code. Do not edit comment generated here */
00000046                      287  	;***      113 : 
00000046                      288  	;***      114 : void R_MAIN_UserInit(void);
00000046                      289  	;***      115 : 
00000046                      290  	;***      116 : /***********************************************************************************************************************
00000046                      291  	;***      117 : * Function Name: main
00000046                      292  	;***      118 : * Description  : This function implements main function.
00000046                      293  	;***      119 : * Arguments    : None
00000046                      294  	;***      120 : * Return Value : None
00000046                      295  	;***      121 : ***********************************************************************************************************************/
00000046                      296  	;***      122 : void main(void)
00000046                      297  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 122
00000046 2010                 298  	subw sp, #0x10
00000048                      299  	;***      123 : {
00000048                      300  	;***      124 :     R_MAIN_UserInit();
00000048                      301  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 124
00000048 FE0000               302  	call $!_R_MAIN_UserInit
0000004B                      303  	;***      125 :     /* Start user code. Do not edit comment generated here */
0000004B                      304  	;***      126 : 
0000004B                      305  	;***      127 :     //TODO: EEPROM Initialize and read Setting
0000004B                      306  	;***      128 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      307  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 128
0000004B F2                   308  	clrb c
0000004C 300000               309  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             310  	call !!_EEPROM_Init
00000053 F6                   311  	clrw ax
00000054                      312  	;***      129 :     EE_SPI_Read((uint8_t *)&g_numberSetting, NUMBER_SETTING_ADDRESS, numberSettingSize);
00000054                      313  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 129
00000054 C1                   314  	push ax
00000055 5025                 315  	mov x, #0x25
00000057 C1                   316  	push ax
00000058 F7                   317  	clrw bc
00000059 300000               318  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             319  	call !!_EE_SPI_Read
00000060 1004                 320  	addw sp, #0x04
00000062 F6                   321  	clrw ax
00000063                      322  	;***      130 :     EE_SPI_Read((uint8_t *)&g_timerSetting, TIME_SETTING_ADDRESS, timeSettingSize);
00000063                      323  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
00000063 C1                   324  	push ax
00000064 5095                 325  	mov x, #0x95
00000066 C1                   326  	push ax
00000067 320008               327  	movw bc, #0x0800
0000006A 300000               328  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             329  	call !!_EE_SPI_Read
00000071 1004                 330  	addw sp, #0x04
00000073                      331  	;***      131 :     _settingNumber = g_numberSetting;
00000073                      332  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
00000073 342600               333  	movw de, #0x0026
00000076 320000               334  	movw bc, #LOWW(_g_numberSetting)
00000079 300000               335  	movw ax, #LOWW(__settingNumber)
0000007C FC000000             336  	call !!_memcpy
00000080                      337  	;***      132 :     _settingTime = g_timerSetting;
00000080                      338  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000080 349600               339  	movw de, #0x0096
00000083 320000               340  	movw bc, #LOWW(_g_timerSetting)
00000086 300000               341  	movw ax, #LOWW(__settingTime)
00000089 FC000000             342  	call !!_memcpy
0000008D                      343  	;***      133 :     EEPROM_PROTECT_EN();
0000008D                      344  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
0000008D 71030E               345  	clr1 0xFFF0E.0
00000090                      346  	;***      134 : 
00000090                      347  	;***      135 :     //TODO: Start receive command from Raspberry Pi
00000090                      348  	;***      136 :     R_UART2_Receive(g_rx_data, 6);
00000090                      349  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 136
00000090 320600               350  	movw bc, #0x0006
00000093 300000               351  	movw ax, #LOWW(_g_rx_data)
00000096 FC000000             352  	call !!_R_UART2_Receive
0000009A                      353  	;***      137 : 
0000009A                      354  	;***      138 :     //TODO: Start receive data from RS485
0000009A                      355  	;***      139 :     O_RS485_MODE_PIN = 0U;
0000009A                      356  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 139
0000009A 710300               357  	clr1 0xFFF00.0
0000009D                      358  	;***      140 :     R_UART3_Receive(g_uart3_rx_data, 7);
0000009D                      359  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 140
0000009D 320700               360  	movw bc, #0x0007
000000A0 300000               361  	movw ax, #LOWW(_g_uart3_rx_data)
000000A3 FC000000             362  	call !!_R_UART3_Receive
000000A7 F6                   363  	clrw ax
000000A8                      364  	;***      141 :     uint8_t wts, vpcb, vpcb_v = 1;
000000A8                      365  	;***      142 :     sendRS485(0xff, 82, 2, 12);
000000A8                      366  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 142
000000A8 C1                   367  	push ax
000000A9 500C                 368  	mov x, #0x0C
000000AB C1                   369  	push ax
000000AC 5202                 370  	mov c, #0x02
000000AE 3052FF               371  	movw ax, #0xFF52
000000B1 FC000000             372  	call !!_sendRS485
000000B5 1004                 373  	addw sp, #0x04
000000B7                      374  	;***      143 : 
000000B7                      375  	;***      144 :     //TODO: Turn off Hand Sensor LED
000000B7                      376  	;***      145 :     g_pre_color = BLUE;
000000B7                      377  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
000000B7 CF000003             378  	mov !LOWW(_g_pre_color), #0x03
000000BB                      379  	;***      146 :     handSensorLED(BLACK);
000000BB                      380  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 146
000000BB F1                   381  	clrb a
000000BC FC000000             382  	call !!_handSensorLED
000000C0                      383  	;***      147 : 
000000C0                      384  	;***      148 :     //TODO: Set default washing mode
000000C0                      385  	;***      149 :     g_machine_mode = HAND_WASHING;
000000C0                      386  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 149
000000C0 E50000               387  	oneb !LOWW(_g_machine_mode)
000000C3 E1                   388  	oneb a
000000C4 9802                 389  	mov [sp+0x02], a
000000C6 9801                 390  	mov [sp+0x01], a
000000C8 9800                 391  	mov [sp+0x00], a
000000CA                      392  .BB@LABEL@3_1:	; bb222
000000CA                      393  	;***      150 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000CA                      394  	;***      151 : 
000000CA                      395  	;***      152 :     //TODO: Run Initialize Operation
000000CA                      396  	;***      153 : //    main_init_20211111();
000000CA                      397  	;***      154 :     while (1U)
000000CA                      398  	;***      155 :     {
000000CA                      399  	;***      156 :     	realTimeResponse();
000000CA                      400  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 156
000000CA FC000000             401  	call !!_realTimeResponse
000000CE                      402  	;***      157 :     	main_loop_20211111();
000000CE                      403  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 157
000000CE FC000000             404  	call !!_main_loop_20211111
000000D2                      405  	;***      158 : 
000000D2                      406  	;***      159 :     	handSensorLED(g_color);
000000D2                      407  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 159
000000D2 8F0000               408  	mov a, !LOWW(_g_color)
000000D5 FC000000             409  	call !!_handSensorLED
000000D9                      410  	;***      160 : 		UpdateMachineStatus();
000000D9                      411  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 160
000000D9 FC000000             412  	call !!_UpdateMachineStatus
000000DD                      413  	;***      161 :     	if(g_uart2_fault == 1){
000000DD                      414  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 161
000000DD 40000001             415  	cmp !LOWW(_g_uart2_fault), #0x01
000000E1 DF00                 416  	bnz $.BB@LABEL@3_3
000000E3                      417  .BB@LABEL@3_2:	; if_then_bb
000000E3                      418  	;***      162 :     		R_UART2_Stop();
000000E3                      419  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 162
000000E3 FC000000             420  	call !!_R_UART2_Stop
000000E7                      421  	;***      163 :     		delay_ms(10);
000000E7                      422  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
000000E7 F7                   423  	clrw bc
000000E8 300A00               424  	movw ax, #0x000A
000000EB FC000000             425  	call !!_delay_ms
000000EF                      426  	;***      164 :     		R_UART2_Start();
000000EF                      427  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 164
000000EF FC000000             428  	call !!_R_UART2_Start
000000F3                      429  	;***      165 :     		g_uart2_fault = 0;
000000F3                      430  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 165
000000F3 F50000               431  	clrb !LOWW(_g_uart2_fault)
000000F6                      432  .BB@LABEL@3_3:	; if_break_bb
000000F6                      433  	;***      166 :     	}
000000F6                      434  	;***      167 : 
000000F6                      435  	;***      168 :     	// Communication with WaterSoftener
000000F6                      436  	;***      169 :     	if(commnunication_flag.rs485_send_to_watersolfner_response_flag){
000000F6                      437  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 169
000000F6 D50000               438  	cmp0 !LOWW(_commnunication_flag+0x0000A)
000000F9 DD00                 439  	bz $.BB@LABEL@3_5
000000FB                      440  .BB@LABEL@3_4:	; if_then_bb23
000000FB F6                   441  	clrw ax
000000FC                      442  	;***      170 :     		sendRS485(0xff, 82, 2, 5);
000000FC                      443  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
000000FC C1                   444  	push ax
000000FD 5005                 445  	mov x, #0x05
000000FF C1                   446  	push ax
00000100 5202                 447  	mov c, #0x02
00000102 3052FF               448  	movw ax, #0xFF52
00000105 FC000000             449  	call !!_sendRS485
00000109 1004                 450  	addw sp, #0x04
0000010B                      451  	;***      171 : //    		rx_count++;
0000010B                      452  	;***      172 :     		wts = 1; //Test flag = 1
0000010B                      453  	;***      173 : 			commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
0000010B                      454  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 173
0000010B F50000               455  	clrb !LOWW(_commnunication_flag+0x0000A)
0000010E E1                   456  	oneb a
0000010F 9800                 457  	mov [sp+0x00], a
00000111                      458  .BB@LABEL@3_5:	; if_break_bb24
00000111                      459  	;***      174 :     	}
00000111                      460  	;***      175 : 		if(commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1){
00000111                      461  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
00000111 40000001             462  	cmp !LOWW(_commnunication_flag+0x0000B), #0x01
00000115 DF00                 463  	bnz $.BB@LABEL@3_9
00000117                      464  .BB@LABEL@3_6:	; if_then_bb30
00000117                      465  	;***      176 :     		// Sand to Water softener SV state
00000117                      466  	;***      177 :     		sendRS485(0xff, 82, 24,(uint32_t) g_io_status.refined.Valve.SV1 == 1?1:0);
00000117                      467  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
00000117 360000               468  	movw hl, #LOWW(_g_io_status+0x00001)
0000011A E7                   469  	onew bc
0000011B 318300               470  	bt [hl].0, $.BB@LABEL@3_8
0000011E                      471  .BB@LABEL@3_7:	; bb38
0000011E B3                   472  	decw bc
0000011F                      473  .BB@LABEL@3_8:	; bb39
0000011F F6                   474  	clrw ax
00000120 C1                   475  	push ax
00000121 C3                   476  	push bc
00000122 5218                 477  	mov c, #0x18
00000124 3052FF               478  	movw ax, #0xFF52
00000127 FC000000             479  	call !!_sendRS485
0000012B 1004                 480  	addw sp, #0x04
0000012D                      481  	;***      178 :     		commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
0000012D                      482  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
0000012D F50000               483  	clrb !LOWW(_commnunication_flag+0x0000B)
00000130                      484  .BB@LABEL@3_9:	; if_break_bb43
00000130 8800                 485  	mov a, [sp+0x00]
00000132                      486  	;***      179 :     	}
00000132                      487  	;***      180 : 		// Test SV1 for Water Softener
00000132                      488  	;***      181 :     	if(wts != 0){
00000132                      489  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 181
00000132 D1                   490  	cmp0 a
00000133 DF00                 491  	bnz $.BB@LABEL@3_11
00000135                      492  .BB@LABEL@3_10:	; if_else_bb63
00000135                      493  	;***      182 :     		if(ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)){
00000135                      494  	;***      183 :     			if(wts == 1){
00000135                      495  	;***      184 :     				O_SUPPLY_WATER_PIN_SV1 = ON;
00000135                      496  	;***      185 : //					sendRS485(1, 82, 24,(uint32_t) 1);
00000135                      497  	;***      186 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
00000135                      498  	;***      187 : 					wts = 2;
00000135                      499  	;***      188 :     			}else{
00000135                      500  	;***      189 :     				O_SUPPLY_WATER_PIN_SV1 = OFF;
00000135                      501  	;***      190 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
00000135                      502  	;***      191 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
00000135                      503  	;***      192 : 					wts = 0;
00000135                      504  	;***      193 :     			}
00000135                      505  	;***      194 :     		}
00000135                      506  	;***      195 :     	}else{
00000135                      507  	;***      196 :     		g_Tick.tickWaterSoftenerPCB = g_systemTime;
00000135                      508  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
00000135 AF0000               509  	movw ax, !LOWW(_g_systemTime+0x00002)
00000138 BF0000               510  	movw !LOWW(_g_Tick+0x00052), ax
0000013B AF0000               511  	movw ax, !LOWW(_g_systemTime)
0000013E BF0000               512  	movw !LOWW(_g_Tick+0x00050), ax
00000141 EF00                 513  	br $.BB@LABEL@3_15
00000143                      514  .BB@LABEL@3_11:	; if_then_bb49
00000143                      515  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 182
00000143 F6                   516  	clrw ax
00000144 14                   517  	movw de, ax
00000145 328813               518  	movw bc, #0x1388
00000148 300000               519  	movw ax, #LOWW(_g_Tick+0x00050)
0000014B FC000000             520  	call !!_ns_delay_ms
0000014F F7                   521  	clrw bc
00000150 43                   522  	cmpw ax, bc
00000151 DD00                 523  	bz $.BB@LABEL@3_15
00000153                      524  .BB@LABEL@3_12:	; if_then_bb54
00000153 8800                 525  	mov a, [sp+0x00]
00000155                      526  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
00000155 91                   527  	dec a
00000156 DF00                 528  	bnz $.BB@LABEL@3_14
00000158                      529  .BB@LABEL@3_13:	; if_then_bb60
00000158                      530  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 184
00000158 717201               531  	set1 0xFFF01.7
0000015B C80002               532  	mov [sp+0x00], #0x02
0000015E EF00                 533  	br $.BB@LABEL@3_15
00000160                      534  .BB@LABEL@3_14:	; if_else_bb
00000160                      535  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 189
00000160 717301               536  	clr1 0xFFF01.7
00000163 F1                   537  	clrb a
00000164 9800                 538  	mov [sp+0x00], a
00000166                      539  .BB@LABEL@3_15:	; if_break_bb65
00000166                      540  	;***      197 :     	}
00000166                      541  	;***      198 : 
00000166                      542  	;***      199 :     	//Valve PCB
00000166                      543  	;***      200 :     	if(commnunication_flag.rs485_send_to_valve_response_flag == 1){
00000166                      544  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 200
00000166 40000001             545  	cmp !LOWW(_commnunication_flag+0x0000C), #0x01
0000016A DF00                 546  	bnz $.BB@LABEL@3_17
0000016C                      547  .BB@LABEL@3_16:	; if_then_bb71
0000016C AEF8                 548  	movw ax, sp
0000016E 040600               549  	addw ax, #0x0006
00000171 B804                 550  	movw [sp+0x04], ax
00000173                      551  	;***      201 :     		// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
00000173                      552  	;***      202 :     		// 0 - Stand alone 1 - Control Valve
00000173                      553  	;***      203 :     		uint8_t _b[5] = {vpcb_v, g_uart3_sendend%2,g_systemTime%2,0,1};
00000173                      554  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 203
00000173 340500               555  	movw de, #0x0005
00000176 320000               556  	movw bc, #SMRLW(.STR@1)
00000179 FC000000             557  	call !!_memcpy
0000017D 8802                 558  	mov a, [sp+0x02]
0000017F 9806                 559  	mov [sp+0x06], a
00000181 E1                   560  	oneb a
00000182 5F0000               561  	and a, !LOWW(_g_uart3_sendend)
00000185 9807                 562  	mov [sp+0x07], a
00000187 AF0000               563  	movw ax, !LOWW(_g_systemTime+0x00002)
0000018A AF0000               564  	movw ax, !LOWW(_g_systemTime)
0000018D 60                   565  	mov a, x
0000018E 5C01                 566  	and a, #0x01
00000190 9808                 567  	mov [sp+0x08], a
00000192 A804                 568  	movw ax, [sp+0x04]
00000194 12                   569  	movw bc, ax
00000195                      570  	;***      204 :     		sendR485_7byte(0xff, 12, _b);
00000195                      571  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 204
00000195 300CFF               572  	movw ax, #0xFF0C
00000198 FC000000             573  	call !!_sendR485_7byte
0000019C                      574  	;***      205 :     		vpcb++;
0000019C                      575  	;***      206 :     		commnunication_flag.rs485_send_to_valve_response_flag  = 0;
0000019C                      576  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 206
0000019C F50000               577  	clrb !LOWW(_commnunication_flag+0x0000C)
0000019F 8801                 578  	mov a, [sp+0x01]
000001A1                      579  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 205
000001A1 81                   580  	inc a
000001A2 9801                 581  	mov [sp+0x01], a
000001A4 EF00                 582  	br $.BB@LABEL@3_19
000001A6                      583  .BB@LABEL@3_17:	; if_else_bb89
000001A6                      584  	;***      207 :     	}else if(commnunication_flag.rs485_get_valve_gesture_flag == 1){
000001A6                      585  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 207
000001A6 40000001             586  	cmp !LOWW(_commnunication_flag+0x0000D), #0x01
000001AA DF00                 587  	bnz $.BB@LABEL@3_19
000001AC                      588  .BB@LABEL@3_18:	; if_then_bb95
000001AC AEF8                 589  	movw ax, sp
000001AE 040B00               590  	addw ax, #0x000B
000001B1 B804                 591  	movw [sp+0x04], ax
000001B3                      592  	;***      208 :     		uint8_t _b[5] = {0,1,0,0,1};
000001B3                      593  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
000001B3 340500               594  	movw de, #0x0005
000001B6 320000               595  	movw bc, #SMRLW(.STR@1645)
000001B9 FC000000             596  	call !!_memcpy
000001BD A804                 597  	movw ax, [sp+0x04]
000001BF 12                   598  	movw bc, ax
000001C0                      599  	;***      209 :     		sendR485_7byte(0xff, 1, _b);
000001C0                      600  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 209
000001C0 3001FF               601  	movw ax, #0xFF01
000001C3 FC000000             602  	call !!_sendR485_7byte
000001C7                      603  	;***      210 :     		rx_count++;
000001C7                      604  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
000001C7 A00000               605  	inc !LOWW(_rx_count)
000001CA                      606  	;***      211 :     		commnunication_flag.rs485_get_valve_gesture_flag = 0;
000001CA                      607  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001CA F50000               608  	clrb !LOWW(_commnunication_flag+0x0000D)
000001CD                      609  .BB@LABEL@3_19:	; if_break_bb101
000001CD 8801                 610  	mov a, [sp+0x01]
000001CF                      611  	;***      212 :     	}
000001CF                      612  	;***      213 : 
000001CF                      613  	;***      214 :     	if(vpcb != 0){
000001CF                      614  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 214
000001CF D1                   615  	cmp0 a
000001D0 DF00                 616  	bnz $.BB@LABEL@3_21
000001D2                      617  .BB@LABEL@3_20:	; if_else_bb125
000001D2                      618  	;***      215 :     		if(ns_delay_ms(&g_Tick.tickValvePCB, 5000)){
000001D2                      619  	;***      216 :     			vpcb_v = vpcb_v == 1 ? 0 : 1;
000001D2                      620  	;***      217 :     			vpcb = 0;
000001D2                      621  	;***      218 :     		}
000001D2                      622  	;***      219 :     	}else{
000001D2                      623  	;***      220 :     		g_Tick.tickValvePCB = g_systemTime;
000001D2                      624  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 220
000001D2 AF0000               625  	movw ax, !LOWW(_g_systemTime+0x00002)
000001D5 BF0000               626  	movw !LOWW(_g_Tick+0x00056), ax
000001D8 AF0000               627  	movw ax, !LOWW(_g_systemTime)
000001DB BF0000               628  	movw !LOWW(_g_Tick+0x00054), ax
000001DE EF00                 629  	br $.BB@LABEL@3_24
000001E0                      630  .BB@LABEL@3_21:	; if_then_bb107
000001E0                      631  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
000001E0 F6                   632  	clrw ax
000001E1 14                   633  	movw de, ax
000001E2 328813               634  	movw bc, #0x1388
000001E5 300000               635  	movw ax, #LOWW(_g_Tick+0x00054)
000001E8 FC000000             636  	call !!_ns_delay_ms
000001EC F7                   637  	clrw bc
000001ED 43                   638  	cmpw ax, bc
000001EE DD00                 639  	bz $.BB@LABEL@3_24
000001F0                      640  .BB@LABEL@3_22:	; if_then_bb112
000001F0 8802                 641  	mov a, [sp+0x02]
000001F2                      642  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
000001F2 91                   643  	dec a
000001F3 F1                   644  	clrb a
000001F4 9801                 645  	mov [sp+0x01], a
000001F6 DF00                 646  	bnz $.BB@LABEL@3_26
000001F8                      647  .BB@LABEL@3_23:	; if_then_bb112.if_break_bb127_crit_edge
000001F8 9802                 648  	mov [sp+0x02], a
000001FA                      649  .BB@LABEL@3_24:	; if_break_bb127
000001FA                      650  	;***      221 :     	}
000001FA                      651  	;***      222 : 
000001FA                      652  	;***      223 :     	//RS485 fault check
000001FA                      653  	;***      224 :     	if(commnunication_flag.rs485_fault == 1){
000001FA                      654  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 224
000001FA 40000001             655  	cmp !LOWW(_commnunication_flag+0x0000E), #0x01
000001FE DF00                 656  	bnz $.BB@LABEL@3_27
00000200                      657  .BB@LABEL@3_25:	; if_then_bb133
00000200                      658  	;***      225 :     		R_UART3_Stop();
00000200                      659  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 225
00000200 FC000000             660  	call !!_R_UART3_Stop
00000204                      661  	;***      226 :     		commnunication_flag.rs485_fault++;
00000204                      662  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 226
00000204 A00000               663  	inc !LOWW(_commnunication_flag+0x0000E)
00000207                      664  	;***      227 :     		g_Tick.tickRS485 = g_systemTime;
00000207                      665  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 227
00000207 AF0000               666  	movw ax, !LOWW(_g_systemTime+0x00002)
0000020A BF0000               667  	movw !LOWW(_g_Tick+0x0005A), ax
0000020D AF0000               668  	movw ax, !LOWW(_g_systemTime)
00000210 BF0000               669  	movw !LOWW(_g_Tick+0x00058), ax
00000213 EF00                 670  	br $.BB@LABEL@3_30
00000215                      671  .BB@LABEL@3_26:	; bb118
00000215 E1                   672  	oneb a
00000216 EF00                 673  	br $.BB@LABEL@3_23
00000218                      674  .BB@LABEL@3_27:	; if_else_bb137
00000218                      675  	;***      228 :     	}else if(commnunication_flag.rs485_fault == 2){
00000218                      676  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 228
00000218 40000002             677  	cmp !LOWW(_commnunication_flag+0x0000E), #0x02
0000021C DF00                 678  	bnz $.BB@LABEL@3_30
0000021E                      679  .BB@LABEL@3_28:	; if_then_bb143
0000021E                      680  	;***      229 :     		if(ns_delay_ms(&g_Tick.tickRS485, 500)){
0000021E                      681  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 229
0000021E F6                   682  	clrw ax
0000021F 14                   683  	movw de, ax
00000220 32F401               684  	movw bc, #0x01F4
00000223 300000               685  	movw ax, #LOWW(_g_Tick+0x00058)
00000226 FC000000             686  	call !!_ns_delay_ms
0000022A F7                   687  	clrw bc
0000022B 43                   688  	cmpw ax, bc
0000022C DD00                 689  	bz $.BB@LABEL@3_30
0000022E                      690  .BB@LABEL@3_29:	; if_then_bb148
0000022E                      691  	;***      230 : 				R_UART3_Start();
0000022E                      692  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
0000022E FC000000             693  	call !!_R_UART3_Start
00000232                      694  	;***      231 : 				R_UART3_Receive(g_uart3_rx_data, 7);
00000232                      695  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 231
00000232 320700               696  	movw bc, #0x0007
00000235 300000               697  	movw ax, #LOWW(_g_uart3_rx_data)
00000238 FC000000             698  	call !!_R_UART3_Receive
0000023C                      699  	;***      232 : 				commnunication_flag.rs485_fault = 0;
0000023C                      700  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 232
0000023C F50000               701  	clrb !LOWW(_commnunication_flag+0x0000E)
0000023F                      702  .BB@LABEL@3_30:	; if_break_bb152
0000023F                      703  	;***      233 :     		}
0000023F                      704  	;***      234 :     	}
0000023F                      705  	;***      235 : //--------------------------------- Testing code---------------------------------------------------------------
0000023F                      706  	;***      236 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
0000023F                      707  	;***      237 : //    		P6_bit.no3 = ~P6_bit.no3;
0000023F                      708  	;***      238 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
0000023F                      709  	;***      239 : //    	}
0000023F                      710  	;***      240 : //    	if(g_machine_state.user == 1){
0000023F                      711  	;***      241 : //    		HandWashingMode_nostop();
0000023F                      712  	;***      242 : //    	}else{
0000023F                      713  	;***      243 : //    		g_Tick.tickCustom[1] = g_systemTime;
0000023F                      714  	;***      244 : //    	}
0000023F                      715  	;***      245 : 
0000023F                      716  	;***      246 :     	// Check
0000023F                      717  	;***      247 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
0000023F                      718  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 247
0000023F 8D00                 719  	mov a, 0xFFF00
00000241 719C                 720  	mov1 CY, a.1
00000243 E1                   721  	oneb a
00000244 61C8                 722  	skc
00000246                      723  .BB@LABEL@3_31:	; bb160
00000246 F1                   724  	clrb a
00000247                      725  .BB@LABEL@3_32:	; bb162
00000247 9F0000               726  	mov !LOWW(_flow_p), a
0000024A                      727  	;***      248 :     	if(ns_delay_ms(&g_Tick.tickCustom[1], 60000)){
0000024A                      728  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 248
0000024A F6                   729  	clrw ax
0000024B 14                   730  	movw de, ax
0000024C 3260EA               731  	movw bc, #0xEA60
0000024F 300000               732  	movw ax, #LOWW(_g_Tick+0x00094)
00000252 FC000000             733  	call !!_ns_delay_ms
00000256                      734  	;***      249 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
00000256                      735  	;***      250 : //				g_TickKeeper.SV1_ON_minutes++;
00000256                      736  	;***      251 : //				g_TickKeeper.SV1_OFF_minutes = 0;
00000256                      737  	;***      252 : //			}else{
00000256                      738  	;***      253 : //				g_TickKeeper.SV1_OFF_minutes++;
00000256                      739  	;***      254 : //				g_TickKeeper.SV1_ON_minutes = 0;
00000256                      740  	;***      255 : //			}
00000256                      741  	;***      256 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
00000256                      742  	;***      257 : //				g_TickKeeper.SV2_ON_minutes++;
00000256                      743  	;***      258 : //				g_TickKeeper.SV2_OFF_minutes = 0;
00000256                      744  	;***      259 : //			}else{
00000256                      745  	;***      260 : //				g_TickKeeper.SV2_OFF_minutes++;
00000256                      746  	;***      261 : //				g_TickKeeper.SV2_ON_minutes = 0;
00000256                      747  	;***      262 : //			}
00000256                      748  	;***      263 :     	}
00000256                      749  	;***      264 :     	if(ns_delay_ms(&g_Tick.tickCustom[2], 15000)){
00000256                      750  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 264
00000256 F6                   751  	clrw ax
00000257 14                   752  	movw de, ax
00000258 32983A               753  	movw bc, #0x3A98
0000025B 300000               754  	movw ax, #LOWW(_g_Tick+0x00098)
0000025E FC000000             755  	call !!_ns_delay_ms
00000262                      756  	;***      265 : //    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
00000262                      757  	;***      266 : //					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
00000262                      758  	;***      267 : //				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
00000262                      759  	;***      268 : //						g_io_status.refined.FlowValue);
00000262                      760  	;***      269 : //			}
00000262                      761  	;***      270 :     	}
00000262                      762  	;***      271 :     	if(ns_delay_ms(&g_Tick.tick1s, 1000)){
00000262                      763  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 271
00000262 F6                   764  	clrw ax
00000263 14                   765  	movw de, ax
00000264 32E803               766  	movw bc, #0x03E8
00000267 300000               767  	movw ax, #LOWW(_g_Tick+0x00004)
0000026A FC000000             768  	call !!_ns_delay_ms
0000026E F7                   769  	clrw bc
0000026F 43                   770  	cmpw ax, bc
00000270 DD00                 771  	bz $.BB@LABEL@3_36
00000272                      772  .BB@LABEL@3_33:	; if_then_bb182
00000272                      773  	;***      272 : 
00000272                      774  	;***      273 :     		led_st = led_st == 0?0xff:0x00;
00000272                      775  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 273
00000272 D50000               776  	cmp0 !LOWW(_led_st)
00000275 51FF                 777  	mov a, #0xFF
00000277 61E8                 778  	skz
00000279                      779  .BB@LABEL@3_34:	; bb188
00000279 F1                   780  	clrb a
0000027A                      781  .BB@LABEL@3_35:	; bb190
0000027A 9F0000               782  	mov !LOWW(_led_st), a
0000027D                      783  	;***      274 :     	    uint8_t state = g_uart2_sendend;
0000027D                      784  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 274
0000027D 8F0000               785  	mov a, !LOWW(_g_uart2_sendend)
00000280                      786  	;***      275 :     	    g_crc[6] = crc8_4((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
00000280                      787  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 275
00000280 5294                 788  	mov c, #0x94
00000282 300000               789  	movw ax, #LOWW(_g_timerSetting)
00000285 FC000000             790  	call !!_crc8_4
00000289 9F0000               791  	mov !LOWW(_g_crc+0x00006), a
0000028C                      792  	;***      276 :     	    g_crc[7] = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
0000028C                      793  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 276
0000028C 5294                 794  	mov c, #0x94
0000028E 300000               795  	movw ax, #LOWW(_g_timerSetting)
00000291 FC000000             796  	call !!_crc8_1
00000295 9F0000               797  	mov !LOWW(_g_crc+0x00007), a
00000298                      798  	;***      277 : //    	    switch (g_color) {
00000298                      799  	;***      278 : //				case BLACK:
00000298                      800  	;***      279 : //					g_color = RED;
00000298                      801  	;***      280 : //					break;
00000298                      802  	;***      281 : //				case RED:
00000298                      803  	;***      282 : //					g_color = BLUE;
00000298                      804  	;***      283 : //					break;
00000298                      805  	;***      284 : //				case BLUE:
00000298                      806  	;***      285 : //					g_color = WHITE;
00000298                      807  	;***      286 : //					break;
00000298                      808  	;***      287 : //				default:
00000298                      809  	;***      288 : //					g_color = BLACK;
00000298                      810  	;***      289 : //					break;
00000298                      811  	;***      290 : //			}
00000298                      812  	;***      291 : //    	    dac_out[0]+= 10;
00000298                      813  	;***      292 : 			CVCC_Current_Set(dac_out[0]);
00000298                      814  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 292
00000298 8F0000               815  	mov a, !LOWW(_dac_out)
0000029B FC000000             816  	call !!_R_DAC0_Set_ConversionValue
0000029F                      817  	;***      293 : //			dac_out[1]+= 10;
0000029F                      818  	;***      294 : 			Salt_Analog_Set(dac_out[1]);
0000029F                      819  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 294
0000029F 8F0000               820  	mov a, !LOWW(_dac_out+0x00001)
000002A2 FC000000             821  	call !!_R_DAC1_Set_ConversionValue
000002A6                      822  .BB@LABEL@3_36:	; if_break_bb207
000002A6                      823  	;***      295 :     		if(led_st == 0x00){
000002A6                      824  	;***      296 : 
000002A6                      825  	;***      297 : //    			O_CVCC_ON_PIN = ON;
000002A6                      826  	;***      298 : //    			O_HS_ICL_PIN = 0;
000002A6                      827  	;***      299 : //    			O_HS_IDA_PIN = 1;
000002A6                      828  	;***      300 : //    			handSensorLED(RED);
000002A6                      829  	;***      301 : //    			O_CVCC_ALARM_RS = 1;
000002A6                      830  	;***      302 : //    			O_PUMP_SALT_PIN = ON;
000002A6                      831  	;***      303 : //    			electrolyticOperationON();
000002A6                      832  	;***      304 : //    			g_io_status.refined.Valve.SV4 = 1;
000002A6                      833  	;***      305 : //				g_io_status.refined.Pump2 = 1;
000002A6                      834  	;***      306 : //				g_io_status.refined.Valve.SV5 = 0;
000002A6                      835  	;***      307 : //				g_io_status.refined.Pump1 = 0;
000002A6                      836  	;***      308 : //				g_io_status.refined.SaltLowLevel = 1;
000002A6                      837  	;***      309 : //    			e_send[0]++;
000002A6                      838  	;***      310 : //    			g_numberSetting.upperVoltage1++;
000002A6                      839  	;***      311 : //    			g_numberSetting.crc--;
000002A6                      840  	;***      312 : //    			g_numberSetting.crc2++;
000002A6                      841  	;***      313 : //    			g_numberSetting.lowerFlow++;
000002A6                      842  	;***      314 : //    			g_numberSetting.hello++;
000002A6                      843  	;***      315 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
000002A6                      844  	;***      316 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
000002A6                      845  	;***      317 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
000002A6                      846  	;***      318 :     		}else{
000002A6                      847  	;***      319 : //    			O_CVCC_ON_PIN = OFF;
000002A6                      848  	;***      320 : //    			O_HS_ICL_PIN = 1;
000002A6                      849  	;***      321 : //				O_HS_IDA_PIN = 0;
000002A6                      850  	;***      322 : //    			handSensorLED(WHITE);
000002A6                      851  	;***      323 : //    			O_CVCC_ALARM_RS = 0;
000002A6                      852  	;***      324 : //    			O_PUMP_SALT_PIN = OFF;
000002A6                      853  	;***      325 : //    			electrolyticOperationOFF();
000002A6                      854  	;***      326 : //    			g_io_status.refined.Valve.SV4 = 0;
000002A6                      855  	;***      327 : //				g_io_status.refined.Pump2 = 0;
000002A6                      856  	;***      328 : //				g_io_status.refined.Valve.SV5 = 1;
000002A6                      857  	;***      329 : //				g_io_status.refined.Pump1 = 1;
000002A6                      858  	;***      330 : //				g_io_status.refined.SaltLowLevel = 0;
000002A6                      859  	;***      331 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
000002A6                      860  	;***      332 : 
000002A6                      861  	;***      333 :     		}
000002A6                      862  	;***      334 :     	}
000002A6                      863  	;***      335 : 
000002A6                      864  	;***      336 : 
000002A6                      865  	;***      337 : //--------------------------------End testing code---------------------------------------------------------
000002A6                      866  	;***      338 : //    	if(g_machine_state.mode == BUSY){
000002A6                      867  	;***      339 : //    		g_machine_state.user = 0;
000002A6                      868  	;***      340 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
000002A6                      869  	;***      341 : //    			g_machine_state.mode = INDIE;
000002A6                      870  	;***      342 : //    		}
000002A6                      871  	;***      343 : //    	}else{
000002A6                      872  	;***      344 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
000002A6                      873  	;***      345 : //    	}
000002A6                      874  	;***      346 : 
000002A6                      875  	;***      347 : 		if((g_machine_state.mode == WATER_WASHING)|(g_machine_state.mode == INDIE)){
000002A6                      876  	;***      348 : //			nostop_WaterWashingMode();
000002A6                      877  	;***      349 : 		}
000002A6                      878  	;***      350 : //    	InitialOperationModeStart();
000002A6                      879  	;***      351 : 
000002A6                      880  	;***      352 : //    	if(g_color != g_pre_color){
000002A6                      881  	;***      353 : //			O_RS485_MODE_PIN = 1U;
000002A6                      882  	;***      354 : //			uint8_t _uart3 = g_uart3_sendend;
000002A6                      883  	;***      355 : //			send_buf[3]++;
000002A6                      884  	;***      356 : //			R_UART3_Send(send_buf, 7);
000002A6                      885  	;***      357 : //			while(_uart3 == g_uart3_sendend);
000002A6                      886  	;***      358 : //			O_RS485_MODE_PIN = 0U;
000002A6                      887  	;***      359 : //    	}
000002A6                      888  	;***      360 :     	R_WDT_Restart();
000002A6                      889  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 360
000002A6 FC000000             890  	call !!_R_WDT_Restart
000002AA EE0000               891  	br $!.BB@LABEL@3_1
000002AD                      892  _R_MAIN_UserInit:
000002AD                      893  	.STACK _R_MAIN_UserInit = 4
000002AD                      894  	;***      361 :     }
000002AD                      895  	;***      362 :     /* End user code. Do not edit comment generated here */
000002AD                      896  	;***      363 : }
000002AD                      897  	;***      364 : 
000002AD                      898  	;***      365 : /***********************************************************************************************************************
000002AD                      899  	;***      366 : * Function Name: R_MAIN_UserInit
000002AD                      900  	;***      367 : * Description  : This function adds user code before implementing main function.
000002AD                      901  	;***      368 : * Arguments    : None
000002AD                      902  	;***      369 : * Return Value : None
000002AD                      903  	;***      370 : ***********************************************************************************************************************/
000002AD                      904  	;***      371 : void R_MAIN_UserInit(void)
000002AD                      905  	;***      372 : {
000002AD                      906  	;***      373 :     /* Start user code. Do not edit comment generated here */
000002AD                      907  	;***      374 :     EI();
000002AD                      908  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 374
000002AD 717AFA               909  	ei
000002B0                      910  	;***      375 :     R_TAU0_Create();
000002B0                      911  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 375
000002B0 FC000000             912  	call !!_R_TAU0_Create
000002B4                      913  	;***      376 :     R_SAU0_Create();
000002B4                      914  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 376
000002B4 FC000000             915  	call !!_R_SAU0_Create
000002B8                      916  	;***      377 :     R_SAU1_Create();
000002B8                      917  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 377
000002B8 FC000000             918  	call !!_R_SAU1_Create
000002BC                      919  	;***      378 :     R_UART1_Create();
000002BC                      920  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 378
000002BC FC000000             921  	call !!_R_UART1_Create
000002C0                      922  	;***      379 :     R_UART2_Create();
000002C0                      923  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 379
000002C0 FC000000             924  	call !!_R_UART2_Create
000002C4                      925  	;***      380 :     R_UART3_Create();
000002C4                      926  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 380
000002C4 FC000000             927  	call !!_R_UART3_Create
000002C8                      928  	;***      381 :     R_RTC_Create();
000002C8                      929  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 381
000002C8 FC000000             930  	call !!_R_RTC_Create
000002CC                      931  	;***      382 :     R_PORT_Create_UserInit();
000002CC                      932  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 382
000002CC FC000000             933  	call !!_R_PORT_Create_UserInit
000002D0                      934  	;***      383 :     R_CSI01_Create();
000002D0                      935  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 383
000002D0 FC000000             936  	call !!_R_CSI01_Create
000002D4                      937  	;***      384 :     R_CSI00_Create();
000002D4                      938  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 384
000002D4 FC000000             939  	call !!_R_CSI00_Create
000002D8                      940  	;***      385 : 
000002D8                      941  	;***      386 :     R_TAU0_Channel0_Start();
000002D8                      942  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 386
000002D8 FC000000             943  	call !!_R_TAU0_Channel0_Start
000002DC                      944  	;***      387 :     R_UART3_Start();
000002DC                      945  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 387
000002DC FC000000             946  	call !!_R_UART3_Start
000002E0                      947  	;***      388 :     R_UART1_Start();
000002E0                      948  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 388
000002E0 FC000000             949  	call !!_R_UART1_Start
000002E4                      950  	;***      389 :     R_UART2_Start();
000002E4                      951  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 389
000002E4 FC000000             952  	call !!_R_UART2_Start
000002E8                      953  	;***      390 :     R_CSI00_Start();
000002E8                      954  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 390
000002E8 FC000000             955  	call !!_R_CSI00_Start
000002EC                      956  	;***      391 : //    R_CSI01_Start();
000002EC                      957  	;***      392 : 
000002EC                      958  	;***      393 : 
000002EC                      959  	;***      394 :     R_ADC_Create();
000002EC                      960  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 394
000002EC FC000000             961  	call !!_R_ADC_Create
000002F0                      962  	;***      395 :     R_ADC_Set_OperationOn();
000002F0                      963  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 395
000002F0 FC000000             964  	call !!_R_ADC_Set_OperationOn
000002F4                      965  	;***      396 :     R_ADC_Start();
000002F4                      966  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 396
000002F4 FC000000             967  	call !!_R_ADC_Start
000002F8                      968  	;***      397 : 
000002F8                      969  	;***      398 :     R_DAC_Create();
000002F8                      970  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 398
000002F8 FC000000             971  	call !!_R_DAC_Create
000002FC                      972  	;***      399 : 	CVCC_Current_Set(0x0);
000002FC                      973  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 399
000002FC F1                   974  	clrb a
000002FD FC000000             975  	call !!_R_DAC0_Set_ConversionValue
00000301                      976  	;***      400 : 	Salt_Analog_Set(0x0);
00000301                      977  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 400
00000301 F1                   978  	clrb a
00000302 FC000000             979  	call !!_R_DAC1_Set_ConversionValue
00000306                      980  	;***      401 :     R_DAC0_Start();
00000306                      981  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 401
00000306 FC000000             982  	call !!_R_DAC0_Start
0000030A                      983  	;***      402 :     R_DAC1_Start();
0000030A                      984  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 402
0000030A EC000000             985  	br !!_R_DAC1_Start
0000030E                      986  	;***      403 :     /* End user code. Do not edit comment generated here */
0000030E                      987  	;***      404 : }
0000030E                      988  	;***      405 : 
0000030E                      989  	;***      406 : /* Start user code for adding. Do not edit comment generated here */
0000030E                      990  	;***      407 : /* End user code. Do not edit comment generated here */
00000000                      991  	.SECTION .data,DATA
00000000                      992  	.ALIGN 2
00000000                      993  _g_adc_ch:
00000000 0000                 994  	.DS (2)
00000002                      995  _led_st:
00000002 FF                   996  	.DB 0xFF
00000003                      997  _send_data:
00000003 23                   998  	.DB 0x23,0xAB
00000004 AB              
00000005                      999  _this_size:
00000005 12                  1000  	.DB 0x12
00000006                     1001  _this_size_2:
00000006 12                  1002  	.DB 0x12
00000007                     1003  _send_buf:
00000007 08                  1004  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000008 01              
00000009 02              
0000000A 03              
0000000B 04              
0000000C 05              
0000000D 06              
0000000E                     1005  	.ALIGN 2
0000000E                     1006  _data_crc:
0000000E 24770000            1007  	.DB4 0x00007724,0x0000EB28
00000012 28EB0000        
00000016                     1008  _dac_out:
00000016 FF                  1009  	.DB 0xFF,0xFF
00000017 FF              
00000000                     1010  	.SECTION .bss,BSS
00000000                     1011  _g_e_status:
00000000                     1012  	.DS (1)
00000001 00                  1013  	.ALIGN 2
00000002                     1014  _ret_number_setting:
00000002                     1015  	.DS (38)
00000028                     1016  _flow_p:
00000028                     1017  	.DS (1)
00000029                     1018  _salt_h_p:
00000029                     1019  	.DS (1)
0000002A                     1020  _g_eeprom_wren:
0000002A                     1021  	.DS (1)
0000002B                     1022  _receive_data:
0000002B                     1023  	.DS (2)
0000002D 00                  1024  	.ALIGN 2
0000002E                     1025  _receive_setting:
0000002E                     1026  	.DS (38)
00000054                     1027  _set:
00000054                     1028  	.DS (1)
00000055 00                  1029  	.ALIGN 2
00000056                     1030  _rx_data:
00000056                     1031  	.DS (12)
00000062                     1032  	.ALIGN 2
00000062                     1033  _data_f:
00000062                     1034  	.DS (4)
00000066                     1035  	.ALIGN 2
00000066                     1036  _data_f_test:
00000066                     1037  	.DS (4)
0000006A                     1038  	.ALIGN 2
0000006A                     1039  _g_control_buffer_f:
0000006A                     1040  	.DS (6)
00000070                     1041  	.ALIGN 2
00000070                     1042  _g_control_buffer_u32:
00000070                     1043  	.DS (6)
00000076                     1044  _handsensor_status:
00000076                     1045  	.DS (1)
00000077                     1046  _g_handsensor_status:
00000077                     1047  	.DS (2)
00000079                     1048  _g_crc:
00000079                     1049  	.DS (8)
00000081 00                  1050  	.ALIGN 2
00000082                     1051  _g_crc_32:
00000082                     1052  	.DS (32)
000000A2                     1053  _rx_count:
000000A2                     1054  	.DS (1)
00000000                     1055  	.SECTION .const,CONST
00000000                     1056  .STR@1:
00000000 00000000            1057  	.DS (4)
00000004 01                  1058  	.DB 0x01
00000005                     1059  .STR@1645:
00000005 00                  1060  	.DS (1)
00000006 01                  1061  	.DB 0x01
00000007 0000                1062  	.DS (2)
00000009 01                  1063  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               782 (0000030E) .textf
CONST                10 (0000000A) .const
DATA                 24 (00000018) .data
BSS                 163 (000000A3) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl002\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

