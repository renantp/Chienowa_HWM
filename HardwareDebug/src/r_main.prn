RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Wed Dec 08 17:03:02 2021
00000000                       19  
00000000                       20  	.EXTERN _g_rtc
00000000                       21  	.EXTERN _g_timerSetting
00000000                       22  	.EXTERN _g_systemTime
00000000                       23  	.EXTERN _g_csi_rev_end
00000000                       24  	.EXTERN _g_uart2_fault
00000000                       25  	.EXTERN _g_uart2_sendend
00000000                       26  	.EXTERN _g_uart3_sendend
00000000                       27  	.EXTERN _g_rx_data
00000000                       28  	.EXTERN _g_color
00000000                       29  	.EXTERN _g_pre_color
00000000                       30  	.EXTERN _send_response_flag
00000000                       31  	.EXTERN _send_response_time_flag
00000000                       32  	.EXTERN _recived_time_setting_flag
00000000                       33  	.PUBLIC _g_error
00000000                       34  	.PUBLIC _g_adc_ch
00000000                       35  	.PUBLIC _g_e_status
00000000                       36  	.PUBLIC _led_st
00000000                       37  	.PUBLIC _flow_p
00000000                       38  	.PUBLIC _salt_h_p
00000000                       39  	.PUBLIC _e_send
00000000                       40  	.PUBLIC _e_data
00000000                       41  	.PUBLIC _g_eeprom_wren
00000000                       42  	.PUBLIC _send_data
00000000                       43  	.PUBLIC _receive_data
00000000                       44  	.PUBLIC _receive_setting
00000000                       45  	.PUBLIC _set
00000000                       46  	.PUBLIC _rx_data
00000000                       47  	.PUBLIC _data_f
00000000                       48  	.PUBLIC _data_f_test
00000000                       49  	.PUBLIC _g_control_buffer
00000000                       50  	.PUBLIC _this_size
00000000                       51  	.PUBLIC _rec_buf
00000000                       52  	.PUBLIC _send_buf
00000000                       53  	.PUBLIC _g_crc
00000000                       54  	.PUBLIC _g_crc_32
00000000                       55  	.PUBLIC _data_crc
00000000                       56  	.PUBLIC _rx_count
00000000                       57  	.PUBLIC _readHS
00000000                       58  	.EXTERN _delay_ms
00000000                       59  	.PUBLIC _main
00000000                       60  	.PUBLIC _R_MAIN_UserInit
00000000                       61  	.EXTERN _EEPROM_Init
00000000                       62  	.EXTERN _setting_default
00000000                       63  	.EXTERN _crc8_1
00000000                       64  	.EXTERN _R_RTC_Set_CounterValue
00000000                       65  	.EXTERN _R_RTC_Start
00000000                       66  	.EXTERN _R_UART2_Receive
00000000                       67  	.EXTERN _R_UART3_Receive
00000000                       68  	.EXTERN _R_UART2_Send
00000000                       69  	.EXTERN _R_WDT_Restart
00000000                       70  	.EXTERN _sendToRasPi
00000000                       71  	.EXTERN _ns_delay_ms
00000000                       72  	.EXTERN _R_UART2_Stop
00000000                       73  	.EXTERN _R_UART2_Start
00000000                       74  	.EXTERN _crc8_4
00000000                       75  	.EXTERN _R_UART3_Send
00000000                       76  	.EXTERN _handSensorLED
00000000                       77  	.EXTERN _R_TAU0_Create
00000000                       78  	.EXTERN _R_SAU0_Create
00000000                       79  	.EXTERN _R_SAU1_Create
00000000                       80  	.EXTERN _R_UART1_Create
00000000                       81  	.EXTERN _R_UART2_Create
00000000                       82  	.EXTERN _R_UART3_Create
00000000                       83  	.EXTERN _R_RTC_Create
00000000                       84  	.EXTERN _R_PORT_Create_UserInit
00000000                       85  	.EXTERN _R_CSI01_Create
00000000                       86  	.EXTERN _R_CSI00_Create
00000000                       87  	.EXTERN _R_TAU0_Channel0_Start
00000000                       88  	.EXTERN _R_UART3_Start
00000000                       89  	.EXTERN _R_UART1_Start
00000000                       90  	.EXTERN _R_CSI00_Start
00000000                       91  	.EXTERN _R_ADC_Create
00000000                       92  	.EXTERN _R_ADC_Set_OperationOn
00000000                       93  	.EXTERN _R_ADC_Start
00000000                       94  
00000000                       95  	.SECTION .textf,TEXTF
00000000                       96  _readHS:
00000000                       97  	.STACK _readHS = 4
00000000                       98  	;***        1 : /***********************************************************************************************************************
00000000                       99  	;***        2 : * DISCLAIMER
00000000                      100  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      101  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      102  	;***        5 : * applicable laws, including copyright laws. 
00000000                      103  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      104  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      105  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      106  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      107  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      108  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      109  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                      110  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                      111  	;***       14 : * following link:
00000000                      112  	;***       15 : * http://www.renesas.com/disclaimer
00000000                      113  	;***       16 : *
00000000                      114  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      115  	;***       18 : ***********************************************************************************************************************/
00000000                      116  	;***       19 : 
00000000                      117  	;***       20 : /***********************************************************************************************************************
00000000                      118  	;***       21 : * File Name    : r_main.c
00000000                      119  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      120  	;***       23 : * Device(s)    : R5F104ML
00000000                      121  	;***       24 : * Tool-Chain   : CCRL
00000000                      122  	;***       25 : * Description  : This file implements main function.
00000000                      123  	;***       26 : * Creation Date: 30/11/2021
00000000                      124  	;***       27 : ***********************************************************************************************************************/
00000000                      125  	;***       28 : 
00000000                      126  	;***       29 : /***********************************************************************************************************************
00000000                      127  	;***       30 : Includes
00000000                      128  	;***       31 : ***********************************************************************************************************************/
00000000                      129  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      130  	;***       33 : #include "r_cg_cgc.h"
00000000                      131  	;***       34 : #include "r_cg_port.h"
00000000                      132  	;***       35 : #include "r_cg_serial.h"
00000000                      133  	;***       36 : #include "r_cg_adc.h"
00000000                      134  	;***       37 : #include "r_cg_dac.h"
00000000                      135  	;***       38 : #include "r_cg_timer.h"
00000000                      136  	;***       39 : #include "r_cg_wdt.h"
00000000                      137  	;***       40 : #include "r_cg_rtc.h"
00000000                      138  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      139  	;***       42 : #include "EEPROM.h"
00000000                      140  	;***       43 : #include "usr_timer.h"
00000000                      141  	;***       44 : #include "usr_setting_sheet.h"
00000000                      142  	;***       45 : #include "crc8.h"
00000000                      143  	;***       46 : /* End user code. Do not edit comment generated here */
00000000                      144  	;***       47 : #include "r_cg_userdefine.h"
00000000                      145  	;***       48 : 
00000000                      146  	;***       49 : /***********************************************************************************************************************
00000000                      147  	;***       50 : Pragma directive
00000000                      148  	;***       51 : ***********************************************************************************************************************/
00000000                      149  	;***       52 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      150  	;***       53 : /* End user code. Do not edit comment generated here */
00000000                      151  	;***       54 : 
00000000                      152  	;***       55 : /***********************************************************************************************************************
00000000                      153  	;***       56 : Global variables and functions
00000000                      154  	;***       57 : ***********************************************************************************************************************/
00000000                      155  	;***       58 : /* Start user code for global. Do not edit comment generated here */
00000000                      156  	;***       59 : volatile int g_error = 0;
00000000                      157  	;***       60 : volatile int g_adc_ch = 0;
00000000                      158  	;***       61 : union EEPROM_status_u g_e_status;
00000000                      159  	;***       62 : uint8_t led_st = 0xff;
00000000                      160  	;***       63 : uint8_t flow_p, salt_h_p;
00000000                      161  	;***       64 : uint8_t e_send[12] = {EEPROM_RDSR, 0b10100101, EEPROM_WRSR, 0x00, EEPROM_WRSR, 0x02, EEPROM_WREN, EEPROM_WRDI};
00000000                      162  	;***       65 : uint8_t e_data[12] = {0,0};
00000000                      163  	;***       66 : uint8_t g_eeprom_wren;
00000000                      164  	;***       67 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      165  	;***       68 : uint8_t receive_data[2];
00000000                      166  	;***       69 : struct Number_Setting_s receive_setting;
00000000                      167  	;***       70 : union EEPROM_status_u set;
00000000                      168  	;***       71 : uint32_t rx_data[3];
00000000                      169  	;***       72 : float data_f;
00000000                      170  	;***       73 : union byte_to_float data_f_test;
00000000                      171  	;***       74 : struct UART_Buffer_s g_control_buffer;
00000000                      172  	;***       75 : #define DETECT I_HS_ODA_PIN
00000000                      173  	;***       76 : uint8_t readHS(void){
00000000                      174  	;***       77 :    if(DETECT){
00000000                      175  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 77
00000000 8D07                 176  	mov a, 0xFFF07
00000002 315300               177  	bt a.5, $.BB@LABEL@1_2
00000005                      178  .BB@LABEL@1_1:	; bb18
00000005                      179  	;***       78 : 	  delay_ms(2);
00000005                      180  	;***       79 :       if(DETECT) return 1;return 0;
00000005                      181  	;***       80 :    }else return 0;
00000005                      182  	;***       81 : }
00000005                      183  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 81
00000005 F1                   184  	clrb a
00000006 D7                   185  	ret
00000007                      186  .BB@LABEL@1_2:	; if_then_bb
00000007                      187  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 78
00000007 F7                   188  	clrw bc
00000008 E6                   189  	onew ax
00000009 A1                   190  	incw ax
0000000A FC000000             191  	call !!_delay_ms
0000000E                      192  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 79
0000000E 8D07                 193  	mov a, 0xFFF07
00000010 315A                 194  	shr a, 0x05
00000012 5C01                 195  	and a, #0x01
00000014 D7                   196  	ret
00000015                      197  _main:
00000015                      198  	.STACK _main = 16
00000015                      199  	;***       82 : uint8_t this_size;
00000015                      200  	;***       83 : uint8_t rec_buf[12];
00000015                      201  	;***       84 : uint8_t send_buf[7] = {8,1,2,3,4,5,6};
00000015                      202  	;***       85 : char g_crc[8];
00000015                      203  	;***       86 : uint32_t g_crc_32[8];
00000015                      204  	;***       87 : uint32_t data_crc[2] = {30500, 60200};
00000015                      205  	;***       88 : uint8_t rx_count;
00000015                      206  	;***       89 : /* End user code. Do not edit comment generated here */
00000015                      207  	;***       90 : void R_MAIN_UserInit(void);
00000015                      208  	;***       91 : 
00000015                      209  	;***       92 : /***********************************************************************************************************************
00000015                      210  	;***       93 : * Function Name: main
00000015                      211  	;***       94 : * Description  : This function implements main function.
00000015                      212  	;***       95 : * Arguments    : None
00000015                      213  	;***       96 : * Return Value : None
00000015                      214  	;***       97 : ***********************************************************************************************************************/
00000015                      215  	;***       98 : void main(void)
00000015                      216  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000015 2004                 217  	subw sp, #0x04
00000017                      218  	;***       99 : {
00000017                      219  	;***      100 :     R_MAIN_UserInit();
00000017                      220  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000017 FE0000               221  	call $!_R_MAIN_UserInit
0000001A                      222  	;***      101 :     /* Start user code. Do not edit comment generated here */
0000001A                      223  	;***      102 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000001A                      224  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 102
0000001A F2                   225  	clrb c
0000001B 300000               226  	movw ax, #LOWW(_g_csi_rev_end)
0000001E FC000000             227  	call !!_EEPROM_Init
00000022                      228  	;***      103 : //    O_RS485_MODE_PIN = 1U;
00000022                      229  	;***      104 : //    EEPROM_SPI_WriteBuffer(e_send, 0x000f, 4);
00000022                      230  	;***      105 : //    delay_ms(1000);
00000022                      231  	;***      106 : //    EEPROM_SPI_ReadBuffer(e_data, 0x000f, 3);
00000022                      232  	;***      107 : //    R_UART0_Send("Hello \r\n", sizeof("Hello \r\n") - 1);
00000022                      233  	;***      108 : //    csi01_status = STATUS_COMPLETE;
00000022                      234  	;***      109 :     //Power ON
00000022                      235  	;***      110 :     setting_default();
00000022                      236  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 110
00000022 FC000000             237  	call !!_setting_default
00000026                      238  	;***      111 :     g_timerSetting.crc = crc8_1((uint8_t *)&g_timerSetting, 68);
00000026                      239  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 111
00000026 5244                 240  	mov c, #0x44
00000028 300000               241  	movw ax, #LOWW(_g_timerSetting)
0000002B FC000000             242  	call !!_crc8_1
0000002F 9F0000               243  	mov !LOWW(_g_timerSetting+0x00044), a
00000032                      244  	;***      112 :     g_rtc.hour = 10;
00000032                      245  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 112
00000032 CF00000A             246  	mov !LOWW(_g_rtc+0x00002), #0x0A
00000036                      247  	;***      113 :     g_rtc.sec = 2;
00000036                      248  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 113
00000036 CF000002             249  	mov !LOWW(_g_rtc), #0x02
0000003A                      250  	;***      114 :     R_RTC_Set_CounterValue(g_rtc);
0000003A                      251  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 114
0000003A 2008                 252  	subw sp, #0x08
0000003C AEF8                 253  	movw ax, sp
0000003E 340700               254  	movw de, #0x0007
00000041 320000               255  	movw bc, #LOWW(_g_rtc)
00000044 FC000000             256  	call !!_memcpy
00000048 FC000000             257  	call !!_R_RTC_Set_CounterValue
0000004C 1008                 258  	addw sp, #0x08
0000004E                      259  	;***      115 :     R_RTC_Start();
0000004E                      260  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 115
0000004E FC000000             261  	call !!_R_RTC_Start
00000052                      262  	;***      116 :     R_UART2_Receive(g_rx_data, 6);
00000052                      263  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 116
00000052 320600               264  	movw bc, #0x0006
00000055 300000               265  	movw ax, #LOWW(_g_rx_data)
00000058 FC000000             266  	call !!_R_UART2_Receive
0000005C                      267  	;***      117 : 
0000005C                      268  	;***      118 : //    Test nhan
0000005C                      269  	;***      119 :     O_RS485_MODE_PIN = 0U;
0000005C                      270  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 119
0000005C 710300               271  	clr1 0xFFF00.0
0000005F                      272  	;***      120 :     R_UART3_Receive(rec_buf, 7);
0000005F                      273  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 120
0000005F 320700               274  	movw bc, #0x0007
00000062 300000               275  	movw ax, #LOWW(_rec_buf)
00000065 FC000000             276  	call !!_R_UART3_Receive
00000069                      277  	;***      121 : 
00000069                      278  	;***      122 : //    Test gui
00000069                      279  	;***      123 : //    O_RS485_MODE_PIN = 1U;
00000069                      280  	;***      124 : //    delay_ms(10);
00000069                      281  	;***      125 : //    R_UART3_Send(send_buf, 7);
00000069                      282  	;***      126 : //    EEPROM_PROTECT_EN();
00000069                      283  	;***      127 : 
00000069                      284  	;***      128 :     g_color = BLACK;
00000069                      285  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 128
00000069 F50000               286  	clrb !LOWW(_g_color)
0000006C                      287  	;***      129 :     g_pre_color = BLUE;
0000006C                      288  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 129
0000006C CF000003             289  	mov !LOWW(_g_pre_color), #0x03
00000070                      290  	;***      130 :     this_size = sizeof(struct Timer_Setting_s);
00000070                      291  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
00000070 CF000046             292  	mov !LOWW(_this_size), #0x46
00000074                      293  .BB@LABEL@2_1:	; bb359
00000074                      294  	;***      131 :     while (1U)
00000074                      295  	;***      132 :     {
00000074                      296  	;***      133 :     	if(send_response_flag){
00000074                      297  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
00000074 D50000               298  	cmp0 !LOWW(_send_response_flag)
00000077 DD00                 299  	bz $.BB@LABEL@2_6
00000079                      300  .BB@LABEL@2_2:	; if_then_bb
00000079                      301  	;***      134 :     		rx_count++;
00000079                      302  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 134
00000079 A00000               303  	inc !LOWW(_rx_count)
0000007C                      304  	;***      135 :     		uint8_t state = g_uart2_sendend;
0000007C                      305  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 135
0000007C 8F0000               306  	mov a, !LOWW(_g_uart2_sendend)
0000007F 9800                 307  	mov [sp+0x00], a
00000081                      308  	;***      136 :     		R_UART2_Send(g_rx_data, 6);
00000081                      309  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 136
00000081 320600               310  	movw bc, #0x0006
00000084 300000               311  	movw ax, #LOWW(_g_rx_data)
00000087 FC000000             312  	call !!_R_UART2_Send
0000008B                      313  .BB@LABEL@2_3:	; bb21
0000008B 8800                 314  	mov a, [sp+0x00]
0000008D                      315  	;***      137 :     		while(state == g_uart2_sendend){
0000008D                      316  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 137
0000008D 4F0000               317  	cmp a, !LOWW(_g_uart2_sendend)
00000090 DF00                 318  	bnz $.BB@LABEL@2_5
00000092                      319  .BB@LABEL@2_4:	; bb20
00000092                      320  	;***      138 : 				R_WDT_Restart();
00000092                      321  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 138
00000092 FC000000             322  	call !!_R_WDT_Restart
00000096 EF00                 323  	br $.BB@LABEL@2_3
00000098                      324  .BB@LABEL@2_5:	; bb29
00000098                      325  	;***      139 : 			}
00000098                      326  	;***      140 : 
00000098                      327  	;***      141 :     		send_response_flag = 0;
00000098                      328  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
00000098 F50000               329  	clrb !LOWW(_send_response_flag)
0000009B                      330  .BB@LABEL@2_6:	; if_break_bb
0000009B                      331  	;***      142 :     	}
0000009B                      332  	;***      143 :     	if(send_response_time_flag){
0000009B                      333  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 143
0000009B D50000               334  	cmp0 !LOWW(_send_response_time_flag)
0000009E DD00                 335  	bz $.BB@LABEL@2_11
000000A0                      336  .BB@LABEL@2_7:	; if_then_bb35
000000A0                      337  	;***      144 : 			uint8_t state = g_uart2_sendend;
000000A0                      338  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 144
000000A0 8F0000               339  	mov a, !LOWW(_g_uart2_sendend)
000000A3 9800                 340  	mov [sp+0x00], a
000000A5                      341  	;***      145 : 			g_timerSetting.crc = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
000000A5                      342  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 145
000000A5 5244                 343  	mov c, #0x44
000000A7 300000               344  	movw ax, #LOWW(_g_timerSetting)
000000AA FC000000             345  	call !!_crc8_1
000000AE 9F0000               346  	mov !LOWW(_g_timerSetting+0x00044), a
000000B1                      347  	;***      146 : 			R_UART2_Send((uint8_t *)&g_timerSetting, 69);
000000B1                      348  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 146
000000B1 324500               349  	movw bc, #0x0045
000000B4 300000               350  	movw ax, #LOWW(_g_timerSetting)
000000B7 FC000000             351  	call !!_R_UART2_Send
000000BB                      352  .BB@LABEL@2_8:	; bb40
000000BB 8800                 353  	mov a, [sp+0x00]
000000BD                      354  	;***      147 : 			while(state == g_uart2_sendend){
000000BD                      355  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
000000BD 4F0000               356  	cmp a, !LOWW(_g_uart2_sendend)
000000C0 DF00                 357  	bnz $.BB@LABEL@2_10
000000C2                      358  .BB@LABEL@2_9:	; bb39
000000C2                      359  	;***      148 : 				R_WDT_Restart();
000000C2                      360  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 148
000000C2 FC000000             361  	call !!_R_WDT_Restart
000000C6 EF00                 362  	br $.BB@LABEL@2_8
000000C8                      363  .BB@LABEL@2_10:	; bb48
000000C8                      364  	;***      149 : 			}
000000C8                      365  	;***      150 : 			send_response_time_flag = 0;
000000C8                      366  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
000000C8 F50000               367  	clrb !LOWW(_send_response_time_flag)
000000CB                      368  .BB@LABEL@2_11:	; if_break_bb49
000000CB                      369  	;***      151 :     	}
000000CB                      370  	;***      152 :     	if(recived_time_setting_flag == 2){
000000CB                      371  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 152
000000CB 40000002             372  	cmp !LOWW(_recived_time_setting_flag), #0x02
000000CF                      373  	.bnz $!.BB@LABEL@2_26
000000CF 61E8                    	 -- Skncond
000000D1 EE0000                  	 -- br	**.target1
000000D4                      374  .BB@LABEL@2_12:	; if_then_bb55
000000D4                      375  	;***      153 :     		rx_count++;
000000D4                      376  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 153
000000D4 A00000               377  	inc !LOWW(_rx_count)
000000D7 F1                   378  	clrb a
000000D8 9800                 379  	mov [sp+0x00], a
000000DA                      380  .BB@LABEL@2_13:	; bb58
000000DA                      381  	;***      154 : //    		uint8_t *p = (uint8_t *)&g_timerSetting;
000000DA                      382  	;***      155 :     		uint8_t *p = (uint8_t *)&_setting;
000000DA                      383  	;***      156 : 			//Do not Edit this, must keep!!!!
000000DA                      384  	;***      157 : 			for(uint8_t i=0;i<sizeof(struct Timer_Setting_s) - 2; i++){
000000DA                      385  	;***      158 : 				switch (i%4) {
000000DA                      386  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 158
000000DA 318E                 387  	shrw ax, 8+0x00000
000000DC B802                 388  	movw [sp+0x02], ax
000000DE 8800                 389  	mov a, [sp+0x00]
000000E0 5C03                 390  	and a, #0x03
000000E2 DD00                 391  	bz $.BB@LABEL@2_18
000000E4                      392  .BB@LABEL@2_14:	; bb58
000000E4 91                   393  	dec a
000000E5 DD00                 394  	bz $.BB@LABEL@2_17
000000E7                      395  .BB@LABEL@2_15:	; bb58
000000E7 91                   396  	dec a
000000E8 DF00                 397  	bnz $.BB@LABEL@2_21
000000EA                      398  .BB@LABEL@2_16:	; switch_clause_bb74
000000EA A802                 399  	movw ax, [sp+0x02]
000000EC                      400  	;***      159 : 					case 4:
000000EC                      401  	;***      160 : 						p[67+3-i] = g_rx_data[i-3];
000000EC                      402  	;***      161 : 						break;
000000EC                      403  	;***      162 : 					case 2:
000000EC                      404  	;***      163 : 						p[67+1-i] = g_rx_data[i-1];
000000EC                      405  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
000000EC 040000               406  	addw ax, #LOWW(_g_rx_data+0x0FFFF)
000000EF 14                   407  	movw de, ax
000000F0 A802                 408  	movw ax, [sp+0x02]
000000F2 12                   409  	movw bc, ax
000000F3 304400               410  	movw ax, #0x0044
000000F6 23                   411  	subw ax, bc
000000F7 12                   412  	movw bc, ax
000000F8 89                   413  	mov a, [de]
000000F9 EF00                 414  	br $.BB@LABEL@2_20
000000FB                      415  .BB@LABEL@2_17:	; switch_clause_bb87
000000FB A802                 416  	movw ax, [sp+0x02]
000000FD 12                   417  	movw bc, ax
000000FE 304200               418  	movw ax, #0x0042
00000101                      419  	;***      164 : 						break;
00000101                      420  	;***      165 : 					case 1:
00000101                      421  	;***      166 : 						p[67-1-i] = g_rx_data[1+i];
00000101                      422  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
00000101 23                   423  	subw ax, bc
00000102 B802                 424  	movw [sp+0x02], ax
00000104 8800                 425  	mov a, [sp+0x00]
00000106 73                   426  	mov b, a
00000107 090000               427  	mov a, LOWW(_g_rx_data+0x00001)[b]
0000010A EF00                 428  	br $.BB@LABEL@2_19
0000010C                      429  .BB@LABEL@2_18:	; switch_clause_bb100
0000010C A802                 430  	movw ax, [sp+0x02]
0000010E 12                   431  	movw bc, ax
0000010F 304000               432  	movw ax, #0x0040
00000112                      433  	;***      167 : 						break;
00000112                      434  	;***      168 : 					case 0:
00000112                      435  	;***      169 : 						p[67-3-i] = g_rx_data[3+i];
00000112                      436  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 169
00000112 23                   437  	subw ax, bc
00000113 B802                 438  	movw [sp+0x02], ax
00000115 8800                 439  	mov a, [sp+0x00]
00000117 73                   440  	mov b, a
00000118 090000               441  	mov a, LOWW(_g_rx_data+0x00003)[b]
0000011B                      442  .BB@LABEL@2_19:	; switch_clause_bb100
0000011B 73                   443  	mov b, a
0000011C A802                 444  	movw ax, [sp+0x02]
0000011E 33                   445  	xchw ax, bc
0000011F                      446  .BB@LABEL@2_20:	; switch_clause_bb100
0000011F 480000               447  	mov LOWW(__setting@3)[bc], a
00000122                      448  .BB@LABEL@2_21:	; switch_break_bb
00000122 8800                 449  	mov a, [sp+0x00]
00000124                      450  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 157
00000124 81                   451  	inc a
00000125 9800                 452  	mov [sp+0x00], a
00000127 4C44                 453  	cmp a, #0x44
00000129 DF00                 454  	bnz $.BB@LABEL@2_13
0000012B                      455  .BB@LABEL@2_22:	; bb122
0000012B                      456  	;***      170 : 						break;
0000012B                      457  	;***      171 : 					default:
0000012B                      458  	;***      172 : 						break;
0000012B                      459  	;***      173 : 				}
0000012B                      460  	;***      174 : 			}
0000012B                      461  	;***      175 : 			_setting.crc = g_rx_data[68];
0000012B                      462  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 175
0000012B 8F0000               463  	mov a, !LOWW(_g_rx_data+0x00044)
0000012E 9800                 464  	mov [sp+0x00], a
00000130 9F0000               465  	mov !LOWW(__setting@3+0x00044), a
00000133                      466  	;***      176 : 
00000133                      467  	;***      177 : 			if(_setting.crc == crc8_1((uint8_t *)g_rx_data, 68)){
00000133                      468  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 177
00000133 5244                 469  	mov c, #0x44
00000135 300000               470  	movw ax, #LOWW(_g_rx_data)
00000138 FC000000             471  	call !!_crc8_1
0000013C 70                   472  	mov x, a
0000013D 8800                 473  	mov a, [sp+0x00]
0000013F 08                   474  	xch a, x
00000140 340000               475  	movw de, #0x0000
00000143 F7                   476  	clrw bc
00000144 6140                 477  	cmp x, a
00000146 5153                 478  	mov a, #0x53
00000148 DF00                 479  	bnz $.BB@LABEL@2_24
0000014A                      480  .BB@LABEL@2_23:	; if_then_bb131
0000014A                      481  	;***      178 : 				rx_count++;
0000014A                      482  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
0000014A A00000               483  	inc !LOWW(_rx_count)
0000014D                      484  	;***      179 : 				sendToRasPi(H_SET, OK_ALL, 0x0);
0000014D                      485  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 179
0000014D F0                   486  	clrb x
0000014E FC000000             487  	call !!_sendToRasPi
00000152                      488  	;***      180 : 				g_timerSetting = _setting;
00000152                      489  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 180
00000152 344600               490  	movw de, #0x0046
00000155 320000               491  	movw bc, #LOWW(__setting@3)
00000158 300000               492  	movw ax, #LOWW(_g_timerSetting)
0000015B FC000000             493  	call !!_memcpy
0000015F EF00                 494  	br $.BB@LABEL@2_25
00000161                      495  .BB@LABEL@2_24:	; if_else_bb
00000161                      496  	;***      181 : 				recived_time_setting_flag = 0;
00000161                      497  	;***      182 : 			}else{
00000161                      498  	;***      183 : 				sendToRasPi(H_SET, SAVE_ERROR, 0x0);
00000161                      499  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
00000161 5016                 500  	mov x, #0x16
00000163 FC000000             501  	call !!_sendToRasPi
00000167                      502  .BB@LABEL@2_25:	; if_break_bb135.PartialDrain
00000167 F50000               503  	clrb !LOWW(_recived_time_setting_flag)
0000016A                      504  .BB@LABEL@2_26:	; if_break_bb135
0000016A                      505  	;***      184 : //				R_UART2_Receive(g_rx_data, sizeof(struct Timer_Setting_s)-1);
0000016A                      506  	;***      185 : 				recived_time_setting_flag = 0;
0000016A                      507  	;***      186 : 			}
0000016A                      508  	;***      187 :     	}
0000016A                      509  	;***      188 : //--------------------------------- Testing code---------------------------------------------------------------
0000016A                      510  	;***      189 :     	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
0000016A                      511  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 189
0000016A F6                   512  	clrw ax
0000016B 14                   513  	movw de, ax
0000016C 32C800               514  	movw bc, #0x00C8
0000016F 300000               515  	movw ax, #LOWW(_g_Tick@1+0x00020)
00000172 FC000000             516  	call !!_ns_delay_ms
00000176 F7                   517  	clrw bc
00000177 43                   518  	cmpw ax, bc
00000178 DD00                 519  	bz $.BB@LABEL@2_28
0000017A                      520  .BB@LABEL@2_27:	; if_then_bb140
0000017A                      521  	;***      190 :     		P6_bit.no3 = ~P6_bit.no3;
0000017A                      522  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 190
0000017A 8D06                 523  	mov a, 0xFFF06
0000017C 71BC                 524  	mov1 CY, a.3
0000017E 8D06                 525  	mov a, 0xFFF06
00000180 71B9                 526  	mov1 a.3, CY
00000182 7C08                 527  	xor a, #0x08
00000184 9D06                 528  	mov 0xFFF06, a
00000186                      529  .BB@LABEL@2_28:	; if_break_bb151
00000186                      530  	;***      191 : //    		R_UART3_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000186                      531  	;***      192 : //    		R_UART1_Send((uint8_t *)"Hello", sizeof("Hello")-1);
00000186                      532  	;***      193 : //    		g_e_status.raw = rEE_Status();
00000186                      533  	;***      194 :     	}
00000186                      534  	;***      195 :     	if((g_rx_data[0] == H_SET)&(g_rx_data[1] == OK_USER)){
00000186                      535  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 195
00000186 40000001             536  	cmp !LOWW(_g_rx_data+0x00001), #0x01
0000018A 8F0000               537  	mov a, !LOWW(_g_rx_data)
0000018D 61F8                 538  	sknz
0000018F                      539  .BB@LABEL@2_29:	; if_break_bb151
0000018F 4C53                 540  	cmp a, #0x53
00000191                      541  .BB@LABEL@2_30:	; if_break_bb151
00000191 DF00                 542  	bnz $.BB@LABEL@2_41
00000193                      543  .BB@LABEL@2_31:	; if_then_bb164
00000193                      544  	;***      196 :     		if(this_size == 70){
00000193                      545  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 196
00000193 8F0000               546  	mov a, !LOWW(_this_size)
00000196 4C46                 547  	cmp a, #0x46
00000198 DF00                 548  	bnz $.BB@LABEL@2_33
0000019A                      549  .BB@LABEL@2_32:	; if_then_bb170
0000019A                      550  	;***      197 :     			if(ns_delay_ms(&g_Tick.tickCustom[1], g_timerSetting.t51*1000)){
0000019A                      551  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 197
0000019A AF0000               552  	movw ax, !LOWW(_g_timerSetting+0x00024)
0000019D 32E803               553  	movw bc, #0x03E8
000001A0 CEFB01               554  	mulhu
000001A3 14                   555  	movw de, ax
000001A4 AF0000               556  	movw ax, !LOWW(_g_timerSetting+0x00026)
000001A7 EF00                 557  	br $.BB@LABEL@2_37
000001A9                      558  .BB@LABEL@2_33:	; if_else_bb181
000001A9                      559  	;***      198 : 					sendToRasPi(H_SET, NEXT_ANIMATION, 0x0);
000001A9                      560  	;***      199 : 					this_size++;
000001A9                      561  	;***      200 : 				}
000001A9                      562  	;***      201 :     		}else if(this_size == 71){
000001A9                      563  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
000001A9 4C47                 564  	cmp a, #0x47
000001AB DF00                 565  	bnz $.BB@LABEL@2_35
000001AD                      566  .BB@LABEL@2_34:	; if_then_bb187
000001AD                      567  	;***      202 :     			if(ns_delay_ms(&g_Tick.tickCustom[1], g_timerSetting.t52*1000)){
000001AD                      568  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 202
000001AD AF0000               569  	movw ax, !LOWW(_g_timerSetting+0x00028)
000001B0 32E803               570  	movw bc, #0x03E8
000001B3 CEFB01               571  	mulhu
000001B6 14                   572  	movw de, ax
000001B7 AF0000               573  	movw ax, !LOWW(_g_timerSetting+0x0002A)
000001BA EF00                 574  	br $.BB@LABEL@2_37
000001BC                      575  .BB@LABEL@2_35:	; if_else_bb198
000001BC                      576  	;***      203 : 					sendToRasPi(H_SET, NEXT_ANIMATION, 0x0);
000001BC                      577  	;***      204 : 					this_size++;
000001BC                      578  	;***      205 : 				}
000001BC                      579  	;***      206 :     		}else if(this_size == 72){
000001BC                      580  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 206
000001BC 4C48                 581  	cmp a, #0x48
000001BE DF00                 582  	bnz $.BB@LABEL@2_39
000001C0                      583  .BB@LABEL@2_36:	; if_then_bb204
000001C0                      584  	;***      207 :     			if(ns_delay_ms(&g_Tick.tickCustom[1], g_timerSetting.t53*1000)){
000001C0                      585  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 207
000001C0 AF0000               586  	movw ax, !LOWW(_g_timerSetting+0x0002C)
000001C3 32E803               587  	movw bc, #0x03E8
000001C6 CEFB01               588  	mulhu
000001C9 14                   589  	movw de, ax
000001CA AF0000               590  	movw ax, !LOWW(_g_timerSetting+0x0002E)
000001CD                      591  .BB@LABEL@2_37:	; if_then_bb204
000001CD C3                   592  	push bc
000001CE C6                   593  	pop hl
000001CF 32E803               594  	movw bc, #0x03E8
000001D2 CEFB02               595  	mulh
000001D5 C5                   596  	push de
000001D6 C2                   597  	pop bc
000001D7 07                   598  	addw ax, hl
000001D8 14                   599  	movw de, ax
000001D9 300000               600  	movw ax, #LOWW(_g_Tick@1+0x00024)
000001DC FC000000             601  	call !!_ns_delay_ms
000001E0 F7                   602  	clrw bc
000001E1 43                   603  	cmpw ax, bc
000001E2 DD00                 604  	bz $.BB@LABEL@2_42
000001E4                      605  .BB@LABEL@2_38:	; if_then_bb211
000001E4 F6                   606  	clrw ax
000001E5 14                   607  	movw de, ax
000001E6 301353               608  	movw ax, #0x5313
000001E9 FC000000             609  	call !!_sendToRasPi
000001ED A00000               610  	inc !LOWW(_this_size)
000001F0 EF00                 611  	br $.BB@LABEL@2_42
000001F2                      612  .BB@LABEL@2_39:	; if_else_bb215
000001F2                      613  	;***      208 : 					sendToRasPi(H_SET, NEXT_ANIMATION, 0x0);
000001F2                      614  	;***      209 : 					this_size++;
000001F2                      615  	;***      210 : 				}
000001F2                      616  	;***      211 :     		}else if(this_size == 73){
000001F2                      617  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001F2 4C49                 618  	cmp a, #0x49
000001F4 DF00                 619  	bnz $.BB@LABEL@2_42
000001F6                      620  .BB@LABEL@2_40:	; if_then_bb221
000001F6                      621  	;***      212 :     			g_rx_data[0] = g_rx_data[1] = 0x00;
000001F6                      622  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 212
000001F6 F50000               623  	clrb !LOWW(_g_rx_data+0x00001)
000001F9 F50000               624  	clrb !LOWW(_g_rx_data)
000001FC                      625  	;***      213 :     			g_Tick.tickCustom[1] = g_systemTime;
000001FC                      626  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 213
000001FC AF0000               627  	movw ax, !LOWW(_g_systemTime+0x00002)
000001FF BF0000               628  	movw !LOWW(_g_Tick@1+0x00026), ax
00000202 AF0000               629  	movw ax, !LOWW(_g_systemTime)
00000205 BF0000               630  	movw !LOWW(_g_Tick@1+0x00024), ax
00000208                      631  	;***      214 : 				this_size = sizeof(struct Timer_Setting_s);
00000208                      632  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 214
00000208 CF000046             633  	mov !LOWW(_this_size), #0x46
0000020C EF00                 634  	br $.BB@LABEL@2_42
0000020E                      635  .BB@LABEL@2_41:	; if_else_bb228
0000020E                      636  	;***      215 :     		}
0000020E                      637  	;***      216 :     	}else{
0000020E                      638  	;***      217 :     		g_Tick.tickCustom[1] = g_systemTime;
0000020E                      639  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 217
0000020E AF0000               640  	movw ax, !LOWW(_g_systemTime+0x00002)
00000211 BF0000               641  	movw !LOWW(_g_Tick@1+0x00026), ax
00000214 AF0000               642  	movw ax, !LOWW(_g_systemTime)
00000217 BF0000               643  	movw !LOWW(_g_Tick@1+0x00024), ax
0000021A                      644  .BB@LABEL@2_42:	; if_break_bb230
0000021A                      645  	;***      218 :     	}
0000021A                      646  	;***      219 : 
0000021A                      647  	;***      220 :     	// Check
0000021A                      648  	;***      221 :     	if(g_uart2_fault == 1){
0000021A                      649  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
0000021A 40000001             650  	cmp !LOWW(_g_uart2_fault), #0x01
0000021E DF00                 651  	bnz $.BB@LABEL@2_44
00000220                      652  .BB@LABEL@2_43:	; if_then_bb236
00000220                      653  	;***      222 :     		R_UART2_Stop();
00000220                      654  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 222
00000220 FC000000             655  	call !!_R_UART2_Stop
00000224                      656  	;***      223 :     		delay_ms(10);
00000224                      657  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 223
00000224 F7                   658  	clrw bc
00000225 300A00               659  	movw ax, #0x000A
00000228 FC000000             660  	call !!_delay_ms
0000022C                      661  	;***      224 :     		R_UART2_Start();
0000022C                      662  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 224
0000022C FC000000             663  	call !!_R_UART2_Start
00000230                      664  	;***      225 :     		g_uart2_fault = 0;
00000230                      665  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 225
00000230 F50000               666  	clrb !LOWW(_g_uart2_fault)
00000233                      667  .BB@LABEL@2_44:	; if_break_bb237
00000233                      668  	;***      226 :     	}
00000233                      669  	;***      227 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
00000233                      670  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 227
00000233 8D00                 671  	mov a, 0xFFF00
00000235 719C                 672  	mov1 CY, a.1
00000237 E1                   673  	oneb a
00000238 61C8                 674  	skc
0000023A                      675  .BB@LABEL@2_45:	; bb245
0000023A F1                   676  	clrb a
0000023B                      677  .BB@LABEL@2_46:	; bb246
0000023B 9F0000               678  	mov !LOWW(_flow_p), a
0000023E                      679  	;***      228 :     	if(ns_delay_ms(&g_Tick.tickCustom[1], 60000)){
0000023E                      680  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 228
0000023E F6                   681  	clrw ax
0000023F 14                   682  	movw de, ax
00000240 3260EA               683  	movw bc, #0xEA60
00000243 300000               684  	movw ax, #LOWW(_g_Tick@1+0x00024)
00000246 FC000000             685  	call !!_ns_delay_ms
0000024A F7                   686  	clrw bc
0000024B 43                   687  	cmpw ax, bc
0000024C DD00                 688  	bz $.BB@LABEL@2_58
0000024E                      689  .BB@LABEL@2_47:	; if_then_bb254
0000024E                      690  	;***      229 :     		if(O_SUPPLY_WATER_PIN == ON){
0000024E                      691  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 229
0000024E 8D01                 692  	mov a, 0xFFF01
00000250 71FC                 693  	mov1 CY, a.7
00000252 F6                   694  	clrw ax
00000253 12                   695  	movw bc, ax
00000254 DC00                 696  	bc $.BB@LABEL@2_51
00000256                      697  .BB@LABEL@2_48:	; if_else_bb264
00000256                      698  	;***      230 : 				g_TickKeeper.SV1_ON_minutes++;
00000256                      699  	;***      231 : 				g_TickKeeper.SV1_OFF_minutes = 0;
00000256                      700  	;***      232 : 			}else{
00000256                      701  	;***      233 : 				g_TickKeeper.SV1_OFF_minutes++;
00000256                      702  	;***      234 : 				g_TickKeeper.SV1_ON_minutes = 0;
00000256                      703  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 234
00000256 BF0000               704  	movw !LOWW(_g_TickKeeper@2+0x00002), ax
00000259 BF0000               705  	movw !LOWW(_g_TickKeeper@2), ax
0000025C A1                   706  	incw ax
0000025D                      707  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 233
0000025D 020000               708  	addw ax, !LOWW(_g_TickKeeper@2+0x00004)
00000260 BF0000               709  	movw !LOWW(_g_TickKeeper@2+0x00004), ax
00000263 13                   710  	movw ax, bc
00000264 61D8                 711  	sknc
00000266                      712  .BB@LABEL@2_49:	; if_else_bb264
00000266 A1                   713  	incw ax
00000267                      714  .BB@LABEL@2_50:	; if_else_bb264
00000267 020000               715  	addw ax, !LOWW(_g_TickKeeper@2+0x00006)
0000026A BF0000               716  	movw !LOWW(_g_TickKeeper@2+0x00006), ax
0000026D EF00                 717  	br $.BB@LABEL@2_54
0000026F                      718  .BB@LABEL@2_51:	; if_then_bb261
0000026F                      719  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 231
0000026F BF0000               720  	movw !LOWW(_g_TickKeeper@2+0x00006), ax
00000272 BF0000               721  	movw !LOWW(_g_TickKeeper@2+0x00004), ax
00000275 A1                   722  	incw ax
00000276                      723  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
00000276 020000               724  	addw ax, !LOWW(_g_TickKeeper@2)
00000279 BF0000               725  	movw !LOWW(_g_TickKeeper@2), ax
0000027C 13                   726  	movw ax, bc
0000027D 61D8                 727  	sknc
0000027F                      728  .BB@LABEL@2_52:	; if_then_bb261
0000027F A1                   729  	incw ax
00000280                      730  .BB@LABEL@2_53:	; if_then_bb261
00000280 020000               731  	addw ax, !LOWW(_g_TickKeeper@2+0x00002)
00000283 BF0000               732  	movw !LOWW(_g_TickKeeper@2+0x00002), ax
00000286                      733  .BB@LABEL@2_54:	; if_break_bb267
00000286                      734  	;***      235 : 			}
00000286                      735  	;***      236 : 			if(O_SPOUT_WATER_PIN == ON){
00000286                      736  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 236
00000286 8D05                 737  	mov a, 0xFFF05
00000288 71DC                 738  	mov1 CY, a.5
0000028A F6                   739  	clrw ax
0000028B 12                   740  	movw bc, ax
0000028C DC00                 741  	bc $.BB@LABEL@2_59
0000028E                      742  .BB@LABEL@2_55:	; if_else_bb278
0000028E                      743  	;***      237 : 				g_TickKeeper.SV2_ON_minutes++;
0000028E                      744  	;***      238 : 				g_TickKeeper.SV2_OFF_minutes = 0;
0000028E                      745  	;***      239 : 			}else{
0000028E                      746  	;***      240 : 				g_TickKeeper.SV2_OFF_minutes++;
0000028E                      747  	;***      241 : 				g_TickKeeper.SV2_ON_minutes = 0;
0000028E                      748  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 241
0000028E BF0000               749  	movw !LOWW(_g_TickKeeper@2+0x0000A), ax
00000291 BF0000               750  	movw !LOWW(_g_TickKeeper@2+0x00008), ax
00000294 A1                   751  	incw ax
00000295                      752  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 240
00000295 020000               753  	addw ax, !LOWW(_g_TickKeeper@2+0x0000C)
00000298 BF0000               754  	movw !LOWW(_g_TickKeeper@2+0x0000C), ax
0000029B 13                   755  	movw ax, bc
0000029C 61D8                 756  	sknc
0000029E                      757  .BB@LABEL@2_56:	; if_else_bb278
0000029E A1                   758  	incw ax
0000029F                      759  .BB@LABEL@2_57:	; if_else_bb278
0000029F 020000               760  	addw ax, !LOWW(_g_TickKeeper@2+0x0000E)
000002A2 BF0000               761  	movw !LOWW(_g_TickKeeper@2+0x0000E), ax
000002A5                      762  .BB@LABEL@2_58:	; if_else_bb278
000002A5 EF00                 763  	br $.BB@LABEL@2_62
000002A7                      764  .BB@LABEL@2_59:	; if_then_bb275
000002A7                      765  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 238
000002A7 BF0000               766  	movw !LOWW(_g_TickKeeper@2+0x0000E), ax
000002AA BF0000               767  	movw !LOWW(_g_TickKeeper@2+0x0000C), ax
000002AD A1                   768  	incw ax
000002AE                      769  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 237
000002AE 020000               770  	addw ax, !LOWW(_g_TickKeeper@2+0x00008)
000002B1 BF0000               771  	movw !LOWW(_g_TickKeeper@2+0x00008), ax
000002B4 13                   772  	movw ax, bc
000002B5 61D8                 773  	sknc
000002B7                      774  .BB@LABEL@2_60:	; if_then_bb275
000002B7 A1                   775  	incw ax
000002B8                      776  .BB@LABEL@2_61:	; if_then_bb275
000002B8 020000               777  	addw ax, !LOWW(_g_TickKeeper@2+0x0000A)
000002BB BF0000               778  	movw !LOWW(_g_TickKeeper@2+0x0000A), ax
000002BE                      779  .BB@LABEL@2_62:	; if_break_bb282
000002BE                      780  	;***      242 : 			}
000002BE                      781  	;***      243 :     	}
000002BE                      782  	;***      244 :     	if(ns_delay_ms(&g_Tick.tick1s, 1000)){
000002BE                      783  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 244
000002BE F6                   784  	clrw ax
000002BF 14                   785  	movw de, ax
000002C0 32E803               786  	movw bc, #0x03E8
000002C3 300000               787  	movw ax, #LOWW(_g_Tick@1+0x00004)
000002C6 FC000000             788  	call !!_ns_delay_ms
000002CA F7                   789  	clrw bc
000002CB 43                   790  	cmpw ax, bc
000002CC DD00                 791  	bz $.BB@LABEL@2_66
000002CE                      792  .BB@LABEL@2_63:	; if_then_bb287
000002CE                      793  	;***      245 : 
000002CE                      794  	;***      246 : //    		send_buf[1]++;
000002CE                      795  	;***      247 : //    		R_UART3_Send(send_buf, 7);
000002CE                      796  	;***      248 : //    		R_UART3_Receive(rec_buf, 7);
000002CE                      797  	;***      249 :     		O_CTRL_OUT_PIN = led_st&0x01;
000002CE                      798  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 249
000002CE 8F0000               799  	mov a, !LOWW(_led_st)
000002D1 70                   800  	mov x, a
000002D2 718C                 801  	mov1 CY, a.0
000002D4 8D03                 802  	mov a, 0xFFF03
000002D6 7199                 803  	mov1 a.1, CY
000002D8 9D03                 804  	mov 0xFFF03, a
000002DA                      805  	;***      250 :     		O_SPOUT_WATER_PIN = led_st&0x01;
000002DA                      806  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 250
000002DA 8D05                 807  	mov a, 0xFFF05
000002DC 71D9                 808  	mov1 a.5, CY
000002DE 9D05                 809  	mov 0xFFF05, a
000002E0                      810  	;***      251 :     		led_st = led_st == 0?0xff:0x00;
000002E0                      811  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 251
000002E0 D0                   812  	cmp0 x
000002E1 51FF                 813  	mov a, #0xFF
000002E3 61E8                 814  	skz
000002E5                      815  .BB@LABEL@2_64:	; bb311
000002E5 F1                   816  	clrb a
000002E6                      817  .BB@LABEL@2_65:	; bb313
000002E6 9F0000               818  	mov !LOWW(_led_st), a
000002E9                      819  	;***      252 :     	    uint8_t state = g_uart2_sendend;
000002E9                      820  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 252
000002E9 8F0000               821  	mov a, !LOWW(_g_uart2_sendend)
000002EC                      822  	;***      253 : //    	    g_timerSetting.t2_flowSensorStartTime = 0x24770000;
000002EC                      823  	;***      254 : //    	    g_timerSetting.t2_flowSensorStartTime = 0x0000ffff;
000002EC                      824  	;***      255 : //    	    g_timerSetting.t3_flowSensorMonitorTime = 0x0000aaaa;
000002EC                      825  	;***      256 : //    	    g_timerSetting.t6_drainageOffTime = 1000;
000002EC                      826  	;***      257 : //			g_timerSetting.t51++;
000002EC                      827  	;***      258 : //    	    g_timerSetting.crc = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
000002EC                      828  	;***      259 : //    	    g_crc[0] = crc_8((unsigned char *)&g_timerSetting, 4);
000002EC                      829  	;***      260 : //    	    g_crc[1] = Fast_CRC_Cal8Bits(0x00, 4, (unsigned char *)&g_timerSetting);
000002EC                      830  	;***      261 : //    	    g_crc[2] = Quick_CRC_Cal8Bits(0x00, 4, (unsigned char *)&g_timerSetting);
000002EC                      831  	;***      262 : //    	    g_crc[3] = crc8x_simple(0x00, (unsigned char *)&g_timerSetting, 4);
000002EC                      832  	;***      263 : //    	    g_crc[4] = crc8x_fast(0x00, (unsigned char *)&g_timerSetting, 4);
000002EC                      833  	;***      264 : //    	    g_crc[5] = getCRC((unsigned char *)&g_timerSetting, 4);
000002EC                      834  	;***      265 :     	    g_crc[6] = crc8_4((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
000002EC                      835  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 265
000002EC 5244                 836  	mov c, #0x44
000002EE 300000               837  	movw ax, #LOWW(_g_timerSetting)
000002F1 FC000000             838  	call !!_crc8_4
000002F5 9F0000               839  	mov !LOWW(_g_crc+0x00006), a
000002F8                      840  	;***      266 :     	    g_crc[7] = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
000002F8                      841  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 266
000002F8 5244                 842  	mov c, #0x44
000002FA 300000               843  	movw ax, #LOWW(_g_timerSetting)
000002FD FC000000             844  	call !!_crc8_1
00000301 9F0000               845  	mov !LOWW(_g_crc+0x00007), a
00000304                      846  .BB@LABEL@2_66:	; if_break_bb328
00000304                      847  	;***      267 : //    	    g_crc_32 = CRC32_function((uint8_t *)&g_timerSetting, 8);
00000304                      848  	;***      268 : //    	    R_UART2_Send((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s));
00000304                      849  	;***      269 : //    	    R_UART2_Send((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 1);
00000304                      850  	;***      270 : //    	    sendToRasPi(H_ALARM, CURRENT_ABNORMAL, 32);
00000304                      851  	;***      271 : //    	    while(state == g_uart2_sendend){
00000304                      852  	;***      272 : //				R_WDT_Restart();
00000304                      853  	;***      273 : //			}
00000304                      854  	;***      274 : 
00000304                      855  	;***      275 :     		if(led_st == 0x00){
00000304                      856  	;***      276 : 
00000304                      857  	;***      277 : //    			O_HS_ICL_PIN = 0;
00000304                      858  	;***      278 : //    			O_HS_IDA_PIN = 1;
00000304                      859  	;***      279 : //    			handSensorLED(RED);
00000304                      860  	;***      280 : //    			O_CVCC_ALARM_RS = 1;
00000304                      861  	;***      281 : //    			O_PUMP_SALT_PIN = ON;
00000304                      862  	;***      282 : //    			electrolyticOperationON();
00000304                      863  	;***      283 : 
00000304                      864  	;***      284 :     		}else{
00000304                      865  	;***      285 : //    			O_HS_ICL_PIN = 1;
00000304                      866  	;***      286 : //				O_HS_IDA_PIN = 0;
00000304                      867  	;***      287 : //    			handSensorLED(WHITE);
00000304                      868  	;***      288 : //    			O_CVCC_ALARM_RS = 0;
00000304                      869  	;***      289 : //    			O_PUMP_SALT_PIN = OFF;
00000304                      870  	;***      290 : //    			electrolyticOperationOFF();
00000304                      871  	;***      291 :     		}
00000304                      872  	;***      292 :     	}
00000304                      873  	;***      293 : //--------------------------------End testing code---------------------------------------------------------
00000304                      874  	;***      294 : //    	main_20211111();
00000304                      875  	;***      295 : 
00000304                      876  	;***      296 :     	switch (readHS()) {
00000304                      877  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 296
00000304 FE0000               878  	call $!_readHS
00000307 D1                   879  	cmp0 a
00000308 DD00                 880  	bz $.BB@LABEL@2_69
0000030A                      881  .BB@LABEL@2_67:	; if_break_bb328
0000030A 91                   882  	dec a
0000030B DF00                 883  	bnz $.BB@LABEL@2_70
0000030D                      884  .BB@LABEL@2_68:	; switch_clause_bb332
0000030D                      885  	;***      297 : 			case 0:
0000030D                      886  	;***      298 : 				g_color = WHITE;
0000030D                      887  	;***      299 : 				break;
0000030D                      888  	;***      300 : 			case 1:
0000030D                      889  	;***      301 : 				g_color = BLUE;
0000030D                      890  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 301
0000030D CF000003             891  	mov !LOWW(_g_color), #0x03
00000311 EF00                 892  	br $.BB@LABEL@2_70
00000313                      893  .BB@LABEL@2_69:	; switch_clause_bb331
00000313                      894  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 298
00000313 CF000002             895  	mov !LOWW(_g_color), #0x02
00000317                      896  .BB@LABEL@2_70:	; switch_break_bb334
00000317                      897  	;***      302 : 				break;
00000317                      898  	;***      303 : 			default:
00000317                      899  	;***      304 : 
00000317                      900  	;***      305 : 				break;
00000317                      901  	;***      306 : 		}
00000317                      902  	;***      307 :     	if(g_color != g_pre_color){
00000317                      903  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 307
00000317 8F0000               904  	mov a, !LOWW(_g_color)
0000031A 4F0000               905  	cmp a, !LOWW(_g_pre_color)
0000031D DD00                 906  	bz $.BB@LABEL@2_74
0000031F                      907  .BB@LABEL@2_71:	; if_then_bb342
0000031F                      908  	;***      308 : 			O_RS485_MODE_PIN = 1U;
0000031F                      909  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 308
0000031F 710200               910  	set1 0xFFF00.0
00000322                      911  	;***      309 : 			uint8_t _uart3 = g_uart3_sendend;
00000322                      912  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 309
00000322 8F0000               913  	mov a, !LOWW(_g_uart3_sendend)
00000325 9800                 914  	mov [sp+0x00], a
00000327                      915  	;***      310 : 			send_buf[3]++;
00000327                      916  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 310
00000327 A00000               917  	inc !LOWW(_send_buf+0x00003)
0000032A                      918  	;***      311 : 			R_UART3_Send(send_buf, 7);
0000032A                      919  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 311
0000032A 320700               920  	movw bc, #0x0007
0000032D 300000               921  	movw ax, #LOWW(_send_buf)
00000330 FC000000             922  	call !!_R_UART3_Send
00000334                      923  .BB@LABEL@2_72:	; bb348
00000334 8800                 924  	mov a, [sp+0x00]
00000336                      925  	;***      312 : 			while(_uart3 == g_uart3_sendend);
00000336                      926  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 312
00000336 4F0000               927  	cmp a, !LOWW(_g_uart3_sendend)
00000339 DD00                 928  	bz $.BB@LABEL@2_72
0000033B                      929  .BB@LABEL@2_73:	; bb356
0000033B                      930  	;***      313 : 			O_RS485_MODE_PIN = 0U;
0000033B                      931  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 313
0000033B 710300               932  	clr1 0xFFF00.0
0000033E                      933  .BB@LABEL@2_74:	; if_break_bb357
0000033E                      934  	;***      314 :     	}
0000033E                      935  	;***      315 :     	handSensorLED(g_color);
0000033E                      936  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 315
0000033E 8F0000               937  	mov a, !LOWW(_g_color)
00000341 FC000000             938  	call !!_handSensorLED
00000345                      939  	;***      316 :     	R_WDT_Restart();
00000345                      940  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 316
00000345 FC000000             941  	call !!_R_WDT_Restart
00000349 EE0000               942  	br $!.BB@LABEL@2_1
0000034C                      943  _R_MAIN_UserInit:
0000034C                      944  	.STACK _R_MAIN_UserInit = 4
0000034C                      945  	;***      317 :     }
0000034C                      946  	;***      318 :     /* End user code. Do not edit comment generated here */
0000034C                      947  	;***      319 : }
0000034C                      948  	;***      320 : 
0000034C                      949  	;***      321 : /***********************************************************************************************************************
0000034C                      950  	;***      322 : * Function Name: R_MAIN_UserInit
0000034C                      951  	;***      323 : * Description  : This function adds user code before implementing main function.
0000034C                      952  	;***      324 : * Arguments    : None
0000034C                      953  	;***      325 : * Return Value : None
0000034C                      954  	;***      326 : ***********************************************************************************************************************/
0000034C                      955  	;***      327 : void R_MAIN_UserInit(void)
0000034C                      956  	;***      328 : {
0000034C                      957  	;***      329 :     /* Start user code. Do not edit comment generated here */
0000034C                      958  	;***      330 :     EI();
0000034C                      959  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 330
0000034C 717AFA               960  	ei
0000034F                      961  	;***      331 :     R_TAU0_Create();
0000034F                      962  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 331
0000034F FC000000             963  	call !!_R_TAU0_Create
00000353                      964  	;***      332 :     R_SAU0_Create();
00000353                      965  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 332
00000353 FC000000             966  	call !!_R_SAU0_Create
00000357                      967  	;***      333 :     R_SAU1_Create();
00000357                      968  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 333
00000357 FC000000             969  	call !!_R_SAU1_Create
0000035B                      970  	;***      334 :     R_UART1_Create();
0000035B                      971  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 334
0000035B FC000000             972  	call !!_R_UART1_Create
0000035F                      973  	;***      335 :     R_UART2_Create();
0000035F                      974  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 335
0000035F FC000000             975  	call !!_R_UART2_Create
00000363                      976  	;***      336 :     R_UART3_Create();
00000363                      977  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 336
00000363 FC000000             978  	call !!_R_UART3_Create
00000367                      979  	;***      337 :     R_RTC_Create();
00000367                      980  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 337
00000367 FC000000             981  	call !!_R_RTC_Create
0000036B                      982  	;***      338 :     R_PORT_Create_UserInit();
0000036B                      983  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 338
0000036B FC000000             984  	call !!_R_PORT_Create_UserInit
0000036F                      985  	;***      339 :     R_CSI01_Create();
0000036F                      986  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 339
0000036F FC000000             987  	call !!_R_CSI01_Create
00000373                      988  	;***      340 :     R_CSI00_Create();
00000373                      989  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 340
00000373 FC000000             990  	call !!_R_CSI00_Create
00000377                      991  	;***      341 : 
00000377                      992  	;***      342 :     R_TAU0_Channel0_Start();
00000377                      993  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 342
00000377 FC000000             994  	call !!_R_TAU0_Channel0_Start
0000037B                      995  	;***      343 :     R_UART3_Start();
0000037B                      996  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 343
0000037B FC000000             997  	call !!_R_UART3_Start
0000037F                      998  	;***      344 :     R_UART1_Start();
0000037F                      999  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 344
0000037F FC000000            1000  	call !!_R_UART1_Start
00000383                     1001  	;***      345 :     R_UART2_Start();
00000383                     1002  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 345
00000383 FC000000            1003  	call !!_R_UART2_Start
00000387                     1004  	;***      346 :     R_CSI00_Start();
00000387                     1005  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 346
00000387 FC000000            1006  	call !!_R_CSI00_Start
0000038B                     1007  	;***      347 : //    R_CSI01_Start();
0000038B                     1008  	;***      348 : 
0000038B                     1009  	;***      349 : 
0000038B                     1010  	;***      350 :     R_ADC_Create();
0000038B                     1011  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 350
0000038B FC000000            1012  	call !!_R_ADC_Create
0000038F                     1013  	;***      351 :     R_ADC_Set_OperationOn();
0000038F                     1014  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 351
0000038F FC000000            1015  	call !!_R_ADC_Set_OperationOn
00000393                     1016  	;***      352 : //    R_ADC_Set_ADChannel(ADCHANNEL0);
00000393                     1017  	;***      353 :     R_ADC_Start();
00000393                     1018  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 353
00000393 EC000000            1019  	br !!_R_ADC_Start
00000397                     1020  	;***      354 :     /* End user code. Do not edit comment generated here */
00000397                     1021  	;***      355 : }
00000397                     1022  	;***      356 : 
00000397                     1023  	;***      357 : /* Start user code for adding. Do not edit comment generated here */
00000397                     1024  	;***      358 : /* End user code. Do not edit comment generated here */
00000000                     1025  	.SECTION .bss,BSS
00000000                     1026  	.ALIGN 2
00000000                     1027  _g_Tick@1:
00000000                     1028  	.DS (64)
00000040                     1029  	.ALIGN 2
00000040                     1030  _g_TickKeeper@2:
00000040                     1031  	.DS (16)
00000050                     1032  	.ALIGN 2
00000050                     1033  __setting@3:
00000050                     1034  	.DS (70)
00000096                     1035  _g_e_status:
00000096                     1036  	.DS (1)
00000097                     1037  _flow_p:
00000097                     1038  	.DS (1)
00000098                     1039  _salt_h_p:
00000098                     1040  	.DS (1)
00000099                     1041  _g_eeprom_wren:
00000099                     1042  	.DS (1)
0000009A                     1043  _receive_data:
0000009A                     1044  	.DS (2)
0000009C                     1045  	.ALIGN 2
0000009C                     1046  _receive_setting:
0000009C                     1047  	.DS (34)
000000BE                     1048  _set:
000000BE                     1049  	.DS (1)
000000BF 00                  1050  	.ALIGN 2
000000C0                     1051  _rx_data:
000000C0                     1052  	.DS (12)
000000CC                     1053  	.ALIGN 2
000000CC                     1054  _data_f:
000000CC                     1055  	.DS (4)
000000D0                     1056  	.ALIGN 2
000000D0                     1057  _data_f_test:
000000D0                     1058  	.DS (4)
000000D4                     1059  	.ALIGN 2
000000D4                     1060  _g_control_buffer:
000000D4                     1061  	.DS (6)
000000DA                     1062  _this_size:
000000DA                     1063  	.DS (1)
000000DB                     1064  _rec_buf:
000000DB                     1065  	.DS (12)
000000E7                     1066  _g_crc:
000000E7                     1067  	.DS (8)
000000EF 00                  1068  	.ALIGN 2
000000F0                     1069  _g_crc_32:
000000F0                     1070  	.DS (32)
00000110                     1071  _rx_count:
00000110                     1072  	.DS (1)
00000000                     1073  	.SECTION .data,DATA
00000000                     1074  	.ALIGN 2
00000000                     1075  _g_error:
00000000 0000                1076  	.DS (2)
00000002                     1077  	.ALIGN 2
00000002                     1078  _g_adc_ch:
00000002 0000                1079  	.DS (2)
00000004                     1080  _led_st:
00000004 FF                  1081  	.DB 0xFF
00000005                     1082  _e_send:
00000005 05                  1083  	.DB 0x05,0xA5,0x01
00000006 A5              
00000007 01              
00000008 00                  1084  	.DS (1)
00000009 01                  1085  	.DB 0x01,0x02,0x06,0x04
0000000A 02              
0000000B 06              
0000000C 04              
0000000D 00000000            1086  	.DS (4)
00000011                     1087  _e_data:
00000011 0000000000000000    1088  	.DS (12)
00000019 00000000
0000001D                     1089  _send_data:
0000001D 23                  1090  	.DB 0x23,0xAB
0000001E AB              
0000001F                     1091  _send_buf:
0000001F 08                  1092  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
00000020 01              
00000021 02              
00000022 03              
00000023 04              
00000024 05              
00000025 06              
00000026                     1093  	.ALIGN 2
00000026                     1094  _data_crc:
00000026 24770000            1095  	.DB4 0x00007724,0x0000EB28
0000002A 28EB0000        

Section List
Attr     Size                Name

TEXTF               919 (00000397) .textf
DATA                 46 (0000002E) .data
BSS                 273 (00000111) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

