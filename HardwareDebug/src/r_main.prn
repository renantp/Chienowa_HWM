RL78 Family Assembler V1.10.00.01 Assemble Source List

OFFSET   CODE                  NO  SOURCE STATEMENT

00000000                        1  #CC-RL Compiler RL78 Assembler Source
00000000                        2  #@  CC-RL Version : V1.10.00 [20 Nov 2020]
00000000                        3  #@  Commmand :
00000000                        4  #@   -cpu=S3
00000000                        5  #@   -c
00000000                        6  #@   -dev=D:/Chieniwa/E2_Studio/.eclipse/com.renesas.platform_1435879475/DebugComp/RL78/RL78/Common/DR5F104ML.DVF
00000000                        7  #@   -MAKEUD=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src
00000000                        8  #@   -I C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc
00000000                        9  #@   -I D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate
00000000                       10  #@   -character_set=utf8
00000000                       11  #@   -lang=c99
00000000                       12  #@   -g
00000000                       13  #@   -asmopt=-prn_path=src
00000000                       14  #@   -asm_path=src/
00000000                       15  #@   -pass_source
00000000                       16  #@   -o src/r_main.obj
00000000                       17  #@   ../src/r_main.c
00000000                       18  #@  compiled at Thu Jan 06 15:40:38 2022
00000000                       19  
00000000                       20  	.EXTERN __settingTime
00000000                       21  	.EXTERN __settingNumber
00000000                       22  	.EXTERN _g_timerSetting
00000000                       23  	.EXTERN _g_numberSetting
00000000                       24  	.EXTERN _g_io_status
00000000                       25  	.EXTERN _g_Tick
00000000                       26  	.EXTERN _commnunication_flag
00000000                       27  	.EXTERN _g_machine_mode
00000000                       28  	.EXTERN _g_systemTime
00000000                       29  	.EXTERN _g_csi_rev_end
00000000                       30  	.EXTERN _g_uart2_fault
00000000                       31  	.EXTERN _g_uart2_sendend
00000000                       32  	.EXTERN _g_uart3_sendend
00000000                       33  	.EXTERN _g_rx_data
00000000                       34  	.EXTERN _g_uart3_rx_data
00000000                       35  	.EXTERN _g_color
00000000                       36  	.EXTERN _g_pre_color
00000000                       37  	.PUBLIC _g_error
00000000                       38  	.PUBLIC _g_adc_ch
00000000                       39  	.PUBLIC _g_e_status
00000000                       40  	.PUBLIC _ret_number_setting
00000000                       41  	.PUBLIC _led_st
00000000                       42  	.PUBLIC _flow_p
00000000                       43  	.PUBLIC _salt_h_p
00000000                       44  	.PUBLIC _g_eeprom_wren
00000000                       45  	.PUBLIC _send_data
00000000                       46  	.PUBLIC _receive_data
00000000                       47  	.PUBLIC _receive_setting
00000000                       48  	.PUBLIC _set
00000000                       49  	.PUBLIC _rx_data
00000000                       50  	.PUBLIC _data_f
00000000                       51  	.PUBLIC _data_f_test
00000000                       52  	.PUBLIC _g_control_buffer_f
00000000                       53  	.PUBLIC _g_control_buffer_u32
00000000                       54  	.PUBLIC _handsensor_status
00000000                       55  	.PUBLIC _g_handsensor_status
00000000                       56  	.PUBLIC _this_size
00000000                       57  	.PUBLIC _this_size_2
00000000                       58  	.PUBLIC _send_buf
00000000                       59  	.PUBLIC _g_crc
00000000                       60  	.PUBLIC _g_crc_32
00000000                       61  	.PUBLIC _data_crc
00000000                       62  	.PUBLIC _rx_count
00000000                       63  	.PUBLIC _dac_out
00000000                       64  	.PUBLIC _nostop_checkHandSensor
00000000                       65  	.EXTERN _ns_delay_ms
00000000                       66  	.PUBLIC _readHS
00000000                       67  	.EXTERN _delay_ms
00000000                       68  	.PUBLIC _main
00000000                       69  	.PUBLIC _R_MAIN_UserInit
00000000                       70  	.EXTERN _EEPROM_Init
00000000                       71  	.EXTERN _EE_SPI_Read
00000000                       72  	.EXTERN _R_UART2_Receive
00000000                       73  	.EXTERN _R_UART3_Receive
00000000                       74  	.EXTERN _sendRS485
00000000                       75  	.EXTERN _handSensorLED
00000000                       76  	.EXTERN _realTimeResponse
00000000                       77  	.EXTERN _main_loop_20211111
00000000                       78  	.EXTERN _UpdateMachineStatus
00000000                       79  	.EXTERN _R_UART2_Stop
00000000                       80  	.EXTERN _R_UART2_Start
00000000                       81  	.EXTERN _sendR485_7byte
00000000                       82  	.EXTERN _R_UART3_Stop
00000000                       83  	.EXTERN _R_UART3_Start
00000000                       84  	.EXTERN _crc8_4
00000000                       85  	.EXTERN _crc8_1
00000000                       86  	.EXTERN _R_DAC0_Set_ConversionValue
00000000                       87  	.EXTERN _R_DAC1_Set_ConversionValue
00000000                       88  	.EXTERN _R_WDT_Restart
00000000                       89  	.EXTERN _R_TAU0_Create
00000000                       90  	.EXTERN _R_SAU0_Create
00000000                       91  	.EXTERN _R_SAU1_Create
00000000                       92  	.EXTERN _R_UART1_Create
00000000                       93  	.EXTERN _R_UART2_Create
00000000                       94  	.EXTERN _R_UART3_Create
00000000                       95  	.EXTERN _R_RTC_Create
00000000                       96  	.EXTERN _R_PORT_Create_UserInit
00000000                       97  	.EXTERN _R_CSI01_Create
00000000                       98  	.EXTERN _R_CSI00_Create
00000000                       99  	.EXTERN _R_TAU0_Channel0_Start
00000000                      100  	.EXTERN _R_UART1_Start
00000000                      101  	.EXTERN _R_CSI00_Start
00000000                      102  	.EXTERN _R_ADC_Create
00000000                      103  	.EXTERN _R_ADC_Set_OperationOn
00000000                      104  	.EXTERN _R_ADC_Start
00000000                      105  	.EXTERN _R_DAC_Create
00000000                      106  	.EXTERN _R_DAC0_Start
00000000                      107  	.EXTERN _R_DAC1_Start
00000000                      108  
00000000                      109  	.SECTION .textf,TEXTF
00000000                      110  _nostop_checkHandSensor:
00000000                      111  	.STACK _nostop_checkHandSensor = 4
00000000                      112  	;***        1 : /***********************************************************************************************************************
00000000                      113  	;***        2 : * DISCLAIMER
00000000                      114  	;***        3 : * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products.
00000000                      115  	;***        4 : * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
00000000                      116  	;***        5 : * applicable laws, including copyright laws. 
00000000                      117  	;***        6 : * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED
00000000                      118  	;***        7 : * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
00000000                      119  	;***        8 : * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY
00000000                      120  	;***        9 : * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT,
00000000                      121  	;***       10 : * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR
00000000                      122  	;***       11 : * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
00000000                      123  	;***       12 : * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability 
00000000                      124  	;***       13 : * of this software. By using this software, you agree to the additional terms and conditions found by accessing the 
00000000                      125  	;***       14 : * following link:
00000000                      126  	;***       15 : * http://www.renesas.com/disclaimer
00000000                      127  	;***       16 : *
00000000                      128  	;***       17 : * Copyright (C) 2011, 2020 Renesas Electronics Corporation. All rights reserved.
00000000                      129  	;***       18 : ***********************************************************************************************************************/
00000000                      130  	;***       19 : 
00000000                      131  	;***       20 : /***********************************************************************************************************************
00000000                      132  	;***       21 : * File Name    : r_main.c
00000000                      133  	;***       22 : * Version      : CodeGenerator for RL78/G14 V2.05.05.01 [25 Nov 2020]
00000000                      134  	;***       23 : * Device(s)    : R5F104ML
00000000                      135  	;***       24 : * Tool-Chain   : CCRL
00000000                      136  	;***       25 : * Description  : This file implements main function.
00000000                      137  	;***       26 : * Creation Date: 30/11/2021
00000000                      138  	;***       27 : ***********************************************************************************************************************/
00000000                      139  	;***       28 : 
00000000                      140  	;***       29 : /***********************************************************************************************************************
00000000                      141  	;***       30 : Includes
00000000                      142  	;***       31 : ***********************************************************************************************************************/
00000000                      143  	;***       32 : #include "r_cg_macrodriver.h"
00000000                      144  	;***       33 : #include "r_cg_cgc.h"
00000000                      145  	;***       34 : #include "r_cg_port.h"
00000000                      146  	;***       35 : #include "r_cg_serial.h"
00000000                      147  	;***       36 : #include "r_cg_adc.h"
00000000                      148  	;***       37 : #include "r_cg_dac.h"
00000000                      149  	;***       38 : #include "r_cg_timer.h"
00000000                      150  	;***       39 : #include "r_cg_wdt.h"
00000000                      151  	;***       40 : #include "r_cg_rtc.h"
00000000                      152  	;***       41 : /* Start user code for include. Do not edit comment generated here */
00000000                      153  	;***       42 : #include "EEPROM.h"
00000000                      154  	;***       43 : #include "usr_timer.h"
00000000                      155  	;***       44 : #include "usr_setting_sheet.h"
00000000                      156  	;***       45 : #include "crc8.h"
00000000                      157  	;***       46 : #include "main.h"
00000000                      158  	;***       47 : /* End user code. Do not edit comment generated here */
00000000                      159  	;***       48 : #include "r_cg_userdefine.h"
00000000                      160  	;***       49 : 
00000000                      161  	;***       50 : /***********************************************************************************************************************
00000000                      162  	;***       51 : Pragma directive
00000000                      163  	;***       52 : ***********************************************************************************************************************/
00000000                      164  	;***       53 : /* Start user code for pragma. Do not edit comment generated here */
00000000                      165  	;***       54 : #define CVCC_Current_Set(a) R_DAC0_Set_ConversionValue(a)
00000000                      166  	;***       55 : #define Salt_Analog_Set(a) R_DAC1_Set_ConversionValue(a)
00000000                      167  	;***       56 : /* End user code. Do not edit comment generated here */
00000000                      168  	;***       57 : 
00000000                      169  	;***       58 : /***********************************************************************************************************************
00000000                      170  	;***       59 : Global variables and functions
00000000                      171  	;***       60 : ***********************************************************************************************************************/
00000000                      172  	;***       61 : /* Start user code for global. Do not edit comment generated here */
00000000                      173  	;***       62 : volatile int g_error = 0;
00000000                      174  	;***       63 : volatile int g_adc_ch = 0;
00000000                      175  	;***       64 : union EEPROM_status_u g_e_status;
00000000                      176  	;***       65 : struct Number_Setting_s ret_number_setting;
00000000                      177  	;***       66 : uint8_t led_st = 0xff;
00000000                      178  	;***       67 : uint8_t flow_p, salt_h_p;
00000000                      179  	;***       68 : uint8_t g_eeprom_wren;
00000000                      180  	;***       69 : uint8_t send_data[2] = { 0x23, 0xab};
00000000                      181  	;***       70 : uint8_t receive_data[2];
00000000                      182  	;***       71 : struct Number_Setting_s receive_setting;
00000000                      183  	;***       72 : union EEPROM_status_u set;
00000000                      184  	;***       73 : uint32_t rx_data[3];
00000000                      185  	;***       74 : float data_f;
00000000                      186  	;***       75 : union byte_to_float data_f_test;
00000000                      187  	;***       76 : struct UART_Buffer_float_s g_control_buffer_f;
00000000                      188  	;***       77 : struct UART_Buffer_u32_s g_control_buffer_u32;
00000000                      189  	;***       78 : 
00000000                      190  	;***       79 : union {
00000000                      191  	;***       80 : 	struct{
00000000                      192  	;***       81 : 		uint8_t up_signal;
00000000                      193  	;***       82 : 	};
00000000                      194  	;***       83 : 	uint8_t status;
00000000                      195  	;***       84 : }handsensor_status;
00000000                      196  	;***       85 : uint8_t g_handsensor_status[2];
00000000                      197  	;***       86 : void nostop_checkHandSensor(void){
00000000                      198  	;***       87 : 	if(DETECT_U == I_ON){
00000000                      199  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 87
00000000 8D07                 200  	mov a, 0xFFF07
00000002 315300               201  	bt a.5, $.BB@LABEL@1_5
00000005                      202  .BB@LABEL@1_1:	; if_then_bb
00000005                      203  	;***       88 : 		if(ns_delay_ms(&g_Tick.tickHandSensor[0], 500)){
00000005                      204  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 88
00000005 F6                   205  	clrw ax
00000006 14                   206  	movw de, ax
00000007 32F401               207  	movw bc, #0x01F4
0000000A 300000               208  	movw ax, #LOWW(_g_Tick+0x00080)
0000000D FC000000             209  	call !!_ns_delay_ms
00000011 F7                   210  	clrw bc
00000012 43                   211  	cmpw ax, bc
00000013 DD00                 212  	bz $.BB@LABEL@1_9
00000015                      213  .BB@LABEL@1_2:	; if_then_bb10
00000015                      214  	;***       89 : 			g_handsensor_status[0] = g_handsensor_status[0] == 0? 1:0;
00000015                      215  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 89
00000015 D50000               216  	cmp0 !LOWW(_g_handsensor_status)
00000018 E1                   217  	oneb a
00000019 61E8                 218  	skz
0000001B                      219  .BB@LABEL@1_3:	; bb15
0000001B F1                   220  	clrb a
0000001C                      221  .BB@LABEL@1_4:	; bb16
0000001C 9F0000               222  	mov !LOWW(_g_handsensor_status), a
0000001F                      223  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
0000001F D7                   224  	ret
00000020                      225  .BB@LABEL@1_5:	; if_else_bb
00000020                      226  	;***       90 : 		}
00000020                      227  	;***       91 : 	}else if(DETECT_D == I_ON){
00000020                      228  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 91
00000020 8D07                 229  	mov a, 0xFFF07
00000022 314300               230  	bt a.4, $.BB@LABEL@1_7
00000025                      231  .BB@LABEL@1_6:	; if_then_bb27
00000025                      232  	;***       92 : 		g_handsensor_status[1] = 1;
00000025                      233  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 92
00000025 E50000               234  	oneb !LOWW(_g_handsensor_status+0x00001)
00000028 D7                   235  	ret
00000029                      236  .BB@LABEL@1_7:	; if_else_bb28
00000029                      237  	;***       93 : 	}else if(DETECT_U == I_OFF){
00000029                      238  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 93
00000029 8D07                 239  	mov a, 0xFFF07
0000002B 315300               240  	bt a.5, $.BB@LABEL@1_9
0000002E                      241  .BB@LABEL@1_8:	; if_else_bb37
0000002E                      242  	;***       94 : 
0000002E                      243  	;***       95 : 	}else if(DETECT_D == I_OFF){
0000002E                      244  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 95
0000002E 8D07                 245  	mov a, 0xFFF07
00000030                      246  .BB@LABEL@1_9:	; return
00000030                      247  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 98
00000030 D7                   248  	ret
00000031                      249  _readHS:
00000031                      250  	.STACK _readHS = 4
00000031                      251  	;***       96 : 
00000031                      252  	;***       97 : 	}
00000031                      253  	;***       98 : }
00000031                      254  	;***       99 : uint8_t readHS(void){
00000031                      255  	;***      100 :    if(DETECT_U){
00000031                      256  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 100
00000031 8D07                 257  	mov a, 0xFFF07
00000033 315300               258  	bt a.5, $.BB@LABEL@2_2
00000036                      259  .BB@LABEL@2_1:	; bb18
00000036                      260  	;***      101 : 	  delay_ms(2);
00000036                      261  	;***      102 :       if(DETECT_U) return 1;return 0;
00000036                      262  	;***      103 :    }else return 0;
00000036                      263  	;***      104 : }
00000036                      264  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 104
00000036 F1                   265  	clrb a
00000037 D7                   266  	ret
00000038                      267  .BB@LABEL@2_2:	; if_then_bb
00000038                      268  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 101
00000038 F7                   269  	clrw bc
00000039 E6                   270  	onew ax
0000003A A1                   271  	incw ax
0000003B FC000000             272  	call !!_delay_ms
0000003F                      273  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 102
0000003F 8D07                 274  	mov a, 0xFFF07
00000041 315A                 275  	shr a, 0x05
00000043 5C01                 276  	and a, #0x01
00000045 D7                   277  	ret
00000046                      278  _main:
00000046                      279  	.STACK _main = 24
00000046                      280  	;***      105 : uint8_t this_size = sizeof(g_io_status);
00000046                      281  	;***      106 : uint8_t this_size_2 = sizeof(union IO_Status_u);
00000046                      282  	;***      107 : uint8_t send_buf[7] = {8,1,2,3,4,5,6};
00000046                      283  	;***      108 : char g_crc[8];
00000046                      284  	;***      109 : uint32_t g_crc_32[8];
00000046                      285  	;***      110 : uint32_t data_crc[2] = {30500, 60200};
00000046                      286  	;***      111 : uint8_t rx_count;
00000046                      287  	;***      112 : uint8_t dac_out[2] = {0xff, 0xff};
00000046                      288  	;***      113 : /* End user code. Do not edit comment generated here */
00000046                      289  	;***      114 : 
00000046                      290  	;***      115 : void R_MAIN_UserInit(void);
00000046                      291  	;***      116 : 
00000046                      292  	;***      117 : /***********************************************************************************************************************
00000046                      293  	;***      118 : * Function Name: main
00000046                      294  	;***      119 : * Description  : This function implements main function.
00000046                      295  	;***      120 : * Arguments    : None
00000046                      296  	;***      121 : * Return Value : None
00000046                      297  	;***      122 : ***********************************************************************************************************************/
00000046                      298  	;***      123 : void main(void)
00000046                      299  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 123
00000046 2010                 300  	subw sp, #0x10
00000048                      301  	;***      124 : {
00000048                      302  	;***      125 :     R_MAIN_UserInit();
00000048                      303  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 125
00000048 FE0000               304  	call $!_R_MAIN_UserInit
0000004B                      305  	;***      126 :     /* Start user code. Do not edit comment generated here */
0000004B                      306  	;***      127 : 
0000004B                      307  	;***      128 :     //TODO: EEPROM Initialize and read Setting
0000004B                      308  	;***      129 :     EEPROM_Init(&g_csi_rev_end, NONE_BLOCK);
0000004B                      309  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 129
0000004B F2                   310  	clrb c
0000004C 300000               311  	movw ax, #LOWW(_g_csi_rev_end)
0000004F FC000000             312  	call !!_EEPROM_Init
00000053 F6                   313  	clrw ax
00000054                      314  	;***      130 :     EE_SPI_Read((uint8_t *)&g_numberSetting, NUMBER_SETTING_ADDRESS, numberSettingSize);
00000054                      315  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 130
00000054 C1                   316  	push ax
00000055 5025                 317  	mov x, #0x25
00000057 C1                   318  	push ax
00000058 F7                   319  	clrw bc
00000059 300000               320  	movw ax, #LOWW(_g_numberSetting)
0000005C FC000000             321  	call !!_EE_SPI_Read
00000060 1004                 322  	addw sp, #0x04
00000062 F6                   323  	clrw ax
00000063                      324  	;***      131 :     EE_SPI_Read((uint8_t *)&g_timerSetting, TIME_SETTING_ADDRESS, timeSettingSize);
00000063                      325  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 131
00000063 C1                   326  	push ax
00000064 5095                 327  	mov x, #0x95
00000066 C1                   328  	push ax
00000067 320008               329  	movw bc, #0x0800
0000006A 300000               330  	movw ax, #LOWW(_g_timerSetting)
0000006D FC000000             331  	call !!_EE_SPI_Read
00000071 1004                 332  	addw sp, #0x04
00000073                      333  	;***      132 :     _settingNumber = g_numberSetting;
00000073                      334  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 132
00000073 342600               335  	movw de, #0x0026
00000076 320000               336  	movw bc, #LOWW(_g_numberSetting)
00000079 300000               337  	movw ax, #LOWW(__settingNumber)
0000007C FC000000             338  	call !!_memcpy
00000080                      339  	;***      133 :     _settingTime = g_timerSetting;
00000080                      340  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 133
00000080 349600               341  	movw de, #0x0096
00000083 320000               342  	movw bc, #LOWW(_g_timerSetting)
00000086 300000               343  	movw ax, #LOWW(__settingTime)
00000089 FC000000             344  	call !!_memcpy
0000008D                      345  	;***      134 :     EEPROM_PROTECT_EN();
0000008D                      346  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 134
0000008D 71030E               347  	clr1 0xFFF0E.0
00000090                      348  	;***      135 : 
00000090                      349  	;***      136 :     //TODO: Start receive command from Raspberry Pi
00000090                      350  	;***      137 :     R_UART2_Receive(g_rx_data, 6);
00000090                      351  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 137
00000090 320600               352  	movw bc, #0x0006
00000093 300000               353  	movw ax, #LOWW(_g_rx_data)
00000096 FC000000             354  	call !!_R_UART2_Receive
0000009A                      355  	;***      138 : 
0000009A                      356  	;***      139 :     //TODO: Start receive data from RS485
0000009A                      357  	;***      140 :     O_RS485_MODE_PIN = 0U;
0000009A                      358  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 140
0000009A 710300               359  	clr1 0xFFF00.0
0000009D                      360  	;***      141 :     R_UART3_Receive(g_uart3_rx_data, 7);
0000009D                      361  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 141
0000009D 320700               362  	movw bc, #0x0007
000000A0 300000               363  	movw ax, #LOWW(_g_uart3_rx_data)
000000A3 FC000000             364  	call !!_R_UART3_Receive
000000A7 F6                   365  	clrw ax
000000A8                      366  	;***      142 :     uint8_t wts, vpcb, vpcb_v = 1;
000000A8                      367  	;***      143 :     sendRS485(0xff, 82, 2, 12);
000000A8                      368  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 143
000000A8 C1                   369  	push ax
000000A9 500C                 370  	mov x, #0x0C
000000AB C1                   371  	push ax
000000AC 5202                 372  	mov c, #0x02
000000AE 3052FF               373  	movw ax, #0xFF52
000000B1 FC000000             374  	call !!_sendRS485
000000B5 1004                 375  	addw sp, #0x04
000000B7                      376  	;***      144 : 
000000B7                      377  	;***      145 :     //TODO: Turn off Hand Sensor LED
000000B7                      378  	;***      146 :     g_pre_color = BLUE;
000000B7                      379  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 146
000000B7 CF000003             380  	mov !LOWW(_g_pre_color), #0x03
000000BB                      381  	;***      147 :     handSensorLED(BLACK);
000000BB                      382  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 147
000000BB F1                   383  	clrb a
000000BC FC000000             384  	call !!_handSensorLED
000000C0                      385  	;***      148 : 
000000C0                      386  	;***      149 :     //TODO: Set default washing mode
000000C0                      387  	;***      150 :     g_machine_mode = HAND_WASHING;
000000C0                      388  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 150
000000C0 E50000               389  	oneb !LOWW(_g_machine_mode)
000000C3 E1                   390  	oneb a
000000C4 9802                 391  	mov [sp+0x02], a
000000C6 9801                 392  	mov [sp+0x01], a
000000C8 9800                 393  	mov [sp+0x00], a
000000CA                      394  .BB@LABEL@3_1:	; bb222
000000CA                      395  	;***      151 : //    sendToRasPi_f(H_SET, OK_ALL, 0x0);
000000CA                      396  	;***      152 : 
000000CA                      397  	;***      153 :     //TODO: Run Initialize Operation
000000CA                      398  	;***      154 : //    main_init_20211111();
000000CA                      399  	;***      155 :     while (1U)
000000CA                      400  	;***      156 :     {
000000CA                      401  	;***      157 :     	realTimeResponse();
000000CA                      402  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 157
000000CA FC000000             403  	call !!_realTimeResponse
000000CE                      404  	;***      158 :     	main_loop_20211111();
000000CE                      405  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 158
000000CE FC000000             406  	call !!_main_loop_20211111
000000D2                      407  	;***      159 : 
000000D2                      408  	;***      160 :     	handSensorLED(g_color);
000000D2                      409  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 160
000000D2 8F0000               410  	mov a, !LOWW(_g_color)
000000D5 FC000000             411  	call !!_handSensorLED
000000D9                      412  	;***      161 : 		UpdateMachineStatus();
000000D9                      413  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 161
000000D9 FC000000             414  	call !!_UpdateMachineStatus
000000DD                      415  	;***      162 :     	if(g_uart2_fault == 1){
000000DD                      416  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 162
000000DD 40000001             417  	cmp !LOWW(_g_uart2_fault), #0x01
000000E1 DF00                 418  	bnz $.BB@LABEL@3_3
000000E3                      419  .BB@LABEL@3_2:	; if_then_bb
000000E3                      420  	;***      163 :     		R_UART2_Stop();
000000E3                      421  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 163
000000E3 FC000000             422  	call !!_R_UART2_Stop
000000E7                      423  	;***      164 :     		delay_ms(10);
000000E7                      424  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 164
000000E7 F7                   425  	clrw bc
000000E8 300A00               426  	movw ax, #0x000A
000000EB FC000000             427  	call !!_delay_ms
000000EF                      428  	;***      165 :     		R_UART2_Start();
000000EF                      429  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 165
000000EF FC000000             430  	call !!_R_UART2_Start
000000F3                      431  	;***      166 :     		g_uart2_fault = 0;
000000F3                      432  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 166
000000F3 F50000               433  	clrb !LOWW(_g_uart2_fault)
000000F6                      434  .BB@LABEL@3_3:	; if_break_bb
000000F6                      435  	;***      167 :     	}
000000F6                      436  	;***      168 : 
000000F6                      437  	;***      169 :     	// Communication with WaterSoftener
000000F6                      438  	;***      170 :     	if(commnunication_flag.rs485_send_to_watersolfner_response_flag){
000000F6                      439  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 170
000000F6 D50000               440  	cmp0 !LOWW(_commnunication_flag+0x0000A)
000000F9 DD00                 441  	bz $.BB@LABEL@3_5
000000FB                      442  .BB@LABEL@3_4:	; if_then_bb23
000000FB F6                   443  	clrw ax
000000FC                      444  	;***      171 :     		sendRS485(0xff, 82, 2, 5);
000000FC                      445  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 171
000000FC C1                   446  	push ax
000000FD 5005                 447  	mov x, #0x05
000000FF C1                   448  	push ax
00000100 5202                 449  	mov c, #0x02
00000102 3052FF               450  	movw ax, #0xFF52
00000105 FC000000             451  	call !!_sendRS485
00000109 1004                 452  	addw sp, #0x04
0000010B                      453  	;***      172 : //    		rx_count++;
0000010B                      454  	;***      173 :     		wts = 1; //Test flag = 1
0000010B                      455  	;***      174 : 			commnunication_flag.rs485_send_to_watersolfner_response_flag = 0;
0000010B                      456  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 174
0000010B F50000               457  	clrb !LOWW(_commnunication_flag+0x0000A)
0000010E E1                   458  	oneb a
0000010F 9800                 459  	mov [sp+0x00], a
00000111                      460  .BB@LABEL@3_5:	; if_break_bb24
00000111                      461  	;***      175 :     	}
00000111                      462  	;***      176 : 		if(commnunication_flag.rs485_send_to_watersolfner_SV1_flag == 1){
00000111                      463  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 176
00000111 40000001             464  	cmp !LOWW(_commnunication_flag+0x0000B), #0x01
00000115 DF00                 465  	bnz $.BB@LABEL@3_9
00000117                      466  .BB@LABEL@3_6:	; if_then_bb30
00000117                      467  	;***      177 :     		// Sand to Water softener SV state
00000117                      468  	;***      178 :     		sendRS485(0xff, 82, 24,(uint32_t) g_io_status.refined.Valve.SV1 == 1?1:0);
00000117                      469  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 178
00000117 360000               470  	movw hl, #LOWW(_g_io_status+0x00001)
0000011A E7                   471  	onew bc
0000011B 318300               472  	bt [hl].0, $.BB@LABEL@3_8
0000011E                      473  .BB@LABEL@3_7:	; bb38
0000011E B3                   474  	decw bc
0000011F                      475  .BB@LABEL@3_8:	; bb39
0000011F F6                   476  	clrw ax
00000120 C1                   477  	push ax
00000121 C3                   478  	push bc
00000122 5218                 479  	mov c, #0x18
00000124 3052FF               480  	movw ax, #0xFF52
00000127 FC000000             481  	call !!_sendRS485
0000012B 1004                 482  	addw sp, #0x04
0000012D                      483  	;***      179 :     		commnunication_flag.rs485_send_to_watersolfner_SV1_flag = 0;
0000012D                      484  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 179
0000012D F50000               485  	clrb !LOWW(_commnunication_flag+0x0000B)
00000130                      486  .BB@LABEL@3_9:	; if_break_bb43
00000130 8800                 487  	mov a, [sp+0x00]
00000132                      488  	;***      180 :     	}
00000132                      489  	;***      181 : 		// Test SV1 for Water Softener
00000132                      490  	;***      182 :     	if(wts != 0){
00000132                      491  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 182
00000132 D1                   492  	cmp0 a
00000133 DF00                 493  	bnz $.BB@LABEL@3_11
00000135                      494  .BB@LABEL@3_10:	; if_else_bb63
00000135                      495  	;***      183 :     		if(ns_delay_ms(&g_Tick.tickWaterSoftenerPCB, 5000)){
00000135                      496  	;***      184 :     			if(wts == 1){
00000135                      497  	;***      185 :     				O_SUPPLY_WATER_PIN_SV1 = ON;
00000135                      498  	;***      186 : //					sendRS485(1, 82, 24,(uint32_t) 1);
00000135                      499  	;***      187 : //					sendRS485(0xff, 82, 24,(uint32_t) 1);
00000135                      500  	;***      188 : 					wts = 2;
00000135                      501  	;***      189 :     			}else{
00000135                      502  	;***      190 :     				O_SUPPLY_WATER_PIN_SV1 = OFF;
00000135                      503  	;***      191 : //    				sendRS485(1, 82, 24,(uint32_t) 0);
00000135                      504  	;***      192 : //					sendRS485(0xff, 82, 24,(uint32_t) 0);
00000135                      505  	;***      193 : 					wts = 0;
00000135                      506  	;***      194 :     			}
00000135                      507  	;***      195 :     		}
00000135                      508  	;***      196 :     	}else{
00000135                      509  	;***      197 :     		g_Tick.tickWaterSoftenerPCB = g_systemTime;
00000135                      510  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 197
00000135 AF0000               511  	movw ax, !LOWW(_g_systemTime+0x00002)
00000138 BF0000               512  	movw !LOWW(_g_Tick+0x0004A), ax
0000013B AF0000               513  	movw ax, !LOWW(_g_systemTime)
0000013E BF0000               514  	movw !LOWW(_g_Tick+0x00048), ax
00000141 EF00                 515  	br $.BB@LABEL@3_15
00000143                      516  .BB@LABEL@3_11:	; if_then_bb49
00000143                      517  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 183
00000143 F6                   518  	clrw ax
00000144 14                   519  	movw de, ax
00000145 328813               520  	movw bc, #0x1388
00000148 300000               521  	movw ax, #LOWW(_g_Tick+0x00048)
0000014B FC000000             522  	call !!_ns_delay_ms
0000014F F7                   523  	clrw bc
00000150 43                   524  	cmpw ax, bc
00000151 DD00                 525  	bz $.BB@LABEL@3_15
00000153                      526  .BB@LABEL@3_12:	; if_then_bb54
00000153 8800                 527  	mov a, [sp+0x00]
00000155                      528  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 184
00000155 91                   529  	dec a
00000156 DF00                 530  	bnz $.BB@LABEL@3_14
00000158                      531  .BB@LABEL@3_13:	; if_then_bb60
00000158                      532  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 185
00000158 717201               533  	set1 0xFFF01.7
0000015B C80002               534  	mov [sp+0x00], #0x02
0000015E EF00                 535  	br $.BB@LABEL@3_15
00000160                      536  .BB@LABEL@3_14:	; if_else_bb
00000160                      537  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 190
00000160 717301               538  	clr1 0xFFF01.7
00000163 F1                   539  	clrb a
00000164 9800                 540  	mov [sp+0x00], a
00000166                      541  .BB@LABEL@3_15:	; if_break_bb65
00000166                      542  	;***      198 :     	}
00000166                      543  	;***      199 : 
00000166                      544  	;***      200 :     	//Valve PCB
00000166                      545  	;***      201 :     	if(commnunication_flag.rs485_send_to_valve_response_flag == 1){
00000166                      546  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 201
00000166 40000001             547  	cmp !LOWW(_commnunication_flag+0x0000C), #0x01
0000016A DF00                 548  	bnz $.BB@LABEL@3_17
0000016C                      549  .BB@LABEL@3_16:	; if_then_bb71
0000016C AEF8                 550  	movw ax, sp
0000016E 040600               551  	addw ax, #0x0006
00000171 B804                 552  	movw [sp+0x04], ax
00000173                      553  	;***      202 :     		// 0xff, 12, {Mode, Valve 1, Valve 2, Valve 3, 1}
00000173                      554  	;***      203 :     		// 0 - Stand alone 1 - Control Valve
00000173                      555  	;***      204 :     		uint8_t _b[5] = {vpcb_v, g_uart3_sendend%2,g_systemTime%2,0,1};
00000173                      556  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 204
00000173 340500               557  	movw de, #0x0005
00000176 320000               558  	movw bc, #SMRLW(.STR@1)
00000179 FC000000             559  	call !!_memcpy
0000017D 8802                 560  	mov a, [sp+0x02]
0000017F 9806                 561  	mov [sp+0x06], a
00000181 E1                   562  	oneb a
00000182 5F0000               563  	and a, !LOWW(_g_uart3_sendend)
00000185 9807                 564  	mov [sp+0x07], a
00000187 AF0000               565  	movw ax, !LOWW(_g_systemTime+0x00002)
0000018A AF0000               566  	movw ax, !LOWW(_g_systemTime)
0000018D 60                   567  	mov a, x
0000018E 5C01                 568  	and a, #0x01
00000190 9808                 569  	mov [sp+0x08], a
00000192 A804                 570  	movw ax, [sp+0x04]
00000194 12                   571  	movw bc, ax
00000195                      572  	;***      205 :     		sendR485_7byte(0xff, 12, _b);
00000195                      573  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 205
00000195 300CFF               574  	movw ax, #0xFF0C
00000198 FC000000             575  	call !!_sendR485_7byte
0000019C                      576  	;***      206 :     		vpcb++;
0000019C                      577  	;***      207 :     		commnunication_flag.rs485_send_to_valve_response_flag  = 0;
0000019C                      578  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 207
0000019C F50000               579  	clrb !LOWW(_commnunication_flag+0x0000C)
0000019F 8801                 580  	mov a, [sp+0x01]
000001A1                      581  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 206
000001A1 81                   582  	inc a
000001A2 9801                 583  	mov [sp+0x01], a
000001A4 EF00                 584  	br $.BB@LABEL@3_19
000001A6                      585  .BB@LABEL@3_17:	; if_else_bb89
000001A6                      586  	;***      208 :     	}else if(commnunication_flag.rs485_get_valve_gesture_flag == 1){
000001A6                      587  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 208
000001A6 40000001             588  	cmp !LOWW(_commnunication_flag+0x0000D), #0x01
000001AA DF00                 589  	bnz $.BB@LABEL@3_19
000001AC                      590  .BB@LABEL@3_18:	; if_then_bb95
000001AC AEF8                 591  	movw ax, sp
000001AE 040B00               592  	addw ax, #0x000B
000001B1 B804                 593  	movw [sp+0x04], ax
000001B3                      594  	;***      209 :     		uint8_t _b[5] = {0,1,0,0,1};
000001B3                      595  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 209
000001B3 340500               596  	movw de, #0x0005
000001B6 320000               597  	movw bc, #SMRLW(.STR@1635)
000001B9 FC000000             598  	call !!_memcpy
000001BD A804                 599  	movw ax, [sp+0x04]
000001BF 12                   600  	movw bc, ax
000001C0                      601  	;***      210 :     		sendR485_7byte(0xff, 1, _b);
000001C0                      602  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 210
000001C0 3001FF               603  	movw ax, #0xFF01
000001C3 FC000000             604  	call !!_sendR485_7byte
000001C7                      605  	;***      211 :     		rx_count++;
000001C7                      606  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 211
000001C7 A00000               607  	inc !LOWW(_rx_count)
000001CA                      608  	;***      212 :     		commnunication_flag.rs485_get_valve_gesture_flag = 0;
000001CA                      609  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 212
000001CA F50000               610  	clrb !LOWW(_commnunication_flag+0x0000D)
000001CD                      611  .BB@LABEL@3_19:	; if_break_bb101
000001CD 8801                 612  	mov a, [sp+0x01]
000001CF                      613  	;***      213 :     	}
000001CF                      614  	;***      214 : 
000001CF                      615  	;***      215 :     	if(vpcb != 0){
000001CF                      616  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 215
000001CF D1                   617  	cmp0 a
000001D0 DF00                 618  	bnz $.BB@LABEL@3_21
000001D2                      619  .BB@LABEL@3_20:	; if_else_bb125
000001D2                      620  	;***      216 :     		if(ns_delay_ms(&g_Tick.tickValvePCB, 5000)){
000001D2                      621  	;***      217 :     			vpcb_v = vpcb_v == 1 ? 0 : 1;
000001D2                      622  	;***      218 :     			vpcb = 0;
000001D2                      623  	;***      219 :     		}
000001D2                      624  	;***      220 :     	}else{
000001D2                      625  	;***      221 :     		g_Tick.tickValvePCB = g_systemTime;
000001D2                      626  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 221
000001D2 AF0000               627  	movw ax, !LOWW(_g_systemTime+0x00002)
000001D5 BF0000               628  	movw !LOWW(_g_Tick+0x0004E), ax
000001D8 AF0000               629  	movw ax, !LOWW(_g_systemTime)
000001DB BF0000               630  	movw !LOWW(_g_Tick+0x0004C), ax
000001DE EF00                 631  	br $.BB@LABEL@3_24
000001E0                      632  .BB@LABEL@3_21:	; if_then_bb107
000001E0                      633  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 216
000001E0 F6                   634  	clrw ax
000001E1 14                   635  	movw de, ax
000001E2 328813               636  	movw bc, #0x1388
000001E5 300000               637  	movw ax, #LOWW(_g_Tick+0x0004C)
000001E8 FC000000             638  	call !!_ns_delay_ms
000001EC F7                   639  	clrw bc
000001ED 43                   640  	cmpw ax, bc
000001EE DD00                 641  	bz $.BB@LABEL@3_24
000001F0                      642  .BB@LABEL@3_22:	; if_then_bb112
000001F0 8802                 643  	mov a, [sp+0x02]
000001F2                      644  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 217
000001F2 91                   645  	dec a
000001F3 F1                   646  	clrb a
000001F4 9801                 647  	mov [sp+0x01], a
000001F6 DF00                 648  	bnz $.BB@LABEL@3_26
000001F8                      649  .BB@LABEL@3_23:	; if_then_bb112.if_break_bb127_crit_edge
000001F8 9802                 650  	mov [sp+0x02], a
000001FA                      651  .BB@LABEL@3_24:	; if_break_bb127
000001FA                      652  	;***      222 :     	}
000001FA                      653  	;***      223 : 
000001FA                      654  	;***      224 :     	//RS485 fault check
000001FA                      655  	;***      225 :     	if(commnunication_flag.rs485_fault == 1){
000001FA                      656  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 225
000001FA 40000001             657  	cmp !LOWW(_commnunication_flag+0x0000E), #0x01
000001FE DF00                 658  	bnz $.BB@LABEL@3_27
00000200                      659  .BB@LABEL@3_25:	; if_then_bb133
00000200                      660  	;***      226 :     		R_UART3_Stop();
00000200                      661  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 226
00000200 FC000000             662  	call !!_R_UART3_Stop
00000204                      663  	;***      227 :     		commnunication_flag.rs485_fault++;
00000204                      664  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 227
00000204 A00000               665  	inc !LOWW(_commnunication_flag+0x0000E)
00000207                      666  	;***      228 :     		g_Tick.tickRS485 = g_systemTime;
00000207                      667  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 228
00000207 AF0000               668  	movw ax, !LOWW(_g_systemTime+0x00002)
0000020A BF0000               669  	movw !LOWW(_g_Tick+0x00052), ax
0000020D AF0000               670  	movw ax, !LOWW(_g_systemTime)
00000210 BF0000               671  	movw !LOWW(_g_Tick+0x00050), ax
00000213 EF00                 672  	br $.BB@LABEL@3_30
00000215                      673  .BB@LABEL@3_26:	; bb118
00000215 E1                   674  	oneb a
00000216 EF00                 675  	br $.BB@LABEL@3_23
00000218                      676  .BB@LABEL@3_27:	; if_else_bb137
00000218                      677  	;***      229 :     	}else if(commnunication_flag.rs485_fault == 2){
00000218                      678  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 229
00000218 40000002             679  	cmp !LOWW(_commnunication_flag+0x0000E), #0x02
0000021C DF00                 680  	bnz $.BB@LABEL@3_30
0000021E                      681  .BB@LABEL@3_28:	; if_then_bb143
0000021E                      682  	;***      230 :     		if(ns_delay_ms(&g_Tick.tickRS485, 500)){
0000021E                      683  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 230
0000021E F6                   684  	clrw ax
0000021F 14                   685  	movw de, ax
00000220 32F401               686  	movw bc, #0x01F4
00000223 300000               687  	movw ax, #LOWW(_g_Tick+0x00050)
00000226 FC000000             688  	call !!_ns_delay_ms
0000022A F7                   689  	clrw bc
0000022B 43                   690  	cmpw ax, bc
0000022C DD00                 691  	bz $.BB@LABEL@3_30
0000022E                      692  .BB@LABEL@3_29:	; if_then_bb148
0000022E                      693  	;***      231 : 				R_UART3_Start();
0000022E                      694  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 231
0000022E FC000000             695  	call !!_R_UART3_Start
00000232                      696  	;***      232 : 				R_UART3_Receive(g_uart3_rx_data, 7);
00000232                      697  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 232
00000232 320700               698  	movw bc, #0x0007
00000235 300000               699  	movw ax, #LOWW(_g_uart3_rx_data)
00000238 FC000000             700  	call !!_R_UART3_Receive
0000023C                      701  	;***      233 : 				commnunication_flag.rs485_fault = 0;
0000023C                      702  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 233
0000023C F50000               703  	clrb !LOWW(_commnunication_flag+0x0000E)
0000023F                      704  .BB@LABEL@3_30:	; if_break_bb152
0000023F                      705  	;***      234 :     		}
0000023F                      706  	;***      235 :     	}
0000023F                      707  	;***      236 : //--------------------------------- Testing code---------------------------------------------------------------
0000023F                      708  	;***      237 : //    	if(ns_delay_ms(&g_Tick.tickCustom[0], 200)){
0000023F                      709  	;***      238 : //    		P6_bit.no3 = ~P6_bit.no3;
0000023F                      710  	;***      239 : //    		O_SUPPLY_WATER_PIN_SV1 = ~O_SUPPLY_WATER_PIN_SV1;
0000023F                      711  	;***      240 : //    	}
0000023F                      712  	;***      241 : //    	if(g_machine_state.user == 1){
0000023F                      713  	;***      242 : //    		HandWashingMode_nostop();
0000023F                      714  	;***      243 : //    	}else{
0000023F                      715  	;***      244 : //    		g_Tick.tickCustom[1] = g_systemTime;
0000023F                      716  	;***      245 : //    	}
0000023F                      717  	;***      246 : 
0000023F                      718  	;***      247 :     	// Check
0000023F                      719  	;***      248 :     	flow_p = I_FLOW_PLUSE_PIN == 1? 1: 0;
0000023F                      720  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 248
0000023F 8D00                 721  	mov a, 0xFFF00
00000241 719C                 722  	mov1 CY, a.1
00000243 E1                   723  	oneb a
00000244 61C8                 724  	skc
00000246                      725  .BB@LABEL@3_31:	; bb160
00000246 F1                   726  	clrb a
00000247                      727  .BB@LABEL@3_32:	; bb162
00000247 9F0000               728  	mov !LOWW(_flow_p), a
0000024A                      729  	;***      249 :     	if(ns_delay_ms(&g_Tick.tickCustom[1], 60000)){
0000024A                      730  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 249
0000024A F6                   731  	clrw ax
0000024B 14                   732  	movw de, ax
0000024C 3260EA               733  	movw bc, #0xEA60
0000024F 300000               734  	movw ax, #LOWW(_g_Tick+0x0008C)
00000252 FC000000             735  	call !!_ns_delay_ms
00000256                      736  	;***      250 : //    		if(O_SUPPLY_WATER_PIN_SV1 == ON){
00000256                      737  	;***      251 : //				g_TickKeeper.SV1_ON_minutes++;
00000256                      738  	;***      252 : //				g_TickKeeper.SV1_OFF_minutes = 0;
00000256                      739  	;***      253 : //			}else{
00000256                      740  	;***      254 : //				g_TickKeeper.SV1_OFF_minutes++;
00000256                      741  	;***      255 : //				g_TickKeeper.SV1_ON_minutes = 0;
00000256                      742  	;***      256 : //			}
00000256                      743  	;***      257 : //			if(O_SPOUT_WATER_PIN_SV2 == ON){
00000256                      744  	;***      258 : //				g_TickKeeper.SV2_ON_minutes++;
00000256                      745  	;***      259 : //				g_TickKeeper.SV2_OFF_minutes = 0;
00000256                      746  	;***      260 : //			}else{
00000256                      747  	;***      261 : //				g_TickKeeper.SV2_OFF_minutes++;
00000256                      748  	;***      262 : //				g_TickKeeper.SV2_ON_minutes = 0;
00000256                      749  	;***      263 : //			}
00000256                      750  	;***      264 :     	}
00000256                      751  	;***      265 :     	if(ns_delay_ms(&g_Tick.tickCustom[2], 15000)){
00000256                      752  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 265
00000256 F6                   753  	clrw ax
00000257 14                   754  	movw de, ax
00000258 32983A               755  	movw bc, #0x3A98
0000025B 300000               756  	movw ax, #LOWW(_g_Tick+0x00090)
0000025E FC000000             757  	call !!_ns_delay_ms
00000262                      758  	;***      266 : //    		if ((g_io_status.refined.FlowValue < g_numberSetting.lowerFlow)
00000262                      759  	;***      267 : //					|| (g_io_status.refined.FlowValue > g_numberSetting.upperFlow)) {
00000262                      760  	;***      268 : //				sendToRasPi_f(H_ALARM, FLOW_SENSOR_ERROR,
00000262                      761  	;***      269 : //						g_io_status.refined.FlowValue);
00000262                      762  	;***      270 : //			}
00000262                      763  	;***      271 :     	}
00000262                      764  	;***      272 :     	if(ns_delay_ms(&g_Tick.tick1s, 1000)){
00000262                      765  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 272
00000262 F6                   766  	clrw ax
00000263 14                   767  	movw de, ax
00000264 32E803               768  	movw bc, #0x03E8
00000267 300000               769  	movw ax, #LOWW(_g_Tick+0x00004)
0000026A FC000000             770  	call !!_ns_delay_ms
0000026E F7                   771  	clrw bc
0000026F 43                   772  	cmpw ax, bc
00000270 DD00                 773  	bz $.BB@LABEL@3_36
00000272                      774  .BB@LABEL@3_33:	; if_then_bb182
00000272                      775  	;***      273 : 
00000272                      776  	;***      274 :     		led_st = led_st == 0?0xff:0x00;
00000272                      777  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 274
00000272 D50000               778  	cmp0 !LOWW(_led_st)
00000275 51FF                 779  	mov a, #0xFF
00000277 61E8                 780  	skz
00000279                      781  .BB@LABEL@3_34:	; bb188
00000279 F1                   782  	clrb a
0000027A                      783  .BB@LABEL@3_35:	; bb190
0000027A 9F0000               784  	mov !LOWW(_led_st), a
0000027D                      785  	;***      275 :     	    uint8_t state = g_uart2_sendend;
0000027D                      786  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 275
0000027D 8F0000               787  	mov a, !LOWW(_g_uart2_sendend)
00000280                      788  	;***      276 :     	    g_crc[6] = crc8_4((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
00000280                      789  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 276
00000280 5294                 790  	mov c, #0x94
00000282 300000               791  	movw ax, #LOWW(_g_timerSetting)
00000285 FC000000             792  	call !!_crc8_4
00000289 9F0000               793  	mov !LOWW(_g_crc+0x00006), a
0000028C                      794  	;***      277 :     	    g_crc[7] = crc8_1((uint8_t *)&g_timerSetting, sizeof(struct Timer_Setting_s) - 2);
0000028C                      795  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 277
0000028C 5294                 796  	mov c, #0x94
0000028E 300000               797  	movw ax, #LOWW(_g_timerSetting)
00000291 FC000000             798  	call !!_crc8_1
00000295 9F0000               799  	mov !LOWW(_g_crc+0x00007), a
00000298                      800  	;***      278 : //    	    switch (g_color) {
00000298                      801  	;***      279 : //				case BLACK:
00000298                      802  	;***      280 : //					g_color = RED;
00000298                      803  	;***      281 : //					break;
00000298                      804  	;***      282 : //				case RED:
00000298                      805  	;***      283 : //					g_color = BLUE;
00000298                      806  	;***      284 : //					break;
00000298                      807  	;***      285 : //				case BLUE:
00000298                      808  	;***      286 : //					g_color = WHITE;
00000298                      809  	;***      287 : //					break;
00000298                      810  	;***      288 : //				default:
00000298                      811  	;***      289 : //					g_color = BLACK;
00000298                      812  	;***      290 : //					break;
00000298                      813  	;***      291 : //			}
00000298                      814  	;***      292 : //    	    dac_out[0]+= 10;
00000298                      815  	;***      293 : 			CVCC_Current_Set(dac_out[0]);
00000298                      816  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 293
00000298 8F0000               817  	mov a, !LOWW(_dac_out)
0000029B FC000000             818  	call !!_R_DAC0_Set_ConversionValue
0000029F                      819  	;***      294 : //			dac_out[1]+= 10;
0000029F                      820  	;***      295 : 			Salt_Analog_Set(dac_out[1]);
0000029F                      821  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 295
0000029F 8F0000               822  	mov a, !LOWW(_dac_out+0x00001)
000002A2 FC000000             823  	call !!_R_DAC1_Set_ConversionValue
000002A6                      824  .BB@LABEL@3_36:	; if_break_bb207
000002A6                      825  	;***      296 :     		if(led_st == 0x00){
000002A6                      826  	;***      297 : 
000002A6                      827  	;***      298 : //    			O_CVCC_ON_PIN = ON;
000002A6                      828  	;***      299 : //    			O_HS_ICL_PIN = 0;
000002A6                      829  	;***      300 : //    			O_HS_IDA_PIN = 1;
000002A6                      830  	;***      301 : //    			handSensorLED(RED);
000002A6                      831  	;***      302 : //    			O_CVCC_ALARM_RS = 1;
000002A6                      832  	;***      303 : //    			O_PUMP_SALT_PIN = ON;
000002A6                      833  	;***      304 : //    			electrolyticOperationON();
000002A6                      834  	;***      305 : //    			g_io_status.refined.Valve.SV4 = 1;
000002A6                      835  	;***      306 : //				g_io_status.refined.Pump2 = 1;
000002A6                      836  	;***      307 : //				g_io_status.refined.Valve.SV5 = 0;
000002A6                      837  	;***      308 : //				g_io_status.refined.Pump1 = 0;
000002A6                      838  	;***      309 : //				g_io_status.refined.SaltLowLevel = 1;
000002A6                      839  	;***      310 : //    			e_send[0]++;
000002A6                      840  	;***      311 : //    			g_numberSetting.upperVoltage1++;
000002A6                      841  	;***      312 : //    			g_numberSetting.crc--;
000002A6                      842  	;***      313 : //    			g_numberSetting.crc2++;
000002A6                      843  	;***      314 : //    			g_numberSetting.lowerFlow++;
000002A6                      844  	;***      315 : //    			g_numberSetting.hello++;
000002A6                      845  	;***      316 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting, 0x000, sizeof(g_numberSetting));
000002A6                      846  	;***      317 : //    			EE_SPI_Write((uint8_t *)&g_numberSetting.crc, 0x800, 6);
000002A6                      847  	;***      318 : //    			EE_SPI_Write((uint8_t *)&g_timerSetting, 0x040, sizeof(g_timerSetting));
000002A6                      848  	;***      319 :     		}else{
000002A6                      849  	;***      320 : //    			O_CVCC_ON_PIN = OFF;
000002A6                      850  	;***      321 : //    			O_HS_ICL_PIN = 1;
000002A6                      851  	;***      322 : //				O_HS_IDA_PIN = 0;
000002A6                      852  	;***      323 : //    			handSensorLED(WHITE);
000002A6                      853  	;***      324 : //    			O_CVCC_ALARM_RS = 0;
000002A6                      854  	;***      325 : //    			O_PUMP_SALT_PIN = OFF;
000002A6                      855  	;***      326 : //    			electrolyticOperationOFF();
000002A6                      856  	;***      327 : //    			g_io_status.refined.Valve.SV4 = 0;
000002A6                      857  	;***      328 : //				g_io_status.refined.Pump2 = 0;
000002A6                      858  	;***      329 : //				g_io_status.refined.Valve.SV5 = 1;
000002A6                      859  	;***      330 : //				g_io_status.refined.Pump1 = 1;
000002A6                      860  	;***      331 : //				g_io_status.refined.SaltLowLevel = 0;
000002A6                      861  	;***      332 : //    			EE_SPI_Read((uint8_t *)&ret_number_setting, 0x000, sizeof(g_numberSetting));
000002A6                      862  	;***      333 : 
000002A6                      863  	;***      334 :     		}
000002A6                      864  	;***      335 :     	}
000002A6                      865  	;***      336 : 
000002A6                      866  	;***      337 : 
000002A6                      867  	;***      338 : //--------------------------------End testing code---------------------------------------------------------
000002A6                      868  	;***      339 : //    	if(g_machine_state.mode == BUSY){
000002A6                      869  	;***      340 : //    		g_machine_state.user = 0;
000002A6                      870  	;***      341 : //    		if(ns_delay_ms(&g_Tick.tickDebouceHandSensor, g_timerSetting.t55_waterDischargeDelay_s*1000)){
000002A6                      871  	;***      342 : //    			g_machine_state.mode = INDIE;
000002A6                      872  	;***      343 : //    		}
000002A6                      873  	;***      344 : //    	}else{
000002A6                      874  	;***      345 : //    		g_Tick.tickDebouceHandSensor = g_systemTime;
000002A6                      875  	;***      346 : //    	}
000002A6                      876  	;***      347 : 
000002A6                      877  	;***      348 : 		if((g_machine_state.mode == WATER_WASHING)|(g_machine_state.mode == INDIE)){
000002A6                      878  	;***      349 : //			nostop_WaterWashingMode();
000002A6                      879  	;***      350 : 		}
000002A6                      880  	;***      351 : //    	InitialOperationModeStart();
000002A6                      881  	;***      352 : 
000002A6                      882  	;***      353 : //    	if(g_color != g_pre_color){
000002A6                      883  	;***      354 : //			O_RS485_MODE_PIN = 1U;
000002A6                      884  	;***      355 : //			uint8_t _uart3 = g_uart3_sendend;
000002A6                      885  	;***      356 : //			send_buf[3]++;
000002A6                      886  	;***      357 : //			R_UART3_Send(send_buf, 7);
000002A6                      887  	;***      358 : //			while(_uart3 == g_uart3_sendend);
000002A6                      888  	;***      359 : //			O_RS485_MODE_PIN = 0U;
000002A6                      889  	;***      360 : //    	}
000002A6                      890  	;***      361 :     	R_WDT_Restart();
000002A6                      891  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 361
000002A6 FC000000             892  	call !!_R_WDT_Restart
000002AA EE0000               893  	br $!.BB@LABEL@3_1
000002AD                      894  _R_MAIN_UserInit:
000002AD                      895  	.STACK _R_MAIN_UserInit = 4
000002AD                      896  	;***      362 :     }
000002AD                      897  	;***      363 :     /* End user code. Do not edit comment generated here */
000002AD                      898  	;***      364 : }
000002AD                      899  	;***      365 : 
000002AD                      900  	;***      366 : /***********************************************************************************************************************
000002AD                      901  	;***      367 : * Function Name: R_MAIN_UserInit
000002AD                      902  	;***      368 : * Description  : This function adds user code before implementing main function.
000002AD                      903  	;***      369 : * Arguments    : None
000002AD                      904  	;***      370 : * Return Value : None
000002AD                      905  	;***      371 : ***********************************************************************************************************************/
000002AD                      906  	;***      372 : void R_MAIN_UserInit(void)
000002AD                      907  	;***      373 : {
000002AD                      908  	;***      374 :     /* Start user code. Do not edit comment generated here */
000002AD                      909  	;***      375 :     EI();
000002AD                      910  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 375
000002AD 717AFA               911  	ei
000002B0                      912  	;***      376 :     R_TAU0_Create();
000002B0                      913  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 376
000002B0 FC000000             914  	call !!_R_TAU0_Create
000002B4                      915  	;***      377 :     R_SAU0_Create();
000002B4                      916  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 377
000002B4 FC000000             917  	call !!_R_SAU0_Create
000002B8                      918  	;***      378 :     R_SAU1_Create();
000002B8                      919  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 378
000002B8 FC000000             920  	call !!_R_SAU1_Create
000002BC                      921  	;***      379 :     R_UART1_Create();
000002BC                      922  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 379
000002BC FC000000             923  	call !!_R_UART1_Create
000002C0                      924  	;***      380 :     R_UART2_Create();
000002C0                      925  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 380
000002C0 FC000000             926  	call !!_R_UART2_Create
000002C4                      927  	;***      381 :     R_UART3_Create();
000002C4                      928  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 381
000002C4 FC000000             929  	call !!_R_UART3_Create
000002C8                      930  	;***      382 :     R_RTC_Create();
000002C8                      931  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 382
000002C8 FC000000             932  	call !!_R_RTC_Create
000002CC                      933  	;***      383 :     R_PORT_Create_UserInit();
000002CC                      934  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 383
000002CC FC000000             935  	call !!_R_PORT_Create_UserInit
000002D0                      936  	;***      384 :     R_CSI01_Create();
000002D0                      937  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 384
000002D0 FC000000             938  	call !!_R_CSI01_Create
000002D4                      939  	;***      385 :     R_CSI00_Create();
000002D4                      940  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 385
000002D4 FC000000             941  	call !!_R_CSI00_Create
000002D8                      942  	;***      386 : 
000002D8                      943  	;***      387 :     R_TAU0_Channel0_Start();
000002D8                      944  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 387
000002D8 FC000000             945  	call !!_R_TAU0_Channel0_Start
000002DC                      946  	;***      388 :     R_UART3_Start();
000002DC                      947  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 388
000002DC FC000000             948  	call !!_R_UART3_Start
000002E0                      949  	;***      389 :     R_UART1_Start();
000002E0                      950  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 389
000002E0 FC000000             951  	call !!_R_UART1_Start
000002E4                      952  	;***      390 :     R_UART2_Start();
000002E4                      953  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 390
000002E4 FC000000             954  	call !!_R_UART2_Start
000002E8                      955  	;***      391 :     R_CSI00_Start();
000002E8                      956  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 391
000002E8 FC000000             957  	call !!_R_CSI00_Start
000002EC                      958  	;***      392 : //    R_CSI01_Start();
000002EC                      959  	;***      393 : 
000002EC                      960  	;***      394 : 
000002EC                      961  	;***      395 :     R_ADC_Create();
000002EC                      962  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 395
000002EC FC000000             963  	call !!_R_ADC_Create
000002F0                      964  	;***      396 :     R_ADC_Set_OperationOn();
000002F0                      965  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 396
000002F0 FC000000             966  	call !!_R_ADC_Set_OperationOn
000002F4                      967  	;***      397 :     R_ADC_Start();
000002F4                      968  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 397
000002F4 FC000000             969  	call !!_R_ADC_Start
000002F8                      970  	;***      398 : 
000002F8                      971  	;***      399 :     R_DAC_Create();
000002F8                      972  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 399
000002F8 FC000000             973  	call !!_R_DAC_Create
000002FC                      974  	;***      400 : 	CVCC_Current_Set(0x0);
000002FC                      975  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 400
000002FC F1                   976  	clrb a
000002FD FC000000             977  	call !!_R_DAC0_Set_ConversionValue
00000301                      978  	;***      401 : 	Salt_Analog_Set(0x0);
00000301                      979  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 401
00000301 F1                   980  	clrb a
00000302 FC000000             981  	call !!_R_DAC1_Set_ConversionValue
00000306                      982  	;***      402 :     R_DAC0_Start();
00000306                      983  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 402
00000306 FC000000             984  	call !!_R_DAC0_Start
0000030A                      985  	;***      403 :     R_DAC1_Start();
0000030A                      986  	.LINE "D:/Chieniwa/E2_Studio/ControlPCB_HWM/src/r_main.c", 403
0000030A EC000000             987  	br !!_R_DAC1_Start
0000030E                      988  	;***      404 :     /* End user code. Do not edit comment generated here */
0000030E                      989  	;***      405 : }
0000030E                      990  	;***      406 : 
0000030E                      991  	;***      407 : /* Start user code for adding. Do not edit comment generated here */
0000030E                      992  	;***      408 : /* End user code. Do not edit comment generated here */
00000000                      993  	.SECTION .data,DATA
00000000                      994  	.ALIGN 2
00000000                      995  _g_error:
00000000 0000                 996  	.DS (2)
00000002                      997  	.ALIGN 2
00000002                      998  _g_adc_ch:
00000002 0000                 999  	.DS (2)
00000004                     1000  _led_st:
00000004 FF                  1001  	.DB 0xFF
00000005                     1002  _send_data:
00000005 23                  1003  	.DB 0x23,0xAB
00000006 AB              
00000007                     1004  _this_size:
00000007 12                  1005  	.DB 0x12
00000008                     1006  _this_size_2:
00000008 12                  1007  	.DB 0x12
00000009                     1008  _send_buf:
00000009 08                  1009  	.DB 0x08,0x01,0x02,0x03,0x04,0x05,0x06
0000000A 01              
0000000B 02              
0000000C 03              
0000000D 04              
0000000E 05              
0000000F 06              
00000010                     1010  	.ALIGN 2
00000010                     1011  _data_crc:
00000010 24770000            1012  	.DB4 0x00007724,0x0000EB28
00000014 28EB0000        
00000018                     1013  _dac_out:
00000018 FF                  1014  	.DB 0xFF,0xFF
00000019 FF              
00000000                     1015  	.SECTION .bss,BSS
00000000                     1016  _g_e_status:
00000000                     1017  	.DS (1)
00000001 00                  1018  	.ALIGN 2
00000002                     1019  _ret_number_setting:
00000002                     1020  	.DS (38)
00000028                     1021  _flow_p:
00000028                     1022  	.DS (1)
00000029                     1023  _salt_h_p:
00000029                     1024  	.DS (1)
0000002A                     1025  _g_eeprom_wren:
0000002A                     1026  	.DS (1)
0000002B                     1027  _receive_data:
0000002B                     1028  	.DS (2)
0000002D 00                  1029  	.ALIGN 2
0000002E                     1030  _receive_setting:
0000002E                     1031  	.DS (38)
00000054                     1032  _set:
00000054                     1033  	.DS (1)
00000055 00                  1034  	.ALIGN 2
00000056                     1035  _rx_data:
00000056                     1036  	.DS (12)
00000062                     1037  	.ALIGN 2
00000062                     1038  _data_f:
00000062                     1039  	.DS (4)
00000066                     1040  	.ALIGN 2
00000066                     1041  _data_f_test:
00000066                     1042  	.DS (4)
0000006A                     1043  	.ALIGN 2
0000006A                     1044  _g_control_buffer_f:
0000006A                     1045  	.DS (6)
00000070                     1046  	.ALIGN 2
00000070                     1047  _g_control_buffer_u32:
00000070                     1048  	.DS (6)
00000076                     1049  _handsensor_status:
00000076                     1050  	.DS (1)
00000077                     1051  _g_handsensor_status:
00000077                     1052  	.DS (2)
00000079                     1053  _g_crc:
00000079                     1054  	.DS (8)
00000081 00                  1055  	.ALIGN 2
00000082                     1056  _g_crc_32:
00000082                     1057  	.DS (32)
000000A2                     1058  _rx_count:
000000A2                     1059  	.DS (1)
00000000                     1060  	.SECTION .const,CONST
00000000                     1061  .STR@1:
00000000 00000000            1062  	.DS (4)
00000004 01                  1063  	.DB 0x01
00000005                     1064  .STR@1635:
00000005 00                  1065  	.DS (1)
00000006 01                  1066  	.DB 0x01
00000007 0000                1067  	.DS (2)
00000009 01                  1068  	.DB 0x01

Section List
Attr     Size                Name

TEXTF               782 (0000030E) .textf
CONST                10 (0000000A) .const
DATA                 26 (0000001A) .data
BSS                 163 (000000A3) .bss

Command Line Parameter
Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\bin\asrl.exe" @C:\Users\CODEP~1\AppData\Local\Temp\$ccrl000\r_main.asm.cmd 

Command File Parameter
-cpu=S3 -dev=D:\Chieniwa\E2_Studio\.eclipse\com.renesas.platform_1435879475\DebugComp\RL78\RL78\Common\DR5F104ML.DVF -define=__RENESAS_VERSION__=0x01100000 -include="C:\Program Files (x86)\Renesas Electronics\CS+\CC\CC-RL\V1.10.00\inc" -include=D:\Chieniwa\E2_Studio\ControlPCB_HWM\generate -character_set=utf8 -prn_path=src -output=D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.obj D:\Chieniwa\E2_Studio\ControlPCB_HWM\HardwareDebug\src\r_main.asm 

